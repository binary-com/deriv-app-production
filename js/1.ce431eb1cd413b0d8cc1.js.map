{"version":3,"sources":["webpack:///./App/Containers/CashierModal/error.jsx","webpack:///./App/Containers/CashierModal/Layout/cashier-container.jsx","webpack:///./App/Containers/CashierModal/email-sent.jsx","webpack:///./App/Containers/CashierModal/send-email.jsx","webpack:///./App/Containers/CashierModal/Withdrawal/withdraw.jsx","webpack:///./App/Containers/CashierModal/withdrawal.jsx"],"names":["Error","onClickButton","props","error","link","window","open","urlFor","undefined","setErrorMessage","className","icon","Array","isArray","this","message","map","idx","key","button_text","has_effect","text","onClick","React","Component","propTypes","PropTypes","object","func","connect","modules","cashier","CashierContainer","Fragment","is_loading","iframe_url","autoHeight","autoHide","autoHeightMax","renderTrackHorizontal","style","display","renderThumbHorizontal","height","iframe_height","src","frameBorder","scrolling","string","oneOfType","number","bool","setVerificationResendClicked","EmailSent","is_resend_clicked","resend_timeout","seconds","localize","resendVerificationEmail","onClickVerification","sendVerificationEmail","SendEmail","is_email_sent","Withdraw","onMount","verification_code","client","config","withdraw","Withdrawal","setActiveTab","container"],"mappings":"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","file":"js/1.ce431eb1cd413b0d8cc1.js","sourcesContent":["import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Button       from 'deriv-components/lib/button';\nimport { urlFor }   from '_common/url';\nimport Icon         from 'Assets/icon.jsx';\nimport { connect }  from 'Stores/connect';\n\nclass Error extends React.Component {\n    onClickButton = () => {\n        if (this.props.error.link) {\n            window.open(urlFor(this.props.error.link, undefined, undefined, true));\n        } else if (typeof this.props.error.onClickButton === 'function') {\n            this.props.error.onClickButton();\n        }\n        this.props.setErrorMessage('');\n    };\n\n    render() {\n        return (\n            <div className='cashier__wrapper'>\n                <Icon icon='IconCashierError' className='cashier-error__icon' />\n                {Array.isArray(this.props.error.message) ?\n                    this.props.error.message.map((message, idx) =>\n                        <p className='cashier-error__text' key={idx}>{message}</p>\n                    )\n                    :\n                    <p className='cashier-error__text'>{this.props.error.message}</p>\n                }\n                {this.props.error.button_text &&\n                <Button\n                    className='btn--primary--default cashier-error__button'\n                    has_effect\n                    text={this.props.error.button_text}\n                    onClick={this.onClickButton}\n                />\n                }\n            </div>\n        );\n    }\n}\n\nError.propTypes = {\n    error          : PropTypes.object,\n    setErrorMessage: PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        setErrorMessage: modules.cashier.setErrorMessage,\n    })\n)(Error);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { Scrollbars } from 'tt-react-custom-scrollbars';\nimport Loading        from '../../../../templates/_common/components/loading.jsx';\n\nclass CashierContainer extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                {this.props.is_loading && <Loading />}\n                {this.props.iframe_url &&\n                <Scrollbars\n                    autoHeight\n                    autoHide\n                    autoHeightMax={550}\n                    renderTrackHorizontal={props => <div {...props} className='track-horizontal' style={{ display: 'none' }} />}\n                    renderThumbHorizontal={props => <div {...props} className='thumb-horizontal' style={{ display: 'none' }} />}\n                >\n                    <iframe\n                        className='cashier__content'\n                        height={this.props.iframe_height}\n                        src={this.props.iframe_url}\n                        frameBorder='0'\n                        scrolling='auto'\n                    />\n                </Scrollbars>\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nCashierContainer.propTypes = {\n    className    : PropTypes.string,\n    iframe_height: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    iframe_url: PropTypes.string,\n    is_loading: PropTypes.bool,\n};\n\nexport default CashierContainer;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { Button }     from 'deriv-components';\nimport Localize       from 'App/Components/Elements/localize.jsx';\nimport { BinaryLink } from 'App/Components/Routes';\nimport { localize }   from 'App/i18n';\nimport Icon           from 'Assets/icon.jsx';\nimport { connect }    from 'Stores/connect';\n\nclass EmailSent extends React.Component {\n    onClickVerification = () => { this.props.setVerificationResendClicked(true); };\n\n    render() {\n        return (\n            <div className='withdraw__email-sent'>\n                <Icon icon='IconEmailSent' className='withdraw__icon' />\n                <p className='withdraw__email-sent-title'><Localize i18n_default_text={'We\\'ve sent you an email.'} /></p>\n                <p className='withdraw__email-sent-text'><Localize i18n_default_text='Please click on the link in the email to access withdrawal.' /></p>\n                <div className='withdraw__email-resend'>\n                    {this.props.is_resend_clicked ?\n                        <React.Fragment>\n                            <p className='withdraw__email-sent-title withdraw__email-sent-title-sub'><Localize i18n_default_text={'Didn\\'t receive the email?'} /></p>\n                            <p className='withdraw__email-sent-text'><Localize i18n_default_text={'Check your spam or junk folder. If it\\'s not there, try resending the email.'} /></p>\n                            <Button\n                                className='btn--secondary btn--secondary--orange withdraw__resend-button'\n                                classNameSpan='withdraw__resend-button-text'\n                                is_disabled={this.props.resend_timeout < 60}\n                                has_effect\n                                text={this.props.resend_timeout < 60 ? localize('Resend email in {{seconds}}s', { seconds: this.props.resend_timeout }) : localize('Resend email')}\n                                onClick={this.props.resendVerificationEmail}\n                            />\n                        </React.Fragment>\n                        :\n                        <BinaryLink className='withdraw__email-resend-text' onClick={this.onClickVerification}>\n                            <Localize i18n_default_text={'Didn\\'t receive the email?'} />\n                        </BinaryLink>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nEmailSent.propTypes = {\n    is_resend_clicked           : PropTypes.bool,\n    resend_timeout              : PropTypes.number,\n    resendVerificationEmail     : PropTypes.func,\n    setVerificationResendClicked: PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        resendVerificationEmail     : modules.cashier.resendVerificationEmail,\n        sendVerificationEmail       : modules.cashier.sendVerificationEmail,\n        setVerificationResendClicked: modules.cashier.setVerificationResendClicked,\n    })\n)(EmailSent);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { Button }     from 'deriv-components';\nimport Localize       from 'App/Components/Elements/localize.jsx';\nimport { localize }   from 'App/i18n';\nimport Icon           from 'Assets/icon.jsx';\nimport { connect }    from 'Stores/connect';\nimport EmailSent      from './email-sent.jsx';\n\nclass SendEmail extends React.Component {\n    render() {\n        return (\n            <div className='cashier__wrapper'>\n                {this.props.is_email_sent ?\n                    <EmailSent\n                        is_email_sent={this.props.is_email_sent}\n                        is_resend_clicked={this.props.is_resend_clicked}\n                        resend_timeout={this.props.resend_timeout}\n                    />\n                    :\n                    <React.Fragment>\n                        <Icon icon='IconAuthenticateWithdrawals' className='withdraw__icon' />\n                        <p className='withdraw__header'><Localize i18n_default_text='To initiate withdrawal, we need to authenticate you via email.' /></p>\n                        <p className='withdraw__text'><Localize i18n_default_text='This is a safeguard against unauthorised withdrawals from your account.' /></p>\n                        <Button\n                            className='btn--primary--default withdraw__verify-button'\n                            classNameSpan='withdraw__verify-button-text'\n                            has_effect\n                            text={localize('Request authentication email')}\n                            onClick={this.props.sendVerificationEmail}\n                        />\n                    </React.Fragment>\n                }\n            </div>\n        );\n    }\n}\n\nSendEmail.propTypes = {\n    is_email_sent        : PropTypes.bool,\n    is_resend_clicked    : PropTypes.bool,\n    resend_timeout       : PropTypes.number,\n    sendVerificationEmail: PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        is_email_sent        : modules.cashier.config.withdraw.verification.is_email_sent,\n        is_resend_clicked    : modules.cashier.config.withdraw.verification.is_resend_clicked,\n        resend_timeout       : modules.cashier.config.withdraw.verification.resend_timeout,\n        sendVerificationEmail: modules.cashier.sendVerificationEmail,\n    })\n)(SendEmail);\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { connect }      from 'Stores/connect';\nimport CashierContainer from '../Layout/cashier-container.jsx';\n\nclass Withdraw extends React.Component {\n    componentDidMount() {\n        this.props.onMount(this.props.verification_code);\n    }\n\n    render() {\n        return (\n            <CashierContainer\n                iframe_height={this.props.iframe_height}\n                iframe_url={this.props.iframe_url}\n                is_loading={this.props.is_loading}\n            />\n        );\n    }\n}\n\nWithdraw.propTypes = {\n    iframe_height: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    iframe_url       : PropTypes.string,\n    is_loading       : PropTypes.bool,\n    onMount          : PropTypes.func,\n    verification_code: PropTypes.string,\n};\n\nexport default connect(\n    ({ client, modules }) => ({\n        verification_code: client.verification_code,\n        iframe_height    : modules.cashier.config.withdraw.iframe_height,\n        iframe_url       : modules.cashier.config.withdraw.iframe_url,\n        is_loading       : modules.cashier.is_loading,\n        onMount          : modules.cashier.onMount,\n    })\n)(Withdraw);\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport Error       from './error.jsx';\nimport SendEmail   from './send-email.jsx';\nimport Withdraw    from './Withdrawal/withdraw.jsx';\n\nclass Withdrawal extends React.Component {\n    componentDidMount() {\n        this.props.setActiveTab(this.props.container);\n    }\n\n    componentWillUnmount() {\n        this.props.setErrorMessage('');\n    }\n\n    render() {\n        if (!this.props.error.message) {\n            return ((this.props.verification_code || this.props.iframe_url) ?\n                <Withdraw /> : <SendEmail />\n            );\n        }\n        return (\n            <Error\n                error={this.props.error}\n                container='withdraw'\n            />\n        );\n    }\n}\n\nWithdrawal.propTypes = {\n    container        : PropTypes.string,\n    error            : PropTypes.object,\n    iframe_url       : PropTypes.string,\n    setActiveTab     : PropTypes.func,\n    verification_code: PropTypes.string,\n};\n\nexport default connect(\n    ({ client, modules }) => ({\n        verification_code: client.verification_code,\n        container        : modules.cashier.config.withdraw.container,\n        error            : modules.cashier.config.withdraw.error,\n        iframe_url       : modules.cashier.config.withdraw.iframe_url,\n        setActiveTab     : modules.cashier.setActiveTab,\n        setErrorMessage  : modules.cashier.setErrorMessage,\n    })\n)(Withdrawal);\n"],"sourceRoot":""}