{"version":3,"sources":["webpack:///./App/Components/Elements/Label/label.jsx","webpack:///./Modules/Reports/Containers/wallet-information.jsx","webpack:///./Modules/Reports/Containers/reports.jsx"],"names":["available_modes","available_sizes","Label","_ref","_classNames","mode","children","_ref$size","size","type","some","m","scale","s","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","classNames","_defineProperty","concat","propTypes","PropTypes","oneOfType","arrayOf","node","oneOf","connect","_ref2","client","balance","currency","is_virtual","loginid","is_currency_ready","Object","keys","getCurrencies","length","react_default","icon","toLowerCase","localize","str","toUpperCase","label","money","amount","Reports","setWrapperRef","_this","wrapper_ref","handleClickOutside","event","contains","target","props","history","push","AppRoutes","trade","React","Component","localStorage","removeItem","this","showBlur","document","addEventListener","toggleReports","hideBlur","removeEventListener","options","_this2","action_bar_items","onClick","title","component","wallet_information","Animations","is_visible","keyname","ref","vertical_tab","header_title","action_bar","action_bar_classname","alignment","classNameHeader","current_path","location","pathname","is_routed","is_full_width","list","routes","forEach","route","default","icon_component","value","path","func","object","bool","ui","hideRouteBlur","is_reports_visible","showRouteBlur","withRouter"],"mappings":"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","file":"js/reports.456aeef852b1be2aa484.js","sourcesContent":["import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst available_modes = [\n    'default',\n    'success',\n    'warn',\n    'danger',\n    'info',\n    'success-invert',\n    'warn-invert',\n];\n\nconst available_sizes = [\n    'regular',\n    'large',\n];\n\nconst Label = ({ mode, children, size = 'regular' }) => {\n    const type = available_modes.some(m => m === mode) ? mode : 'default';\n    const scale = available_sizes.some(s => s === size) ? size : 'regular';\n\n    return (\n        <span className={classNames('label', {\n            [`label--${scale}`]: scale,\n            [`label--${type}`] : type,\n        })}\n        >{children}\n        </span>\n    );\n};\nLabel.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]),\n    mode: PropTypes.oneOf(available_modes),\n};\nexport default Label;\n","import React             from 'react';\nimport Icon              from 'Assets/icon.jsx';\nimport { getCurrencies } from '_common/base/currency_base';\nimport Label             from 'App/Components/Elements/Label/label.jsx';\nimport Localize          from 'App/Components/Elements/localize.jsx';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport { connect }       from 'Stores/connect';\n\nconst WalletInformation = ({\n    currency,\n    balance,\n    is_virtual,\n    loginid,\n}) => {\n    const is_currency_ready = Object.keys(getCurrencies()).length > 0;\n    return (\n        <div className='account-wallet'>\n            {!is_virtual && <Icon icon='IconAccountsCurrency' type={currency.toLowerCase()} />}\n            {is_virtual && <Icon icon='IconDemo' />}\n            <span className='description'>\n                <Localize str={`${is_virtual ? 'Practice' : currency.toUpperCase()} wallet`} />\n            </span>\n            <span className='current-loginid'>{loginid}</span>\n            {is_currency_ready &&\n            <Label mode={`${is_virtual ? 'warn-invert' : 'success-invert'}`} size='large'>\n                <Money amount={balance} currency={currency} />\n            </Label>\n            }\n            {!is_currency_ready && <div />}\n        </div>\n    );\n};\n\nexport default connect(({ client }) => ({\n    balance   : client.balance,\n    currency  : client.currency,\n    is_virtual: client.is_virtual,\n    loginid   : client.loginid,\n}))(WalletInformation);\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { withRouter }    from 'react-router-dom';\nimport { localize }      from 'App/i18n';\nimport { FadeWrapper }   from 'App/Components/Animations';\nimport VerticalTab       from 'App/Components/Elements/VerticalTabs/vertical-tab.jsx';\nimport AppRoutes         from 'Constants/routes';\nimport { connect }       from 'Stores/connect';\nimport WalletInformation from './wallet-information.jsx';\n\nclass Reports extends React.Component {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            this.props.history.push(AppRoutes.trade);\n        }\n    };\n\n    componentDidMount() {\n        // SmartCharts keeps saving layout for ContractPlay even if layouts prop is set to null\n        // As a result, we have to remove it manually for each SmartChart instance in ContractReplay\n        // TODO: Remove this once SmartCharts finds a way to stop ChartIQ from saving layouts to localStorage\n        localStorage.removeItem('layout-contract-replay');\n        this.props.showBlur();\n        document.addEventListener('mousedown', this.handleClickOutside);\n        this.props.toggleReports(true);\n    }\n\n    componentWillUnmount() {\n        this.props.toggleReports(false);\n        this.props.hideBlur();\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    render () {\n        const menu_options = () => {\n            const options = [];\n\n            this.props.routes.forEach(route => {\n                options.push({\n                    default: route.default,\n                    icon   : route.icon_component,\n                    label  : route.title,\n                    value  : route.component,\n                    path   : route.path,\n                });\n            });\n\n            return options;\n        };\n\n        const action_bar_items = [\n            {\n                onClick: () => {\n                    this.props.history.push(AppRoutes.trade);\n                    this.props.toggleReports(false);\n                },\n                icon : 'SettingsIconClose',\n                title: localize('Close'),\n            },\n            {\n                component: () => <WalletInformation />,\n                title    : '',\n            },\n        ];\n        return (\n            <FadeWrapper\n                is_visible={this.props.is_visible}\n                className='reports-page-wrapper'\n                keyname='reports-page-wrapper'\n            >\n                <div className='reports' ref={this.setWrapperRef}>\n                    <VerticalTab\n                        header_title={localize('Reports')}\n                        action_bar={action_bar_items}\n                        action_bar_classname='reports__inset_header'\n                        alignment='center'\n                        classNameHeader='reports__tab-header'\n                        current_path={this.props.location.pathname}\n                        is_routed={true}\n                        is_full_width={true}\n                        list={menu_options()}\n                    />\n                </div>\n            </FadeWrapper>\n        );\n    }\n}\n\nReports.propTypes = {\n    hideBlur     : PropTypes.func,\n    history      : PropTypes.object,\n    is_visible   : PropTypes.bool,\n    location     : PropTypes.object,\n    routes       : PropTypes.arrayOf(PropTypes.object),\n    showBlur     : PropTypes.func,\n    toggleReports: PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hideBlur     : ui.hideRouteBlur,\n        is_visible   : ui.is_reports_visible,\n        showBlur     : ui.showRouteBlur,\n        toggleReports: ui.toggleReports,\n    })\n)(withRouter(Reports));\n"],"sourceRoot":""}