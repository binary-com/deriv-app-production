{"version":3,"sources":["webpack:///./App/Components/Elements/Label/label.jsx","webpack:///./Modules/Reports/Components/empty-trade-history-message.jsx","webpack:///./Modules/Reports/Components/reports-meta.jsx","webpack:///./Modules/Reports/Components/placeholder-component.jsx","webpack:///./App/Containers/ProgressSliderStream/progress-slider-stream.jsx","webpack:///./Modules/Reports/Helpers/profit-loss.js","webpack:///./Modules/Reports/Components/indicative-cell.jsx","webpack:///./Modules/Reports/Components/market-symbol-icon-row.jsx","webpack:///./Modules/Reports/Components/profit_loss_cell.jsx","webpack:///./Modules/Reports/Constants/data-table-constants.js","webpack:///./App/Components/Elements/DataTable/table-cell.jsx","webpack:///./App/Components/Elements/DataTable/table-row-info.jsx","webpack:///./App/Components/Elements/DataTable/table-row.jsx","webpack:///./App/Components/Elements/DataTable/data-table.jsx"],"names":["available_modes","available_sizes","Label","_ref","_classNames","mode","children","_ref$size","size","type","some","m","scale","s","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","classNames","_defineProperty","concat","propTypes","PropTypes","oneOfType","arrayOf","node","oneOf","prop_types__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","Assets_icon_jsx__WEBPACK_IMPORTED_MODULE_2__","EmptyTradeHistoryMessage","has_selected_date","component_icon","localized_message","localized_period_message","Fragment","icon","string","bool","d","__webpack_exports__","ReportsMeta","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","i18n_heading","i18n_message","filter_component","_templates_common_components_loading_jsx__WEBPACK_IMPORTED_MODULE_2__","PlaceholderComponent","props","EmptyMessageComponent","empty_message_component","is_empty","is_loading","func","ProgressSliderStream","id","position","getPositionById","react_default","contract_info","positions_progress_slider","expiry_time","date_expiry","has_result","current_tick","start_time","date_start","ticks_count","tick_count","number","server_time","object","connect","_ref2","modules","portfolio","getProfitOrLoss","value","replace","IndicativeCell","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","movement","amount","React","PureComponent","_this2","setState","_this$props","currency","status","money","Math","abs","localize","MarketSymbolIconRow","payload","show_description","should_show_category_icon","shortcode","info_from_shortcode","Shortcode","extractInfoFromShortcode","Popover","classNameTarget","classNameBubble","alignment","message","getMarketName","underlying","disable_target_icon","underlying_icon","market","display_name","getTradeTypeName","category","isHighLow","shortcode_info","toLowerCase","includes","action_type","width","height","action","ProfitLossCell","data_table_constants_getStatementTableColumnsTemplate","data_table_constants_getProfitTableColumnsTemplate","data_table_constants_getOpenPositionsColumnsTemplate","getStatementTableColumnsTemplate","key","title","col_index","renderCellContent","cell_value","row_obj","market_symbol_icon_row","transaction_id","map","label","deposit","withdrawal","sell","buy","default","Object","keys","find","x","_ref3","has_sign","_ref4","getProfitTableColumnsTemplate","items_count","_ref5","is_footer","item_count","_ref6","_ref7","_ref8","profit_loss_cell","getOpenPositionsColumnsTemplate","_ref9","_ref10","_ref11","_ref12","profit","open-positions__profit-loss--negative","open-positions__profit-loss--positive","_ref13","indicative_cell","is_valid_to_sell","_ref14","progress_slider_stream","TableCell","TableRowInfo","toggleDetails","showDetails","Component","onClick","undefined","statement__row--detail","component","cells","TableRow","columns","is_header","_ref$row_obj","to","cell_content","table_cell","row_class_name","table__row-link","react_router_dom","pathname","from_table_row","table_row_info_TableRowInfo","array","DataTable","data_table_classCallCheck","data_table_possibleConstructorReturn","data_table_getPrototypeOf","resizeDimensions","debounce","window","innerWidth","window_width","el_table_body","clientHeight","clientWidth","onresize","alignHeader","data_source","length","first_body_row","firstChild","scrollbar_offset","el_table_head","offsetWidth","style","paddingRight","index","getRowAction","item","content","table_row","data_table_typeof","_this$props2","footer","onScroll","TableData","index_esm","itemCount","itemSize","rowRenderer","bind","data_table_defineProperty","ref","el","lib","autoHeight","autoHeightMax","autoHide","MobxPropTypes","arrayOrObservableArray"],"mappings":"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","file":"js/default~open_position~1833eefb.83d586de0580c06c2de6.js","sourcesContent":["import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst available_modes = [\n    'default',\n    'success',\n    'warn',\n    'danger',\n    'info',\n    'success-invert',\n    'warn-invert',\n];\n\nconst available_sizes = [\n    'regular',\n    'large',\n];\n\nconst Label = ({ mode, children, size = 'regular' }) => {\n    const type = available_modes.some(m => m === mode) ? mode : 'default';\n    const scale = available_sizes.some(s => s === size) ? size : 'regular';\n\n    return (\n        <span className={classNames('label', {\n            [`label--${scale}`]: scale,\n            [`label--${type}`] : type,\n        })}\n        >{children}\n        </span>\n    );\n};\nLabel.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]),\n    mode: PropTypes.oneOf(available_modes),\n};\nexport default Label;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Icon      from 'Assets/icon.jsx';\n\nconst EmptyTradeHistoryMessage = ({\n    has_selected_date,\n    component_icon,\n    localized_message,\n    localized_period_message,\n}) => (\n    <React.Fragment>\n        <div className='empty-trade-history'>\n            <Icon icon={component_icon} className='empty-trade-history__icon' />\n            <span className='empty-trade-history__text'>\n                {\n                    !has_selected_date ?\n                        localized_message\n                        :\n                        localized_period_message\n                }\n            </span>\n        </div>\n    </React.Fragment>\n);\n\nEmptyTradeHistoryMessage.propTypes = {\n    component_icon          : PropTypes.string,\n    has_selected_date       : PropTypes.bool,\n    localized_message       : PropTypes.string,\n    localized_period_message: PropTypes.string,\n};\n\nexport default EmptyTradeHistoryMessage;\n","import React from 'react';\n\nconst ReportsMeta = ({ i18n_heading, i18n_message, filter_component }) => (\n    <div className='reports__meta'>\n        <div className='reports__meta-description'>\n            <h1 className='reports__meta-description--heading'>\n                { i18n_heading }\n            </h1>\n            <p className='reports__meta-description--paragraph'>\n                { i18n_message }\n            </p>\n        </div>\n        {filter_component &&\n        <div className='reports__meta-filter'>\n            { filter_component }\n        </div>\n        }\n    </div>\n);\n\nexport { ReportsMeta };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Loading   from '../../../templates/_common/components/loading.jsx';\n\nconst PlaceholderComponent = (props) => {\n    const EmptyMessageComponent = props.empty_message_component;\n    return (\n        <React.Fragment>\n            { props.is_empty &&\n            <EmptyMessageComponent\n                component_icon={props.component_icon}\n                has_selected_date={props.has_selected_date}\n                localized_message={props.localized_message}\n            />\n            }\n            {props.is_loading && <Loading />}\n        </React.Fragment>\n    );\n};\n\nPlaceholderComponent.propTypes = {\n    component_icon         : PropTypes.string,\n    empty_message_component: PropTypes.func,\n    has_selected_date      : PropTypes.bool,\n    localized_message      : PropTypes.string,\n};\n\nexport default PlaceholderComponent;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport ProgressSlider        from 'App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-slider.jsx';\nimport { connect }           from 'Stores/connect';\n\nconst ProgressSliderStream = ({\n    id,\n    is_loading,\n    getPositionById,\n}) => {\n    const position = getPositionById(id);\n    if (!position) {\n        return <div />;\n    }\n\n    const { contract_info } = position;\n\n    return <ProgressSlider\n        is_loading={is_loading}\n        expiry_time={contract_info.date_expiry}\n        has_result={false}\n        current_tick={position.current_tick}\n        start_time={contract_info.date_start}\n        ticks_count={contract_info.tick_count}\n    />;\n};\n\nProgressSliderStream.propTypes = {\n    getPositionById: PropTypes.func,\n    id             : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    is_loading     : PropTypes.bool,\n    server_time    : PropTypes.object,\n};\n\nexport default connect(({ modules }) => ({\n    is_loading     : modules.portfolio.is_loading,\n    getPositionById: modules.portfolio.getPositionById,\n}))(ProgressSliderStream);\n","export const getProfitOrLoss = value => +value.replace(/,/g, '') >= 0 ? 'profit' : 'loss';\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport Icon         from 'Assets/icon.jsx';\n\nclass IndicativeCell extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movement: null,\n            amount  : 0,\n        };\n    }\n\n    componentWillReceiveProps(props) {\n        this.setState(() => ({\n            movement: props.amount >= this.state.amount ? 'profit' : 'loss',\n            amount  : props.amount,\n        }));\n    }\n\n    render() {\n        const { amount, currency, status } = this.props;\n        const { movement } = this.state;\n        return (\n            <div className='open-positions__indicative' >\n                <div className='open-positions__indicative--amount'>\n                    <Money amount={Math.abs(amount)} currency={currency} />\n                    {status !== 'no-resale' && amount !== 0 && <Icon icon='IconPriceMove' type={movement} />}\n                </div>\n\n                {status === 'no-resale' &&\n                <div className='open-positions__indicative-no-resale-msg indicative__no-resale-msg'>\n                    {localize('Resale not offered')}\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\nIndicativeCell.propTypes = {\n    amount  : PropTypes.number,\n    currency: PropTypes.string,\n    status  : PropTypes.string,\n};\n\nexport default IndicativeCell;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { Popover }        from 'App/Components/Elements/Popover';\nimport { UnderlyingIcon } from 'App/Components/Elements/underlying-icon.jsx';\nimport Icon               from 'Assets/icon.jsx';\nimport {\n    getMarketName,\n    getTradeTypeName }    from '../Helpers/market-underlying';\nimport Shortcode          from '../Helpers/shortcode';\n\nconst MarketSymbolIconRow = ({ payload, show_description }) => {\n    const should_show_category_icon = typeof payload.shortcode === 'string';\n    const info_from_shortcode = Shortcode.extractInfoFromShortcode(payload.shortcode);\n\n    if (should_show_category_icon && info_from_shortcode) {\n        return (\n            <div className='market-symbol-icon'>\n                <div className='market-symbol-icon-name'>\n                    <Popover\n                        classNameTarget='market-symbol-icon__popover'\n                        classNameBubble='market-symbol-icon__popover-bubble'\n                        alignment='top'\n                        message={getMarketName(info_from_shortcode.underlying)}\n                        disable_target_icon\n                    >\n                        <UnderlyingIcon market={info_from_shortcode.underlying} />\n                    </Popover>\n                    {show_description && payload.display_name}\n                </div>\n\n                <div className='market-symbol-icon-category'>\n                    <Popover\n                        classNameTarget='category-type-icon__popover'\n                        classNameBubble='category-type-icon__popover-bubble'\n                        alignment='top'\n                        message={getTradeTypeName(info_from_shortcode.category)}\n                        disable_target_icon\n                    >\n                        <Icon\n                            icon='IconTradeType'\n                            type={(Shortcode.isHighLow({ shortcode_info: info_from_shortcode }))\n                                ? `${info_from_shortcode.category.toLowerCase()}_barrier`\n                                : info_from_shortcode.category.toLowerCase()}\n                        />\n                    </Popover>\n                    {show_description && info_from_shortcode.category}\n                </div>\n            </div>\n        );\n    } else if (['deposit', 'withdrawal'].includes(payload.action_type)) {\n        return (\n            <div className='market-symbol-icon'>\n                {\n                    payload.action_type === 'deposit' ? (\n                        <Icon icon='IconDeposit' />\n                    ) : (\n                        <Icon icon='IconWithdrawal' />\n                    )\n                }\n            </div>\n        );\n    }\n\n    return (\n        <svg width='32' height='32' className='unknown-icon'>\n            <rect width='32' height='32' />\n        </svg>\n    );\n};\n\nMarketSymbolIconRow.propTypes = {\n    action          : PropTypes.string,\n    payload         : PropTypes.object,\n    show_description: PropTypes.bool,\n};\n\nexport default MarketSymbolIconRow;\n","import React               from 'react';\nimport PropTypes           from 'prop-types';\nimport { getProfitOrLoss } from 'Modules/Reports/Helpers/profit-loss';\n\nconst ProfitLossCell = ({ value, children }) => {\n    const status = getProfitOrLoss(value);\n\n    return (\n        <span className={`amount--${status}`}>\n            {children}\n        </span>\n    );\n};\n\nProfitLossCell.propTypes = {\n    value: PropTypes.string,\n};\n\nexport default ProfitLossCell;\n","import classNames           from 'classnames';\nimport React                from 'react';\nimport Icon                 from 'Assets/icon.jsx';\nimport { localize }         from 'App/i18n';\nimport Label                from 'App/Components/Elements/Label/label.jsx';\nimport Money                from 'App/Components/Elements/money.jsx';\nimport ProgressSliderStream from 'App/Containers/ProgressSliderStream';\nimport { getProfitOrLoss }  from 'Modules/Reports/Helpers/profit-loss';\nimport IndicativeCell       from '../Components/indicative-cell.jsx';\nimport MarketSymbolIconRow  from '../Components/market-symbol-icon-row.jsx';\nimport ProfitLossCell       from '../Components/profit_loss_cell.jsx';\n\nconst getModeFromValue = (key) => {\n    const map = {\n        deposit   : 'warn',\n        withdrawal: 'info',\n        sell      : 'danger',\n        buy       : 'success',\n        default   : 'default',\n    };\n\n    if (Object.keys(map).find(x => x === key)) {\n        return map[key];\n    }\n\n    return map.default;\n};\n\n/* eslint-disable react/display-name, react/prop-types */\nexport const getStatementTableColumnsTemplate = (currency) => [\n    {\n        key              : 'icon',\n        title            : '',\n        col_index        : 'action_type',\n        renderCellContent: ({ cell_value, row_obj }) => (\n            <MarketSymbolIconRow\n                action={cell_value}\n                key={row_obj.transaction_id}\n                payload={row_obj}\n            />\n        ),\n    }, {\n        title    : localize('Ref. ID'),\n        col_index: 'refid',\n    }, {\n        title    : localize('Transaction time'),\n        col_index: 'date',\n    }, {\n        key              : 'mode',\n        title            : localize('Transaction'),\n        col_index        : 'action_type',\n        renderCellContent: ({ cell_value, row_obj }) => (\n            <Label mode={getModeFromValue(cell_value)}>{row_obj.action}</Label>\n        ),\n    }, {\n        title            : localize('Credit/Debit'),\n        col_index        : 'amount',\n        renderCellContent: ({ cell_value }) => <div className={`amount--${getProfitOrLoss(cell_value)}`} ><Money has_sign amount={cell_value.replace(/[,]+/g, '')} currency={currency} /></div>,\n    }, {\n        title            : localize('Balance'),\n        col_index        : 'balance',\n        renderCellContent: ({ cell_value }) => <Money amount={cell_value.replace(/[,]+/g, '')} currency={currency} />,\n    },\n];\nexport const getProfitTableColumnsTemplate = (currency, items_count) => [\n    {\n        key              : 'icon',\n        title            : '',\n        col_index        : 'action_type',\n        renderCellContent: ({ cell_value, row_obj, is_footer }) => {\n            if (is_footer) {\n                return localize('Profit/loss on the last {{item_count}} contracts', { item_count: items_count });\n            }\n\n            return (\n                <MarketSymbolIconRow\n                    action={cell_value}\n                    key={row_obj.transaction_id}\n                    payload={row_obj}\n                />\n            );\n        },\n    }, {\n        title    : localize('Ref. ID'),\n        col_index: 'transaction_id',\n    }, {\n        title    : localize('Buy time'),\n        col_index: 'purchase_time',\n    }, {\n        title            : localize('Buy price'),\n        col_index        : 'buy_price',\n        renderCellContent: ({ cell_value, is_footer }) => {\n            if (is_footer) return '';\n\n            return <Money amount={cell_value} currency={currency} />;\n        },\n    }, {\n        title    : localize('Sell time'),\n        col_index: 'sell_time',\n    }, {\n        title            : localize('Sell price'),\n        col_index        : 'sell_price',\n        renderCellContent: ({ cell_value, is_footer }) => {\n            if (is_footer) return '';\n\n            return <Money amount={cell_value} currency={currency} />;\n        },\n    }, {\n        title            : localize('Profit/Loss'),\n        col_index        : 'profit_loss',\n        renderCellContent: ({ cell_value }) => (\n            <ProfitLossCell value={cell_value}>\n                <Money has_sign amount={cell_value.replace(/[,]+/g, '')} currency={currency} />\n            </ProfitLossCell>\n        ),\n    },\n];\nexport const getOpenPositionsColumnsTemplate = (currency) => [\n    {\n        title            : '',\n        col_index        : 'type',\n        renderCellContent: ({ cell_value, row_obj, is_footer }) => {\n            if (is_footer) return localize('Total');\n\n            return (\n                <MarketSymbolIconRow\n                    action={cell_value}\n                    key={row_obj.id}\n                    payload={row_obj.contract_info}\n                />\n            );\n        },\n    }, {\n        title    : localize('Ref. ID'),\n        col_index: 'reference',\n    }, {\n        title            : localize('Buy price'),\n        col_index        : 'purchase',\n        renderCellContent: ({ cell_value }) => (\n            <Money amount={cell_value} currency={currency} />\n        ),\n    }, {\n        title            : localize('Potential payout'),\n        col_index        : 'payout',\n        renderCellContent: ({ cell_value }) => (\n            cell_value ? <Money amount={cell_value} currency={currency} />\n                : <span>-</span>\n        ),\n    }, {\n        title            : localize('Potential profit/loss'),\n        col_index        : 'profit',\n        renderCellContent: ({ row_obj }) => {\n            if (!row_obj.contract_info || !row_obj.contract_info.profit) return;\n            const profit = row_obj.contract_info.profit;\n            // eslint-disable-next-line consistent-return\n            return (\n                <div className={classNames('open-positions__profit-loss', {\n                    'open-positions__profit-loss--negative': (\n                        profit < 0\n                    ),\n                    'open-positions__profit-loss--positive': (\n                        profit > 0\n                    ),\n                })}\n                >\n                    <Money amount={Math.abs(profit)} currency={currency} />\n                    <div className='open-positions__profit-loss--movement'>\n                        <Icon icon='IconPriceMove' type={profit > 0 ? 'profit' : 'loss'} />\n                    </div>\n                </div>\n            );\n        },\n    }, {\n        title            : localize('Indicative price'),\n        col_index        : 'indicative',\n        renderCellContent: ({ cell_value, row_obj }) => (\n            <IndicativeCell amount={+cell_value} currency={currency} status={row_obj.contract_info && !row_obj.is_valid_to_sell ? 'no-resale' : ''} />\n        ),\n    }, {\n        title            : localize('Remaining time'),\n        col_index        : 'id',\n        renderCellContent: ({ cell_value }) => (\n            <ProgressSliderStream id={cell_value} />\n        ),\n    },\n];\n/* eslint-enable react/display-name, react/prop-types */\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst TableCell = ({ col_index, children }) => (\n    <div className={classNames('table__cell', col_index)}>\n        {children}\n    </div>\n);\n\nTableCell.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.string,\n    ]),\n    col_index: PropTypes.string,\n};\n\nexport default TableCell;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nexport default class TableRowInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showDetails: false,\n        };\n    }\n\n    toggleDetails = () => {\n        if (this.props.replace) {\n            this.setState(state => ({ showDetails: !state.showDetails }));\n        }\n    };\n\n    render() {\n        return (\n            <div\n                onClick={this.props.is_footer || !this.props.replace ? undefined : this.toggleDetails}\n                className={classNames(this.props.className, { 'statement__row--detail': this.state.showDetails })}\n            >\n                {\n                    this.state.showDetails ?\n                        <div>\n                            {this.props.replace.component ?\n                                this.props.replace.component\n                                :\n                                <p>{this.props.replace.message}</p>\n                            }\n                        </div>\n                        : this.props.cells\n                }\n            </div>\n        );\n    }\n}\n\nTableRowInfo.propTypes = {\n    cells    : PropTypes.arrayOf(PropTypes.node),\n    className: PropTypes.string,\n    replace  : PropTypes.object,\n};\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { NavLink }  from 'react-router-dom';\nimport TableCell    from './table-cell.jsx';\nimport TableRowInfo from './table-row-info.jsx';\n\nconst TableRow = ({\n    className,\n    columns,\n    is_footer,\n    is_header,\n    replace,\n    row_obj = {},\n    to,\n}) => {\n    const cells = columns.map(({ col_index, renderCellContent, title, key }) => {\n        let cell_content = title;\n        if (!is_header) {\n            const cell_value = row_obj[col_index] || '';\n            cell_content = renderCellContent\n                ? renderCellContent({ cell_value, col_index, row_obj, is_footer })\n                : cell_value;\n        }\n\n        return (\n            <TableCell col_index={col_index} key={key || col_index}>\n                {cell_content}\n            </TableCell>\n        );\n    });\n\n    const row_class_name = classNames('table__row', { 'table__row-link': to || replace }, { [`${className}__row`]: className });\n\n    return (\n        to ?\n            <NavLink\n                className={row_class_name}\n                to={{\n                    pathname: to,\n                    state   : {\n                        from_table_row: true,\n                    },\n                }}\n            >\n                {cells}\n            </NavLink>\n            :\n            <TableRowInfo\n                className={row_class_name}\n                cells={cells}\n                replace={replace}\n                is_footer={is_footer}\n            />\n    );\n};\n\nTableRow.propTypes = {\n    className: PropTypes.string,\n    columns  : PropTypes.array,\n    is_footer: PropTypes.bool,\n    is_header: PropTypes.bool,\n    replace  : PropTypes.object,\n    row_obj  : PropTypes.object,\n    to       : PropTypes.string,\n};\n\nexport default TableRow;\n","import classNames                     from 'classnames';\nimport debounce                       from 'lodash.debounce';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport { FixedSizeList as List }      from 'react-window';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport TableRow                       from './table-row.jsx';\n\n/* TODO:\n      1. implement sorting by column (ASC/DESC)\n      2. implement filtering per column\n*/\n\nclass DataTable extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            height      : 200,\n            width       : 200,\n            window_width: 1024,\n        };\n    }\n\n    resizeDimensions = debounce(() => {\n        this.setState({\n            width       : (window.innerWidth - this.state.window_width) + this.state.width,\n            window_width: window.innerWidth,\n        });\n    }, 250);\n\n    componentDidMount() {\n        this.setState({\n            height      : this.el_table_body.clientHeight,\n            width       : this.el_table_body.clientWidth,\n            window_width: window.innerWidth,\n        });\n        window.onresize = this.resizeDimensions;\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    componentWillUnmount() {\n        window.onresize = null;\n    }\n\n    componentDidUpdate() {\n        this.alignHeader();\n    }\n\n    alignHeader() {\n        // scrollbar inside table-body can push content (depending on the browser and if mouse is plugged in)\n        if (!this.props.data_source.length) return;\n        const first_body_row   = this.el_table_body.firstChild;\n        const scrollbar_offset = this.el_table_head.offsetWidth - first_body_row.offsetWidth;\n        this.el_table_head.style.paddingRight = `${scrollbar_offset}px`;\n    }\n\n    rowRenderer ({\n        index,       // Index of row\n        style,        // Style object to be applied to row (to position it);\n    }) {\n        const {\n            data_source,\n            className,\n            getRowAction,\n            columns,\n            id } = this.props;\n        const item = data_source[index];\n        const action = getRowAction && getRowAction(item);\n\n        // If row content is complex, consider rendering a light-weight placeholder while scrolling.\n        const content = (\n            <TableRow\n                className={className}\n                row_obj={item}\n                columns={columns}\n                key={id}\n                to={typeof action === 'string' ? action : undefined}\n                replace={typeof action === 'object' ? action : undefined}\n            />\n        );\n\n        return (\n            <div style={style}>\n                {content}\n            </div>\n        );\n    }\n\n    render() {\n        const {\n            children,\n            className,\n            columns,\n            data_source,\n            footer,\n            is_empty,\n            onScroll,\n        } = this.props;\n\n        const TableData =\n\n            <React.Fragment>\n                <List\n                    className={className}\n                    height={this.state.height}\n                    itemCount={data_source.length}\n                    itemSize={63}\n                    width={this.state.width}\n                >\n                    {this.rowRenderer.bind(this)}\n                </List>\n                {children}\n            </React.Fragment>;\n\n        return (\n            <div className={classNames('table', {\n                [`${className}`]         : className,\n                [`${className}__table`]  : className,\n                [`${className}__content`]: className,\n            })}\n            >\n                <div className='table__head' ref={el => { this.el_table_head = el; }}>\n                    <TableRow className={className} columns={columns} is_header />\n                </div>\n                <div\n                    className='table__body'\n                    onScroll={onScroll}\n                    ref={el => { this.el_table_body = el; }}\n                >\n                    {is_empty ?\n                        TableData\n                        :\n                        <Scrollbars\n                            autoHeight\n                            autoHeightMax={this.state.height}\n                            autoHide\n                        >\n                            {TableData}\n                        </Scrollbars>\n                    }\n                </div>\n\n                {footer &&\n                    <div className='table__foot'>\n                        <TableRow\n                            className={className}\n                            row_obj={footer}\n                            columns={columns}\n                            is_footer\n                        />\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nDataTable.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.arrayOf(PropTypes.node),\n    ]),\n    className   : PropTypes.string,\n    columns     : PropTypes.array,\n    data_source : MobxPropTypes.arrayOrObservableArray,\n    footer      : PropTypes.object,\n    getRowAction: PropTypes.func,\n    onScroll    : PropTypes.func,\n};\n\nexport default DataTable;\n"],"sourceRoot":""}