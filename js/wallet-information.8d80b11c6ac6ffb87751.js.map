{"version":3,"sources":["webpack:///./App/Components/Elements/Label/label.jsx","webpack:///./Modules/Reports/Containers/wallet-information.jsx"],"names":["available_modes","available_sizes","Label","_ref","_classNames","mode","children","_ref$size","size","type","some","m","scale","s","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","classNames","_defineProperty","concat","propTypes","PropTypes","oneOfType","arrayOf","node","oneOf","__webpack_require__","r","__webpack_exports__","prop_types__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","Assets_icon_jsx__WEBPACK_IMPORTED_MODULE_2__","App_Components_Elements_Label_label_jsx__WEBPACK_IMPORTED_MODULE_3__","App_Components_Elements_localize_jsx__WEBPACK_IMPORTED_MODULE_4__","App_Components_Elements_money_jsx__WEBPACK_IMPORTED_MODULE_5__","Stores_connect__WEBPACK_IMPORTED_MODULE_6__","Description","currency","is_virtual","i18n_default_text","values","toUpperCase","WalletInformation","_ref2","balance","has_description","has_loginid","is_website_status_ready","loginid","icon","toLowerCase","amount","bool","connect","_ref3","client"],"mappings":"yRAIA,IAAMA,EAAkB,CACpB,UACA,UACA,OACA,SACA,OACA,iBACA,eAGEC,EAAkB,CACpB,UACA,SAGEC,EAAQ,SAAAC,GAA0C,IAAAC,EAAvCC,EAAuCF,EAAvCE,KAAMC,EAAiCH,EAAjCG,SAAiCC,EAAAJ,EAAvBK,YAAuB,IAAAD,EAAhB,UAAgBA,EAC9CE,EAAOT,EAAgBU,KAAK,SAAAC,GAAC,OAAIA,IAAMN,IAAQA,EAAO,UACtDO,EAAQX,EAAgBS,KAAK,SAAAG,GAAC,OAAIA,IAAML,IAAQA,EAAO,UAE7D,OACIM,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAW,SAADd,EAAA,GAAAe,EAAAf,EAAA,UAAAgB,OACZR,GAAUA,GADEO,EAAAf,EAAA,UAAAgB,OAEZX,GAAUA,GAFEL,KAIzBE,IAIVJ,EAAMmB,UAAY,CACdf,SAAUgB,IAAUC,UAAU,CAC1BD,IAAUE,QAAQF,IAAUG,MAC5BH,IAAUG,OAEdpB,KAAMiB,IAAUI,MAAM1B,IAEXE,wCCvCfyB,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,GAAAb,EAAAa,EAAAK,EAAAC,GAAAC,EAAAP,EAAA,GAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,IAAAU,EAAAV,EAAA,IAAAW,EAAAX,EAAA,IAQMY,EAAc,SAAApC,GAAA,IAAGqC,EAAHrC,EAAGqC,SAAH,OAAArC,EAAasC,WAEzB3B,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAUM,kBAAkB,oBAE5B5B,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAUM,kBAAkB,sBAAsBC,OAAQ,CAAEH,SAAUA,EAASI,kBAIjFC,EAAoB,SAAAC,GAQpB,IAPFN,EAOEM,EAPFN,SACAO,EAMED,EANFC,QACAC,EAKEF,EALFE,gBACAC,EAIEH,EAJFG,YACAR,EAGEK,EAHFL,WACAS,EAEEJ,EAFFI,wBACAC,EACEL,EADFK,QAEA,OACIrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACTwB,GAAc3B,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMkB,KAAK,uBAAuB3C,KAAM+B,EAASa,gBAChEZ,GAAc3B,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMkB,KAAK,aAC1BtC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACV+B,EACElC,EAAAC,EAAAC,cAACuB,EAAD,CAAaC,SAAUA,EAAUC,WAAYA,IAE7C3B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAAyBuB,EAASI,gBAGzDK,GAAenC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmBkC,GAClDD,GACDpC,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAO9B,KAAI,GAAAe,OAAKqB,EAAa,cAAgB,kBAAoBjC,KAAK,SAClEM,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOiB,OAAQP,EAASP,SAAUA,MAGpCU,GAA2BpC,EAAAC,EAAAC,cAAA,cAKzC6B,EAAkBxB,UAAY,CAC1B2B,gBAAiB1B,IAAUiC,KAC3BN,YAAiB3B,IAAUiC,MAGhBC,sBAAQ,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAH,MAAiB,CACpCX,QAAyBW,EAAOX,QAChCP,SAAyBkB,EAAOlB,SAChCC,WAAyBiB,EAAOjB,WAChCS,wBAAyBQ,EAAOR,wBAChCC,QAAyBO,EAAOP,UALrBK,CAMXX","file":"js/wallet-information.8d80b11c6ac6ffb87751.js","sourcesContent":["import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst available_modes = [\n    'default',\n    'success',\n    'warn',\n    'danger',\n    'info',\n    'success-invert',\n    'warn-invert',\n];\n\nconst available_sizes = [\n    'regular',\n    'large',\n];\n\nconst Label = ({ mode, children, size = 'regular' }) => {\n    const type = available_modes.some(m => m === mode) ? mode : 'default';\n    const scale = available_sizes.some(s => s === size) ? size : 'regular';\n\n    return (\n        <span className={classNames('label', {\n            [`label--${scale}`]: scale,\n            [`label--${type}`] : type,\n        })}\n        >{children}\n        </span>\n    );\n};\nLabel.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]),\n    mode: PropTypes.oneOf(available_modes),\n};\nexport default Label;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport Icon              from 'Assets/icon.jsx';\nimport Label             from 'App/Components/Elements/Label/label.jsx';\nimport Localize          from 'App/Components/Elements/localize.jsx';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport { connect }       from 'Stores/connect';\n\nconst Description = ({ currency, is_virtual }) => (\n    is_virtual ?\n        <Localize i18n_default_text='Practice wallet' />\n        :\n        <Localize i18n_default_text='{{currency}} wallet' values={{ currency: currency.toUpperCase() }} />\n\n);\n\nconst WalletInformation = ({\n    currency,\n    balance,\n    has_description,\n    has_loginid,\n    is_virtual,\n    is_website_status_ready,\n    loginid,\n}) => {\n    return (\n        <div className='account-wallet'>\n            {!is_virtual && <Icon icon='IconAccountsCurrency' type={currency.toLowerCase()} />}\n            {is_virtual && <Icon icon='IconDemo' />}\n            <span className='description'>\n                { has_description ?\n                    <Description currency={currency} is_virtual={is_virtual} />\n                    :\n                    <span className='description__currency'>{currency.toUpperCase()}</span>\n                }\n            </span>\n            {has_loginid && <span className='current-loginid'>{loginid}</span>}\n            {is_website_status_ready &&\n            <Label mode={`${is_virtual ? 'warn-invert' : 'success-invert'}`} size='large'>\n                <Money amount={balance} currency={currency} />\n            </Label>\n            }\n            {!is_website_status_ready && <div />}\n        </div>\n    );\n};\n\nWalletInformation.propTypes = {\n    has_description: PropTypes.bool,\n    has_loginid    : PropTypes.bool,\n};\n\nexport default connect(({ client }) => ({\n    balance                : client.balance,\n    currency               : client.currency,\n    is_virtual             : client.is_virtual,\n    is_website_status_ready: client.is_website_status_ready,\n    loginid                : client.loginid,\n}))(WalletInformation);\n"],"sourceRoot":""}