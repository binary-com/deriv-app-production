{"version":3,"sources":["webpack:///./App/Components/Elements/SideMenu/side-menu-headers.jsx","webpack:///./App/Components/Elements/SideMenu/side-menu.jsx","webpack:///./Modules/Account/Helpers/flatten.js","webpack:///./Modules/Account/Sections/Security/AccountLimits/account-limits-info.jsx","webpack:///./Modules/Account/Containers/account.jsx"],"names":["MainHeaderLayout","children","className","SubHeaderLayout","MainHeaders","items","handleSubroute","active_title","map","item","key","title","classNames","is_disabled","onChange","icon","SubHeaders","selected","is_routed","SideMenuHeaders","props","history","push","subroutes","path","this","header_title","filter","React","PureComponent","SideMenuHeadersWithRouter","withRouter","SideMenuTitle","SideMenu","action_bar","action_bar_classname","id","is_full_width","is_loading","list","sub_list","selected_content","tab_container_classname","action_bar_items","component","propTypes","PropTypes","arrayOf","shape","oneOfType","func","object","string","onClick","bool","default","label","value","isRequired","currency_name_map","BTC","localize","BCH","ETH","ETC","LTC","UST","USB","USD","AUD","EUR","GBP","AccountLimitsInfo","currency","is_virtual","type","toLowerCase","i18n_default_text","values","currency_name","toUpperCase","DemoMessage","lazy","fallback_content","AppRoutes","personal_details","Account","state","is_high_risk_client","setWrapperRef","node","wrapper_ref","handleClickOutside","event","contains","target","classList","trade","BinarySocket","wait","then","account_status","is_high_risk","setState","enableRouteMode","document","addEventListener","toggleAccount","disableRouteMode","removeEventListener","arr","routes","i","concat","route","location","pathname","test","to","forEach","menu_item","financial_assessment","account_limits","find","sub_route","is_visible","keyname","ref","alignment","Component","connect","client","ui","getRiskAssessment","disableRouteModal","setRouteModal","is_account_settings_visible","toggleAccountSettings"],"mappings":"o/BAQA,IAAMA,EAAmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,yBAAKC,UAAU,iCAAiCD,IAErFE,EAAkB,SAAC,GAAD,IAAGF,EAAH,EAAGA,SAAH,OAAkB,yBAAKC,UAAU,gCAAgCD,IAEnFG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,eAAgBC,EAA1B,EAA0BA,aAA1B,OAChB,oCACKF,EAAMG,KAAI,SAAAC,GAAI,OACX,yBAAKC,IAAKD,EAAKE,MAAOT,UAAU,aAC5B,kBAAC,IAAD,CACIO,KAAMA,EACNP,UAAWU,IAAW,oBAAqB,CACvC,4BAA+BH,EAAKE,QAAUJ,EAC9C,8BAA+BE,EAAKI,cAExCC,SAAUR,GAEV,kBAAC,IAAD,CACIS,KAAK,mBACLb,UAAU,2BAQ5Bc,EAAa,SAAC,GAAD,IAAGX,EAAH,EAAGA,MAAOS,EAAV,EAAUA,SAAUG,EAApB,EAAoBA,SAAUC,EAA9B,EAA8BA,UAA9B,OACf,kBAAC,IAAD,CACIb,MAAOA,EACPS,SAAUA,EACVG,SAAUA,EACVC,UAAWA,KAIbC,E,yQACFb,eAAiB,SAAAW,GAAY,MACS,EAAKG,MAA/Bb,EADiB,EACjBA,aAAcc,EADG,EACHA,QAElBJ,EAASN,QAAUJ,GACnBc,EAAQC,KAAKL,EAASM,UAAU,GAAGC,O,kSAIlC,MACwEC,KAAKL,MAA1Eb,EADH,EACGA,aAAcO,EADjB,EACiBA,SAAUG,EAD3B,EAC2BA,SAAUZ,EADrC,EACqCA,MAAOqB,EAD5C,EAC4CA,aAAcR,EAD1D,EAC0DA,UACzDK,EAAYlB,EAAMsB,QAAO,SAAAlB,GAAI,OAAIA,EAAKE,QAAUJ,KAAc,GAAGgB,UAEvE,OACI,oCACI,kBAAC,EAAD,KACKG,GACG,yBAAKxB,UAAU,sBACX,wBAAIA,UAAU,oBAAoBwB,IAG1C,kBAAC,EAAD,CAAarB,MAAOA,EAAOC,eAAgBmB,KAAKnB,eAAgBC,aAAcA,KAElF,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAYF,MAAOkB,EAAWT,SAAUA,EAAUG,SAAUA,EAAUC,UAAWA,W,8BAxBvEU,IAAMC,eA+B9BC,EAA4BC,YAAWZ,G,ooCClE7C,IAAMa,EAAgB,SAAC,GAAD,IAAGrB,EAAH,EAAGA,MAAH,OAAgB,wBAAIT,UAAU,oBAAoBS,IAElEsB,E,wcACO,MAcDR,KAAKL,MAZLb,EAFC,EAEDA,aACA2B,EAHC,EAGDA,WACAC,EAJC,EAIDA,qBACAT,EALC,EAKDA,aACAU,EANC,EAMDA,GACAC,EAPC,EAODA,cACAnB,EARC,EAQDA,UACAoB,EATC,EASDA,WACAC,EAVC,EAUDA,KACAC,EAXC,EAWDA,SACAC,EAZC,EAYDA,iBACAC,EAbC,EAaDA,wBAIEC,EAAmB,GAAH,SACfT,GADe,CAElB,CACIU,UAJU,kBAAM,kBAAC,EAAD,CAAejC,MAAO8B,EAAiB9B,YAQ/D,OACI,kBAAC,IAAD,CAAmB0B,cAAeA,GAC7BC,EACG,kBAAC,IAAD,MACA,oCACI,kBAAC,EAAD,CACI/B,aAAcA,EACdmB,aAAcA,EACdrB,MAAOkC,EACPtB,SAAUwB,EACVvB,UAAWA,EACXJ,SAAU,eAEd,kBAAC,IAAD,CACIoB,WAAYS,EACZR,qBAAsBA,EACtBC,GAAIA,EACJ/B,MAAOmC,EACPtB,UAAWA,EACXD,SAAUwB,EACVC,wBAAyBA,W,8BA7C9Bd,IAAMC,eAsD7BI,EAASY,UAAY,CACjBX,WAAYY,IAAUC,QAClBD,IAAUE,MAAM,CACZJ,UAAWE,IAAUG,UAAU,CAACH,IAAUI,KAAMJ,IAAUK,SAC1DpC,KAAW+B,IAAUM,OACrBC,QAAWP,IAAUI,KACrBvC,MAAWmC,IAAUM,UAG7BjB,qBAAsBW,IAAUM,OAChChB,GAAsBU,IAAUM,OAChCf,cAAsBS,IAAUQ,KAChCf,KAAsBO,IAAUC,QAC5BD,IAAUE,MAAM,CACZO,QAAST,IAAUQ,KACnBvC,KAAS+B,IAAUM,OACnBI,MAASV,IAAUM,OACnB5B,KAASsB,IAAUM,OACnBK,MAASX,IAAUG,UAAU,CAACH,IAAUI,KAAMJ,IAAUK,YAE9DO,WACFjB,iBAAkBK,IAAUK,QAGjBlB,Q,qYCxFR,I,QCMD0B,EAAoB,CACtBC,IAAKC,mBAAS,WACdC,IAAKD,mBAAS,gBACdE,IAAKF,mBAAS,SACdG,IAAKH,mBAAS,iBACdI,IAAKJ,mBAAS,YACdK,IAAKL,mBAAS,UACdM,IAAKN,mBAAS,eACdO,IAAKP,mBAAS,aACdQ,IAAKR,mBAAS,qBACdS,IAAKT,mBAAS,QACdU,IAAKV,mBAAS,mBAIZW,EAAoB,SAAC,GAAD,IACtBC,EADsB,EACtBA,SACAC,EAFsB,EAEtBA,WAFsB,OAItB,qCACMA,GACE,oCACI,kBAAC,IAAD,CACIxE,UAAU,6BACVa,KAAK,uBACL4D,KAAMF,EAASG,gBAEnB,uBAAG1E,UAAU,oCACT,kBAAC,IAAD,CACI2E,kBAAkB,oDAClBC,OAAQ,CACJC,cAAepB,EAAkBc,EAASO,eAC1CP,SAAeA,EAASO,qBAUpDR,EAAkB3B,UAAY,CAC1B4B,SAAY3B,IAAUM,OACtBsB,WAAY5B,IAAUQ,MAGXkB,Q,+yBCtCf,IAAMS,EAAcC,gBAAK,kBAAM,4CAEzBC,EAAmB,CACrB3D,KAAW4D,IAAUC,iBACrBzC,UAAWqC,EACXtE,MAAWkD,mBAAS,qBAGlByB,E,yQACFC,MAAQ,CACJC,qBAAqB,EACrBlD,YAAqB,G,EAGzBmD,cAAgB,SAACC,GACb,EAAKC,YAAcD,G,EAGvBE,mBAAqB,SAACC,IACd,EAAKF,aAAgB,EAAKA,YAAYG,SAASD,EAAME,SAAYF,EAAME,OAAOC,UAAUF,SAAS,2BACjG,EAAK1E,MAAMC,QAAQC,KAAK8D,IAAUa,Q,6SAItB,WAChBC,IAAaC,KAAK,YAAa,sBAAsBC,MAAK,WACtD,GAAI,EAAKhF,MAAMiF,eAAgB,CAC3B,IAAMb,EAAsB,EAAKpE,MAAMkF,aACvC,EAAKC,SAAS,CAAEf,sBAAqBlD,YAAY,QAGzDb,KAAKL,MAAMoF,kBACXC,SAASC,iBAAiB,YAAajF,KAAKmE,oBAC5CnE,KAAKL,MAAMuF,eAAc,K,6CAIzBlF,KAAKL,MAAMuF,eAAc,GACzBlF,KAAKL,MAAMwF,mBACXH,SAASI,oBAAoB,YAAapF,KAAKmE,sB,+BAGzC,IFzDSkB,EAAG,EEyDZ,SACsCrF,KAAK8D,MAAzCC,EADF,EACEA,oBAAqBlD,EADvB,EACuBA,WAEvBf,GF5DSuF,EE4DgBrF,KAAKL,MAAM2F,OAAOvG,KAAI,SAAAwG,GAAC,OAAIA,EAAEzF,cF5DtC,MAAG0F,OAAH,UAAaH,KE6D/BrE,EAAmBlB,EAAUI,QAAO,SAAAuF,GAAK,OAAIA,EAAM1F,OAAS,EAAKJ,MAAM+F,SAASC,YAAU,GAK9F,GAJK3E,IACDA,EAAmBlB,EAAU,GAC7BE,KAAKL,MAAMC,QAAQC,KAAK8D,IAAUC,oBAEjC/C,IAAekD,GAAuB,0DAA0D6B,KAAK5E,EAAiBjB,MAAO,OAAO,kBAAC,IAAD,CAAU8F,GAAG,MAGtJ7F,KAAKL,MAAM2F,OAAOQ,SAAQ,SAACC,GACC,iBAApBA,EAAU7G,QACV6G,EAAU3G,aAAe2E,GAEL,YAApBgC,EAAU7G,OACV6G,EAAUjG,UAAUgG,SAAQ,SAAAL,GACpBA,EAAM1F,OAAS4D,IAAUqC,uBACzBP,EAAMrG,aAAe2E,SAMrC,IAAM7C,EAAmB,CACrB,CACIU,QAAS,WACL,EAAKjC,MAAMC,QAAQC,KAAK8D,IAAUa,QAEtClF,KAAO,iBACPJ,MAAOkD,mBAAS,WAIQpB,EAAiBjB,OAAS4D,IAAUsC,gBAEhE/E,EAAiBrB,KAAK,CAClBsB,UAAW,kBAAM,kBAAC,EAAD,CAAkB6B,SAAU,EAAKrD,MAAMqD,SAAUC,WAAY,EAAKtD,MAAMsD,gBAtC3F,IA0CSnE,EAAiBkB,KAAKL,MAAM2F,OACtCY,MAAK,SAAAT,GAAK,OAAIA,EAAM3F,UAChBoG,MAAK,SAAAC,GAAS,OAAIA,EAAUjH,QAAU8B,EAAiB9B,YAFxDA,MAIR,OACI,kBAAC,IAAD,CACIkH,WAAYpG,KAAKL,MAAMyG,WACvB3H,UAAU,uBACV4H,QAAQ,wBAER,yBAAK5H,UAAU,UAAU6H,IAAKtG,KAAKgE,eAC/B,kBAAC,EAAD,CACIlF,aAAcA,EACd2B,WAAYS,EACZR,qBAAqB,wBACrB6F,UAAU,SACV7C,iBAAkBA,EAClBzD,aAAcmC,mBAAS,YACvB3C,WAAW,EACXmB,eAAe,EACfC,WAAYA,EACZC,KAAMd,KAAKL,MAAM2F,OACjBtE,iBAAkBA,EAClBD,SAAUjB,EACVmB,wBAAwB,kC,8BApG1Bd,IAAMqG,WA4G5B3C,EAAQzC,UAAY,CAChB+D,iBAAkB9D,IAAUI,KAC5BsD,gBAAkB1D,IAAUI,KAC5B7B,QAAkByB,IAAUK,OAC5B0E,WAAkB/E,IAAUQ,KAC5B6D,SAAkBrE,IAAUK,OAC5B4D,OAAkBjE,IAAUC,QAAQD,IAAUK,QAC9CwD,cAAkB7D,IAAUI,MAGjBgF,mBACX,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,GAAX,MAAqB,CACjB/B,eAAmB8B,EAAO9B,eAC1B5B,SAAmB0D,EAAO1D,SAC1B6B,aAAmB6B,EAAO7B,aAC1B5B,WAAmByD,EAAOzD,WAC1B2D,kBAAmBF,EAAOE,kBAC1BzB,iBAAmBwB,EAAGE,kBACtB9B,gBAAmB4B,EAAGG,cACtBV,WAAmBO,EAAGI,4BACtB7B,cAAmByB,EAAGK,yBAVfP,CAYbnG,YAAWuD,I","file":"js/account.c2ac4fd0458594d07d18.js","sourcesContent":["import classNames         from 'classnames';\nimport React              from 'react';\nimport { withRouter }     from 'react-router-dom';\nimport Icon               from 'Assets/icon.jsx';\nimport {\n    VerticalTabHeaders,\n    VerticalTabHeader }   from '../VerticalTabs';\n\nconst MainHeaderLayout = ({ children }) => <div className='side-menu__main-header-layout'>{children}</div>;\n\nconst SubHeaderLayout = ({ children }) => <div className='side-menu__sub-header-layout'>{children}</div>;\n\nconst MainHeaders = ({ items, handleSubroute, active_title }) => (\n    <>\n        {items.map(item => (\n            <div key={item.title} className='side-menu'>\n                <VerticalTabHeader\n                    item={item}\n                    className={classNames('side-menu__header', {\n                        'side-menu__header--active'  : item.title === active_title,\n                        'side-menu__header--disabled': item.is_disabled,\n                    })}\n                    onChange={handleSubroute}\n                >\n                    <Icon\n                        icon='IconChevronRight'\n                        className='side-menu__icon'\n                    />\n                </VerticalTabHeader>\n            </div>\n        ))}\n    </>\n);\n\nconst SubHeaders = ({ items, onChange, selected, is_routed }) => (\n    <VerticalTabHeaders\n        items={items}\n        onChange={onChange}\n        selected={selected}\n        is_routed={is_routed}\n    />\n);\n\nclass SideMenuHeaders extends React.PureComponent {\n    handleSubroute = selected => {\n        const { active_title, history } = this.props;\n\n        if (selected.title !== active_title) {\n            history.push(selected.subroutes[0].path);\n        }\n    }\n\n    render() {\n        const { active_title, onChange, selected, items, header_title, is_routed } = this.props;\n        const subroutes = items.filter(item => item.title === active_title)[0].subroutes;\n\n        return (\n            <>\n                <MainHeaderLayout>\n                    {header_title &&\n                        <div className='side-menu__heading'>\n                            <h1 className='side-menu__title'>{header_title}</h1>\n                        </div>\n                    }\n                    <MainHeaders items={items} handleSubroute={this.handleSubroute} active_title={active_title} />\n                </MainHeaderLayout>\n                <SubHeaderLayout>\n                    <SubHeaders items={subroutes} onChange={onChange} selected={selected} is_routed={is_routed} />\n                </SubHeaderLayout>\n            </>\n        );\n    }\n}\n\nconst SideMenuHeadersWithRouter = withRouter(SideMenuHeaders);\n\nexport { SideMenuHeadersWithRouter as SideMenuHeaders };\n","import PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { SideMenuHeaders }       from './side-menu-headers.jsx';\nimport {\n    VerticalTabContentContainer,\n    VerticalTabLayout }          from '../VerticalTabs';\nimport Loading                   from '../../../../templates/app/components/loading.jsx';\n\nconst SideMenuTitle = ({ title }) => (<h1 className='side-menu__title'>{title}</h1>);\n\nclass SideMenu extends React.PureComponent {\n    render() {\n        const {\n            active_title,\n            action_bar,\n            action_bar_classname,\n            header_title,\n            id,\n            is_full_width,\n            is_routed,\n            is_loading,\n            list,\n            sub_list,\n            selected_content,\n            tab_container_classname,\n        } = this.props;\n\n        const Component = () => <SideMenuTitle title={selected_content.title} />;\n        const action_bar_items = [\n            ...action_bar,\n            {\n                component: Component,\n            },\n        ];\n\n        return (\n            <VerticalTabLayout is_full_width={is_full_width}>\n                {is_loading ?\n                    <Loading /> :\n                    <>\n                        <SideMenuHeaders\n                            active_title={active_title}\n                            header_title={header_title}\n                            items={list}\n                            selected={selected_content}\n                            is_routed={is_routed}\n                            onChange={()=>{}}\n                        />\n                        <VerticalTabContentContainer\n                            action_bar={action_bar_items}\n                            action_bar_classname={action_bar_classname}\n                            id={id}\n                            items={sub_list}\n                            is_routed={is_routed}\n                            selected={selected_content}\n                            tab_container_classname={tab_container_classname}\n                        />\n                    </>\n                }\n            </VerticalTabLayout>\n        );\n    }\n}\n\nSideMenu.propTypes = {\n    action_bar: PropTypes.arrayOf(\n        PropTypes.shape({\n            component: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n            icon     : PropTypes.string,\n            onClick  : PropTypes.func,\n            title    : PropTypes.string,\n        })\n    ),\n    action_bar_classname: PropTypes.string,\n    id                  : PropTypes.string,\n    is_full_width       : PropTypes.bool,\n    list                : PropTypes.arrayOf(\n        PropTypes.shape({\n            default: PropTypes.bool,\n            icon   : PropTypes.string,\n            label  : PropTypes.string,\n            path   : PropTypes.string,\n            value  : PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n        })\n    ).isRequired,\n    selected_content: PropTypes.object,\n};\n\nexport default SideMenu;\n","export const flatten = arr => [].concat(...arr);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Icon         from 'Assets/icon.jsx';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport { localize } from 'App/i18n';\n\nconst currency_name_map = {\n    BTC: localize('Bitcoin'),\n    BCH: localize('Bitcoin Cash'),\n    ETH: localize('Ether'),\n    ETC: localize('Ether Classic'),\n    LTC: localize('Litecoin'),\n    UST: localize('Tether'),\n    USB: localize('Binary Coin'),\n    USD: localize('US Dollar'),\n    AUD: localize('Australian Dollar'),\n    EUR: localize('Euro'),\n    GBP: localize('Pound Sterling'),\n\n};\n\nconst AccountLimitsInfo = ({\n    currency,\n    is_virtual,\n}) => (\n    <>\n        {!is_virtual &&\n            <>\n                <Icon\n                    className='account__inset_header-icon'\n                    icon='IconAccountsCurrency'\n                    type={currency.toLowerCase()}\n                />\n                <p className='account__inset_header-subheading'>\n                    <Localize\n                        i18n_default_text='For your {{currency_name}} ({{currency}}) account'\n                        values={{\n                            currency_name: currency_name_map[currency.toUpperCase()],\n                            currency     : currency.toUpperCase(),\n                        }}\n                    />\n                </p>\n\n            </>\n        }\n    </>\n);\n\nAccountLimitsInfo.propTypes = {\n    currency  : PropTypes.string,\n    is_virtual: PropTypes.bool,\n};\n\nexport default AccountLimitsInfo;\n","import PropTypes         from 'prop-types';\nimport React, { lazy }   from 'react';\nimport {\n    withRouter,\n    Redirect }           from 'react-router-dom';\nimport SideMenu          from 'App/Components/Elements/SideMenu';\nimport { FadeWrapper }   from 'App/Components/Animations';\nimport { localize }      from 'App/i18n';\nimport AppRoutes         from 'Constants/routes';\nimport { connect }       from 'Stores/connect';\nimport BinarySocket      from '_common/base/socket_base';\nimport { flatten }       from '../Helpers/flatten';\nimport AccountLimitInfo  from '../Sections/Security/AccountLimits/account-limits-info.jsx';\nimport 'Sass/app/modules/account.scss';\n\nconst DemoMessage = lazy(() => import(/* webpackChunkName: 'demo_message' */ 'Modules/Account/Sections/ErrorMessages/DemoMessage'));\n\nconst fallback_content = {\n    path     : AppRoutes.personal_details,\n    component: DemoMessage,\n    title    : localize('Personal details'),\n};\n\nclass Account extends React.Component {\n    state = {\n        is_high_risk_client: false,\n        is_loading         : true,\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && !event.target.classList.contains('dc-dropdown-list__item')) {\n            this.props.history.push(AppRoutes.trade);\n        }\n    };\n\n    componentDidMount() {\n        BinarySocket.wait('authorize', 'get_account_status').then(() => {\n            if (this.props.account_status) {\n                const is_high_risk_client = this.props.is_high_risk;\n                this.setState({ is_high_risk_client, is_loading: false });\n            }\n        });\n        this.props.enableRouteMode();\n        document.addEventListener('mousedown', this.handleClickOutside);\n        this.props.toggleAccount(true);\n    }\n\n    componentWillUnmount() {\n        this.props.toggleAccount(false);\n        this.props.disableRouteMode();\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    render () {\n        const { is_high_risk_client, is_loading } = this.state;\n\n        const subroutes      = flatten(this.props.routes.map(i => i.subroutes));\n        let selected_content = subroutes.filter(route => route.path === this.props.location.pathname)[0];\n        if (!selected_content) { // fallback\n            selected_content = subroutes[0];\n            this.props.history.push(AppRoutes.personal_details);\n        }\n        if (!is_loading && !is_high_risk_client && /proof-of-identity|proof-of-address|financial-assessment/.test(selected_content.path)) return <Redirect to='/' />;\n\n        // TODO: modify account route to support disabled\n        this.props.routes.forEach((menu_item) => {\n            if (menu_item.title === 'Verification') {\n                menu_item.is_disabled = !is_high_risk_client;\n            }\n            if (menu_item.title === 'Profile') {\n                menu_item.subroutes.forEach(route => {\n                    if (route.path === AppRoutes.financial_assessment) {\n                        route.is_disabled = !is_high_risk_client;\n                    }\n                });\n            }\n        });\n\n        const action_bar_items = [\n            {\n                onClick: () => {\n                    this.props.history.push(AppRoutes.trade);\n                },\n                icon : 'ModalIconClose',\n                title: localize('Close'),\n            },\n        ];\n\n        const is_account_limits_route = selected_content.path === AppRoutes.account_limits;\n        if (is_account_limits_route) {\n            action_bar_items.push({\n                component: () => <AccountLimitInfo currency={this.props.currency} is_virtual={this.props.is_virtual} />,\n            });\n        }\n\n        const { title: active_title } = this.props.routes\n            .find(route => route.subroutes\n                .find(sub_route => sub_route.title === selected_content.title));\n\n        return (\n            <FadeWrapper\n                is_visible={this.props.is_visible}\n                className='account-page-wrapper'\n                keyname='account-page-wrapper'\n            >\n                <div className='account' ref={this.setWrapperRef}>\n                    <SideMenu\n                        active_title={active_title}\n                        action_bar={action_bar_items}\n                        action_bar_classname='account__inset_header'\n                        alignment='center'\n                        fallback_content={fallback_content}\n                        header_title={localize('Settings')}\n                        is_routed={true}\n                        is_full_width={true}\n                        is_loading={is_loading}\n                        list={this.props.routes}\n                        selected_content={selected_content}\n                        sub_list={subroutes}\n                        tab_container_classname='account__tab_container'\n                    />\n                </div>\n            </FadeWrapper>\n        );\n    }\n}\n\nAccount.propTypes = {\n    disableRouteMode: PropTypes.func,\n    enableRouteMode : PropTypes.func,\n    history         : PropTypes.object,\n    is_visible      : PropTypes.bool,\n    location        : PropTypes.object,\n    routes          : PropTypes.arrayOf(PropTypes.object),\n    toggleAccount   : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        account_status   : client.account_status,\n        currency         : client.currency,\n        is_high_risk     : client.is_high_risk,\n        is_virtual       : client.is_virtual,\n        getRiskAssessment: client.getRiskAssessment,\n        disableRouteMode : ui.disableRouteModal,\n        enableRouteMode  : ui.setRouteModal,\n        is_visible       : ui.is_account_settings_visible,\n        toggleAccount    : ui.toggleAccountSettings,\n    })\n)(withRouter(Account));\n"],"sourceRoot":""}