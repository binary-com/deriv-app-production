{"version":3,"sources":["webpack:///./App/Containers/CashierModal/error.jsx","webpack:///./App/Containers/CashierModal/virtual.jsx","webpack:///./App/Containers/CashierModal/Layout/cashier-container.jsx","webpack:///./App/Containers/CashierModal/deposit.jsx"],"names":["onClickButton","button_text","footer","className","header","message","button_link","Error","address_line_1","address_postcode","localize","address_state","email","phone","residence","clearErrorMessage","closeCashierModal","toggleCashierModal","acceptTNC","tncApproval","AccountError","props","details","map","error_fields","join","interpolation","escapeValue","propTypes","error","connect","modules","setErrorMessage","this","setTimeout","Virtual","has_real_account","client","openRealAccountSignup","CashierContainer","display","iframe_url","PropTypes","string","is_loading","Deposit","setActiveTab","container","onMount","is_virtual","Fragment","iframe_height","React","Component","object","oneOfType","number","bool","func","cashier","config","deposit"],"mappings":"uyCAUuB,sBAInBA,IAJmB,OAKnBC,IALmB,QAMnBC,gBANmB,EAQnB,gBAAK,EAAU,cACX,WAAM,OAAI,IAAC,cAAX,OAA8BC,UAAU,oBAD5C,IAEKC,cAAU,KAAI,wBAAJ,UACVC,wBAAc,GAAU,wBAAb,UACXC,yBAEG,GAAS,GAAC,kBADd,KAEI,UAAIA,sBACJ,GAASN,GAHb,uBAII,UAAO,wBAJX,GAMI,EAAM,QAAS,EAAf,SAA6BC,GAKzB,kBAAU,QACV,UAASD,aACT,KAHJ,6BAII,UAAO,wBAnBnB,QAsBY,EAAO,OAAJ,SA9BI,IAAvB,2B,mCAkCMO,K,wNAGEC,IAA2B,QAFhB,uCAGXC,aAAkBC,CAClBC,aAAc,mBAAY,aAC1BC,eAA2B,iDAC3BC,iBAA2B,mBAAD,mBAC1BC,cAAkBJ,mBAAS,kB,0FAG/BV,mBAAgB,yBAGX,2B,gDACD,EAAKe,4B,EAGTC,qBAEI,oBAAWC,W,oBAGfF,4B,iCAIAG,sB,iBAAY,oGACCC,OADD,M,OAER,OAFQ,SAEHnB,kBAFG,6D,mBAkGhBO,O,0OA7Fa,G,EAAA,E,aACL,MAAIa,W,IAEA,E,OAGY,YAAM,MAAEV,MAAS,MACjB,mBAAmB,MAAiB,cAAC,GAA5B,OAFb,mDAGI,YAAe,cAAKV,IAHxB,CAII,kBAAqB,6DAG7B,iC,uDAEAoB,MAGQ,uBAEQ,MAAiB,cAAC,GAClB,0BACI,yCACI,QAAK,IADT,mBAEI,kBAFJ,qEAGI,WAAO,KAHX,mBAII,IAAI,EACJ,UAAK,OAND,gBALxB,0BAgBI,gEAIR,6B,6CAEAA,MAGQ,sBAEkB,MAAiB,cAAE,GAA7B,OADJ,mBAEUC,gCAEE,0BAAmB,oCADvB,KAEI,kBAAQ,uFACJC,IAAQ,KAAO,mBAAwBC,IAAI,cAAK,uBAAUC,8CAAV,OAAyCC,CACzFC,aAAa,MAAE,8BAAEC,SAAa,sBAAf,WAFX,eAMZ,mBAIZ,IAAW,cAAC,KACZ,kBAAoBX,6CAEpB,YACI,4BACI,mBAAiB,kBACjB,YAAU,mBACN,qBACI,OAAG,IADP,mBAEI,kBAFJ,gCAGI,WAAO,KAHX,mBAII,IAAI,EACJ,UAAK,OAND,gBAFhB,0BAvBZ,iDAwCAI,MAGQ,oBACA,EAAaV,kBAAQ,GAJ7B,gCAOA,iC,8CAEAU,MAAe,QACf,uBArFR,kC,yCA2FFQ,E,CACFC,IAAK,WAELZ,aAHJ,iBAMA,gBAAea,IACX,wBAAGC,IAAH,MAAsB,6BAClBC,QAAoBD,QACpBd,OAFkB,MAAtB,CAIFV,gBALF,0B,2CAC0B,C,s9BCvKlB,EAAKc,EAALY,MAAA,sBAAAA,MAAA,aACAC,cAAgBb,W,0CAGX,4BAAM,MAEP,EACI,kBAAK,WAAU,qBAAf,UACI,kDAAI,kBAAU,OAAd,UACI,iCAAU,kBAAmB,MADjC,UAGMA,iDAEK,kBAAU,KAAb,kBACI,2CAAU,yBAAkB,2DADhC,UAEI,oCACU,kBAAkB,KAHhC,kBAKA,oEAAK,kBAAU,kCANnB,kBASA,4EACO,IAAS,cAAC,OAAb,UACI,kCAAU,kBAAmB,yCADjC,UAGA,oCACI,kBAAU,KACV,kBAFJ,oHAGI,IAAMX,cAAS,KACf,UAAS,wBACT,YAAO,EATf,KAhBhB,6C,2CAmCRyB,O,wOAAQP,E,CACJQ,eAEAnB,YAAkB,CAHtB,0BAMA,sBACI,4BAAGoB,IAAH,MAAqB,6BACjBD,QAAgB,OAChBE,OACArB,OAHJ,wCAKFkB,sBANF,wB,2CACyB,C,0xCCzBzBI,O,0OAvBY,G,EAAC,EAIO,aACA,iBACA,yBAAuB,uBAAAlB,kBAAK,oFAAI,EAAgB,cAAU,IAAmB,sBAAO,YAAEmB,WAAS,4BAAX,6BAApD,MAAJ,CAHhC,oBAIiF,sBAAO,YAAEA,WAAS,4BAAX,6BAApD,MAAJ,sBAKxB,IAAM,cAAUC,SAHpB,CAII,UAAW,mBACX,YAAU,oBAXlB,IAJR,sBAqBH,gB,qDAGLF,E,CACIpC,eAKAsC,EAAYC,UAAUC,CACtBC,UAAU,IAAW,OAPzB,qDAUA,eAAeL,O,y7BClCTM,E,mdAEEZ,KAAKZ,MAAMyB,aAAab,KAAKZ,MAAM0B,WACnCd,KAAKZ,MAAM2B,Y,+BAIX,OAAIf,KAAKZ,MAAM4B,WACJ,kBAAC,IAAD,MAGP,kBAAC,IAAMC,SAAP,KACKjB,KAAKZ,MAAMQ,MAAMxB,QACd,kBAAC,IAAD,CACIwB,MAAOI,KAAKZ,MAAMQ,QAGtB,kBAAC,IAAD,CACIsB,cAAelB,KAAKZ,MAAM8B,cAC1BV,WAAYR,KAAKZ,MAAMoB,WACvBG,WAAYX,KAAKZ,MAAMuB,mB,8BApBzBQ,IAAMC,WA4B5BR,EAAQjB,UAAY,CAChBmB,UAAeL,IAAUC,OACzBd,MAAea,IAAUY,OACzBH,cAAeT,IAAUa,UAAU,CAC/Bb,IAAUc,OACVd,IAAUC,SAEdF,WAAcC,IAAUC,OACxBC,WAAcF,IAAUe,KACxBR,WAAcP,IAAUe,KACxBT,QAAcN,IAAUgB,KACxBZ,aAAcJ,IAAUgB,MAGb5B,uBACX,gBAAGO,EAAH,EAAGA,OAAQN,EAAX,EAAWA,QAAX,MAA0B,CACtBkB,WAAeZ,EAAOY,WACtBF,UAAehB,EAAQ4B,QAAQC,OAAOC,QAAQd,UAC9ClB,MAAeE,EAAQ4B,QAAQC,OAAOC,QAAQhC,MAC9CsB,cAAepB,EAAQ4B,QAAQC,OAAOC,QAAQV,cAC9CV,WAAeV,EAAQ4B,QAAQC,OAAOC,QAAQpB,WAC9CG,WAAeb,EAAQ4B,QAAQf,WAC/BI,QAAejB,EAAQ4B,QAAQX,QAC/BF,aAAef,EAAQ4B,QAAQb,gBATxBhB,CAWbe","file":"js/2.1e251c0be77adf5ee0bc.js","sourcesContent":["import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { Button }   from 'deriv-components';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport ButtonLink   from 'App/Components/Routes/button-link.jsx';\nimport { localize } from 'App/i18n';\nimport Icon         from 'Assets/icon.jsx';\nimport { WS }       from 'Services';\nimport { connect }  from 'Stores/connect';\n\nconst ErrorComponent = ({\n    header,\n    message,\n    button_link,\n    onClickButton,\n    button_text,\n    footer,\n}) => (\n    <div className='cashier__wrapper'>\n        <Icon icon='IconCashierError' className='cashier-error__icon' />\n        {header && <h2 className='cashier-error__header'>{header}</h2>}\n        {message && <p className='cashier__paragraph'>{message}</p>}\n        {button_link &&\n        <ButtonLink\n            className='cashier-error__button'\n            to={button_link}\n            onClick={onClickButton}\n            primary\n        >\n            <span className='btn__text'>{button_text}</span>\n        </ButtonLink>\n        }\n        {!button_link && button_text &&\n            <Button\n                className='cashier-error__button'\n                onClick={onClickButton}\n                text={button_text}\n                primary\n            />\n        }\n        {footer && <h2 className='cashier-error__footer'>{footer}</h2>}\n    </div>\n);\n\nclass Error extends React.Component {\n    error_fields = {\n        address_city    : localize('Town/City'),\n        address_line_1  : localize('First line of home address'),\n        address_postcode: localize('Postal Code/ZIP'),\n        address_state   : localize('State/Province'),\n        email           : localize('Email address'),\n        phone           : localize('Telephone'),\n        residence       : localize('Country of Residence'),\n    };\n\n    onClickButton = () => {\n        if (typeof this.props.error.onClickButton === 'function') {\n            this.props.error.onClickButton();\n        }\n        this.clearErrorMessage();\n    }\n\n    closeCashierModal = () => {\n        this.onClickButton();\n        this.props.toggleCashierModal();\n    }\n\n    clearErrorMessage = () => {\n        this.props.setErrorMessage('');\n    };\n\n    acceptTNC = async () => {\n        await WS.tncApproval();\n        this.onClickButton();\n    };\n\n    render() {\n        let AccountError;\n        switch (this.props.error.code) {\n            case 'InvalidToken':\n                AccountError = (\n                    <ErrorComponent\n                        header={localize('Identity confirmation failed')}\n                        message={<Localize i18n_default_text='It looks like your link is incorrect or no longer valid.' />}\n                        onClickButton={this.onClickButton}\n                        button_text={localize('Request a new link')}\n                    />\n                );\n                break;\n            case 'ASK_TNC_APPROVAL':\n                AccountError = (\n                    <ErrorComponent\n                        header={localize('Our terms and conditions have changed')}\n                        message={\n                            <Localize\n                                i18n_default_text='Please accept our updated <0>terms and conditions</0> to continue.'\n                                components={[ (\n                                    <a\n                                        key={0}\n                                        className='link'\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        href='https://www.deriv.com/terms-and-conditions/#general'\n                                    />\n                                ) ]}\n                            />\n                        }\n                        onClickButton={this.acceptTNC}\n                        button_text={localize('I accept')}\n                    />\n                );\n                break;\n            case 'ASK_FIX_DETAILS':\n                AccountError = (\n                    <ErrorComponent\n                        header={localize('Update your personal details')}\n                        message={\n                            <React.Fragment>\n                                <Localize i18n_default_text={'We can\\'t validate your personal details because there is some information missing.'} />&nbsp;\n                                {this.props.error.fields ?\n                                    <Localize\n                                        i18n_default_text={'Please update your {{details}} to continue.'}\n                                        values={{\n                                            details      : this.props.error.fields.map(field => (this.error_fields[field] || field)).join(', '),\n                                            interpolation: { escapeValue: false },\n                                        }}\n                                    />\n                                    :\n                                    <Localize i18n_default_text={'Please update your details to continue.'} />\n                                }\n                            </React.Fragment>\n                        }\n                        button_link='/account/personal-details'\n                        onClickButton={this.closeCashierModal}\n                        button_text={localize('Update my details')}\n                        footer={\n                            <Localize\n                                i18n_default_text='Need help? <0>Contact us</0>.'\n                                components={[ (\n                                    <a\n                                        key={0}\n                                        className='link'\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        href='https://www.deriv.com/help-centre/'\n                                    />\n                                ) ]}\n                            />\n                        }\n                    />\n                );\n                break;\n            case 'WrongResponse':\n                AccountError = (\n                    <ErrorComponent\n                        header={this.props.error.message}\n                        onClickButton={this.onClickButton}\n                        button_text={localize('Try again')}\n                    />\n                );\n                break;\n            default:\n                AccountError = <ErrorComponent header={this.props.error.message} />;\n                break;\n        }\n        return AccountError;\n    }\n}\n\nError.propTypes = {\n    error             : PropTypes.object,\n    setErrorMessage   : PropTypes.func,\n    toggleCashierModal: PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        setErrorMessage   : modules.cashier.setErrorMessage,\n        toggleCashierModal: ui.toggleCashierModal,\n    })\n)(Error);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { Button }   from 'deriv-components';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport { localize } from 'App/i18n';\nimport { connect }  from 'Stores/connect';\n\nclass Virtual extends React.Component {\n    onClickSignup = () => {\n        this.props.toggleCashierModal();\n        setTimeout(this.props.openRealAccountSignup, 500);\n    };\n\n    render = () => {\n        return (\n            <div className='cashier__wrapper cashier__center-align-wrapper'>\n                <div className='cashier__center-align-content'>\n                    <h2 className='cashier-error__header cashier__virtual-header'>\n                        <Localize i18n_default_text={'You\\'re currently using a demo account'} />\n                    </h2>\n                    {this.props.has_real_account ?\n                        <React.Fragment>\n                            <p className='cashier__paragraph cashier__text'>\n                                <Localize i18n_default_text='You need to switch to a real money account to use this feature.' />\n                                <br />\n                                <Localize i18n_default_text='You can do this by selecting a real account from the Account Switcher.' />\n                            </p>\n                            <div className='cashier__account-switch-icon' />\n                        </React.Fragment>\n                        :\n                        <React.Fragment>\n                            <p className='cashier__paragraph cashier__text'>\n                                <Localize i18n_default_text={'You need a real money account to use this feature. It\\'s easy to create a real money account and start trading.'} />\n                            </p>\n                            <Button\n                                className='cashier-error__button'\n                                has_effect\n                                text={localize('Create my real account')}\n                                onClick={this.onClickSignup}\n                                primary\n                            />\n                        </React.Fragment>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nVirtual.propTypes = {\n    has_real_account     : PropTypes.bool,\n    openRealAccountSignup: PropTypes.func,\n    toggleCashierModal   : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        has_real_account     : client.has_any_real_account,\n        openRealAccountSignup: ui.openRealAccountSignup,\n        toggleCashierModal   : ui.toggleCashierModal,\n    })\n)(Virtual);\n\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { ThemedScrollbars } from 'deriv-components';\nimport Loading              from '../../../../templates/_common/components/loading.jsx';\n\nclass CashierContainer extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                {this.props.is_loading && <Loading />}\n                {this.props.iframe_url &&\n                <ThemedScrollbars\n                    autoHide\n                    autoHeightMax={550}\n                    renderTrackHorizontal={props => <div {...props} className='track-horizontal' style={{ display: 'none' }} />}\n                    renderThumbHorizontal={props => <div {...props} className='thumb-horizontal' style={{ display: 'none' }} />}\n                >\n                    <iframe\n                        className='cashier__content'\n                        height={this.props.iframe_height}\n                        src={this.props.iframe_url}\n                        frameBorder='0'\n                        scrolling='auto'\n                    />\n                </ThemedScrollbars>\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nCashierContainer.propTypes = {\n    className    : PropTypes.string,\n    iframe_height: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    iframe_url: PropTypes.string,\n    is_loading: PropTypes.bool,\n};\n\nexport default CashierContainer;\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { connect }      from 'Stores/connect';\nimport Error            from './error.jsx';\nimport Virtual          from './virtual.jsx';\nimport CashierContainer from './Layout/cashier-container.jsx';\n\nclass Deposit extends React.Component {\n    componentDidMount() {\n        this.props.setActiveTab(this.props.container);\n        this.props.onMount();\n    }\n\n    render() {\n        if (this.props.is_virtual) {\n            return <Virtual />;\n        }\n        return (\n            <React.Fragment>\n                {this.props.error.message ?\n                    <Error\n                        error={this.props.error}\n                    />\n                    :\n                    <CashierContainer\n                        iframe_height={this.props.iframe_height}\n                        iframe_url={this.props.iframe_url}\n                        is_loading={this.props.is_loading}\n                    />\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nDeposit.propTypes = {\n    container    : PropTypes.string,\n    error        : PropTypes.object,\n    iframe_height: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    iframe_url  : PropTypes.string,\n    is_loading  : PropTypes.bool,\n    is_virtual  : PropTypes.bool,\n    onMount     : PropTypes.func,\n    setActiveTab: PropTypes.func,\n};\n\nexport default connect(\n    ({ client, modules }) => ({\n        is_virtual   : client.is_virtual,\n        container    : modules.cashier.config.deposit.container,\n        error        : modules.cashier.config.deposit.error,\n        iframe_height: modules.cashier.config.deposit.iframe_height,\n        iframe_url   : modules.cashier.config.deposit.iframe_url,\n        is_loading   : modules.cashier.is_loading,\n        onMount      : modules.cashier.onMount,\n        setActiveTab : modules.cashier.setActiveTab,\n    })\n)(Deposit);\n"],"sourceRoot":""}