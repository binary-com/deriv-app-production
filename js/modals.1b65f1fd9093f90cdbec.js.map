{"version":3,"sources":["webpack:///./App/Components/Elements/FullPageModal/full-page-modal.jsx","webpack:///./App/Components/Elements/Modals/UnsupportedContractModal/unsupported-contract-modal.jsx","webpack:///./App/Components/Elements/Modals/MarketUnavailableModal/market-unavailable.jsx","webpack:///./App/Components/Elements/Modals/DenialOfServiceModal/denial-of-service.jsx","webpack:///./App/Components/Elements/Modals/ServicesErrorModal/constants.js","webpack:///./App/Components/Elements/Modals/ServicesErrorModal/services-error-modal.jsx","webpack:///./App/Containers/Modals/modals.jsx"],"names":["_this","_possibleConstructorReturn","is_closed_on_cancel","_getPrototypeOf2","_getPrototypeOf","FullPageModal","call","apply","this","concat","args","handleCancel","props","onCancel","handleConfirm","onConfirm","is_visible","key","value","children","confirm_button_text","_this$props","cancel_button_text","is_loading","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","react_transition_group__WEBPACK_IMPORTED_MODULE_3__","appear","enter","enterDone","exit","unmountOnExit","className","classNames","deriv_components_lib_button__WEBPACK_IMPORTED_MODULE_4___default","classnames__WEBPACK_IMPORTED_MODULE_0___default","has_effect","text","onClick","defaultProps","PropTypes","disableApp","func","enableApp","prop_types__WEBPACK_IMPORTED_MODULE_2___default","string","bool","is_closed_on_confirm","full_page_modal","connect","_ref","ui","UnsupportedContractModal","React","PureComponent","onClose","react_default","localize","i18n_default_text","values","website_name","propTypes","MarketUnavailableModal","DenialOfServiceModal","buy","sell","ServicesErrorModal","services_error","code","message","type","object","AccountSignupModal","lazy","Promise","all","__webpack_require__","e","then","bind","_ref3","client","modules","common","is_denial_of_service_modal_visible","is_client_allowed_to_visit","is_market_unavailable_visible","has_only_forward_starting_contracts","is_services_error_visible","is_unsupported_contract_modal_visible","proposal_info","trade","purchase_info","resetPreviousSymbol","clearPurchaseInfo","resetPurchase","requestProposal","switchAccount","setHasOnlyForwardingContracts","toggleServicesErrorModal","toggleUnsupportedContractModal","virtual_account_loginid","denialOfServiceOnConfirm","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","_ref2","arguments","unsupportedContractOnClose","unsupported_contract_modal","window","open","urlFor","undefined","denial_of_service","market_unavailable","services_error_modal"],"mappings":"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","file":"js/modals.1b65f1fd9093f90cdbec.js","sourcesContent":["import classNames        from 'classnames';\nimport React             from 'react';\nimport PropTypes         from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport { Button }        from 'deriv-components';\nimport { connect }       from 'Stores/connect';\n\nclass FullPageModal extends React.Component {\n    componentDidMount() {\n        if (this.props.is_visible) {\n            this.props.disableApp();\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.props.is_visible) {\n            this.props.disableApp();\n        }\n    }\n\n    handleCancel = () => {\n        if (this.props.is_closed_on_cancel) {\n            this.props.enableApp();\n        }\n        this.props.onCancel();\n    };\n\n    handleConfirm = () => {\n        if (this.props.is_closed_on_confirm) {\n            this.props.enableApp();\n        }\n        this.props.onConfirm();\n    };\n\n    render() {\n        const {\n            cancel_button_text,\n            children,\n            confirm_button_text,\n            onCancel,\n            is_loading,\n            is_visible,\n            title,\n        } = this.props;\n        return (\n            <React.Fragment>\n                <CSSTransition\n                    appear\n                    in={(is_visible && !is_loading)}\n                    timeout={50}\n                    classNames={{\n                        appear   : 'full-page-modal__wrapper--enter',\n                        enter    : 'full-page-modal__wrapper--enter',\n                        enterDone: 'full-page-modal__wrapper--enter-done',\n                        exit     : 'full-page-modal__wrapper--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div className='full-page-modal__wrapper'>\n                        <div className='full-page-modal__dialog'>\n                            { title &&\n                                <h1 className='full-page-modal__header'>{title}</h1>\n                            }\n                            { typeof children === 'string' ?\n                                <p className='full-page-modal__content'>{children}</p>\n                                :\n                                <div className='full-page-modal__content'>{children}</div>\n                            }\n                            <div className='full-page-modal__footer'>\n                                { onCancel &&\n                                    <Button\n                                        className={classNames(\n                                            'full-page-modal__button',\n                                            'btn--secondary',\n                                            'btn--secondary--orange',\n                                        )}\n                                        has_effect\n                                        text={cancel_button_text}\n                                        onClick={this.handleCancel}\n                                    />\n                                }\n                                { confirm_button_text &&\n                                    <Button\n                                        className={classNames(\n                                            'full-page-modal__button',\n                                            'btn--primary',\n                                            'btn--primary--orange',\n                                        )}\n                                        has_effect\n                                        text={confirm_button_text}\n                                        onClick={this.handleConfirm}\n                                    />\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </React.Fragment>\n        );\n    }\n}\n\nFullPageModal.defaultProps = {\n    is_closed_on_cancel : true,\n    is_closed_on_confirm: true,\n};\n\nFullPageModal.propTypes = {\n    cancel_button_text  : PropTypes.string,\n    confirm_button_text : PropTypes.string,\n    disableApp          : PropTypes.func,\n    enableApp           : PropTypes.func,\n    is_closed_on_cancel : PropTypes.bool,\n    is_closed_on_confirm: PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_visible          : PropTypes.bool,\n    onCancel            : PropTypes.func,\n    onConfirm           : PropTypes.func,\n    title               : PropTypes.string,\n};\n\nconst full_page_modal = connect(\n    ({ ui }) => ({\n        disableApp: ui.disableApp,\n        enableApp : ui.enableApp,\n        is_loading: ui.is_loading,\n    }),\n)(FullPageModal);\nexport default full_page_modal;\n","import React            from 'react';\nimport PropTypes        from 'prop-types';\nimport { localize }     from 'App/i18n';\nimport FullPageModal    from 'App/Components/Elements/FullPageModal/full-page-modal.jsx';\nimport Localize         from 'App/Components/Elements/localize.jsx';\nimport { website_name } from '../../../../Constants/app-config';\n\nclass UnsupportedContractModal extends React.PureComponent {\n    render() {\n        const { is_visible, onConfirm, onClose } = this.props;\n        return (\n            <FullPageModal\n                title={localize('Whoops!')}\n                confirm_button_text={localize('Continue to Binary.com')}\n                cancel_button_text={localize('Back to trade page')}\n                onConfirm={onConfirm}\n                onCancel={onClose}\n                is_closed_on_cancel\n                is_visible={is_visible}\n            >\n                <Localize\n                    i18n_default_text='This trade type is currently not supported on {{website_name}}. Please go to Binary.com for details.'\n                    values={{ website_name }}\n                />\n            </FullPageModal>\n        );\n    }\n}\n\nUnsupportedContractModal.propTypes = {\n    is_visible: PropTypes.bool,\n    onClose   : PropTypes.func,\n    onConfirm : PropTypes.func,\n};\n\nexport default UnsupportedContractModal;\n","import React          from 'react';\nimport PropTypes      from 'prop-types';\nimport { localize }   from 'App/i18n';\nimport FullPageModal  from 'App/Components/Elements/FullPageModal/full-page-modal.jsx';\nimport Localize       from 'App/Components/Elements/localize.jsx';\n\nconst MarketUnavailableModal = ({\n    is_visible,\n    onCancel,\n    onConfirm,\n}) => (\n    <FullPageModal\n        cancel_button_text={localize('Go to SmartTrader')}\n        confirm_button_text={localize('No, stay on Deriv')}\n        is_visible={is_visible}\n        onCancel={onCancel}\n        onConfirm={onConfirm}\n        title={localize('Market is unavailable')}\n    >\n        <Localize i18n_default_text='Sorry, but this market is not supported yet on Deriv. Do you want to trade this market on SmartTrader?' />\n    </FullPageModal>\n);\n\nMarketUnavailableModal.propTypes = {\n    is_visible: PropTypes.bool,\n    onCancel  : PropTypes.func,\n    onConfirm : PropTypes.func,\n};\n\nexport default MarketUnavailableModal;\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from 'App/i18n';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full-page-modal.jsx';\nimport Localize      from 'App/Components/Elements/localize.jsx';\n\nconst DenialOfServiceModal = ({ is_visible, onCancel, onConfirm }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with Virtual Account')}\n        cancel_button_text={localize('Back to main website')}\n        onConfirm={onConfirm}\n        onCancel={onCancel}\n        is_closed_on_cancel={false}\n        is_visible={is_visible}\n    >\n        <Localize i18n_default_text='You cannot use your real money account with Deriv at this time.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    is_visible: PropTypes.bool,\n    onCancel  : PropTypes.func,\n    onConfirm : PropTypes.func,\n};\n\nexport default DenialOfServiceModal;\n","import { localize }  from 'App/i18n';\n\nexport const title = {\n    buy : localize('Purchase Error'),\n    sell: localize('Sell Error'),\n};\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from 'App/i18n';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full-page-modal.jsx';\nimport { title }     from './constants';\n\nconst ServicesErrorModal = ({\n    is_visible,\n    onConfirm,\n    services_error,\n}) => {\n    const { code, message } = services_error;\n\n    if (!code || !message) return null;\n\n    return (\n        <FullPageModal\n            title={title[services_error.type]}\n            confirm_button_text={localize('OK')}\n            onConfirm={onConfirm}\n            // TODO: handle onCancel\n            // cancel_button_text={cancel_button_text}\n            // onCancel={onCancel}\n            is_visible={is_visible}\n        >\n            {message}\n        </FullPageModal>\n    );\n};\n\nServicesErrorModal.propTypes = {\n    is_visible    : PropTypes.bool,\n    onConfirm     : PropTypes.func,\n    services_error: PropTypes.object,\n};\n\nexport default ServicesErrorModal;\n","import React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { urlFor }  from '_common/url';\nimport 'Sass/app/modules/modals.scss';\nimport UnsupportedContractModal from 'App/Components/Elements/Modals/UnsupportedContractModal';\nimport MarketUnavailableModal   from 'App/Components/Elements/Modals/MarketUnavailableModal';\nimport DenialOfServiceModal     from 'App/Components/Elements/Modals/DenialOfServiceModal';\nimport ServicesErrorModal       from 'App/Components/Elements/Modals/ServicesErrorModal';\n\nconst AccountSignupModal       = React.lazy(() => import(/* webpackChunkName: \"AccountSignupModal\" */'../AccountSignupModal'));\n\nconst Modals = ({\n    clearPurchaseInfo,\n    is_denial_of_service_modal_visible,\n    is_unsupported_contract_modal_visible,\n    is_market_unavailable_visible,\n    is_services_error_visible,\n    toggleUnsupportedContractModal,\n    setHasOnlyForwardingContracts,\n    resetPreviousSymbol,\n    toggleServicesErrorModal,\n    resetPurchase,\n    services_error,\n    switchAccount,\n    virtual_account_loginid,\n}) => {\n    const denialOfServiceOnCancel = () => {\n        window.open(urlFor('trading', undefined, undefined, true));\n    };\n\n    const denialOfServiceOnConfirm = async () => {\n        await switchAccount(virtual_account_loginid);\n    };\n\n    const marketUnavailableOnConfirm = () => {\n        setHasOnlyForwardingContracts(false);\n        resetPreviousSymbol();\n    };\n\n    const marketUnavailableOnCancel = () => window.open(urlFor('trading', undefined, undefined, true)) &&\n        setHasOnlyForwardingContracts(false);\n\n    const servicesErrorModalOnConfirm = () => {\n        toggleServicesErrorModal(false);\n        if (services_error.type === 'buy') {\n            clearPurchaseInfo();\n            resetPurchase();\n        }\n    };\n\n    const unsupportedContractOnConfirm = () => {\n        window.open(urlFor('user/portfoliows', undefined, undefined, true), '_blank');\n        unsupportedContractOnClose();\n    };\n\n    const unsupportedContractOnClose = () => {\n        toggleUnsupportedContractModal(false);\n    };\n\n    return (\n        <React.Fragment>\n            <UnsupportedContractModal\n                onConfirm={unsupportedContractOnConfirm}\n                onClose={unsupportedContractOnClose}\n                is_visible={is_unsupported_contract_modal_visible}\n            />\n\n            <DenialOfServiceModal\n                onConfirm={denialOfServiceOnConfirm}\n                onCancel={denialOfServiceOnCancel}\n                is_visible={is_denial_of_service_modal_visible}\n            />\n\n            <MarketUnavailableModal\n                onConfirm={marketUnavailableOnConfirm}\n                onCancel={marketUnavailableOnCancel}\n                is_visible={is_market_unavailable_visible}\n            />\n            <ServicesErrorModal\n                onConfirm={servicesErrorModalOnConfirm}\n                services_error={services_error}\n                is_visible={is_services_error_visible}\n            />\n            {/* TODO: Enable AccountSignupModal once its UI component is ready */}\n            <AccountSignupModal />\n        </React.Fragment>\n    );\n};\n\nexport default connect(({ ui, client, modules, common }) => ({\n    is_denial_of_service_modal_visible   : !client.is_client_allowed_to_visit,\n    is_market_unavailable_visible        : ui.has_only_forward_starting_contracts,\n    is_services_error_visible            : ui.is_services_error_visible,\n    is_unsupported_contract_modal_visible: ui.is_unsupported_contract_modal_visible,\n    proposal_info                        : modules.trade.proposal_info,\n    purchase_info                        : modules.trade.purchase_info,\n    resetPreviousSymbol                  : modules.trade.resetPreviousSymbol,\n    clearPurchaseInfo                    : modules.trade.clearPurchaseInfo,\n    resetPurchase                        : modules.trade.requestProposal,\n    services_error                       : common.services_error,\n    switchAccount                        : client.switchAccount,\n    setHasOnlyForwardingContracts        : ui.setHasOnlyForwardingContracts,\n    toggleServicesErrorModal             : ui.toggleServicesErrorModal,\n    toggleUnsupportedContractModal       : ui.toggleUnsupportedContractModal,\n    virtual_account_loginid              : client.virtual_account_loginid,\n}))(Modals);\n"],"sourceRoot":""}