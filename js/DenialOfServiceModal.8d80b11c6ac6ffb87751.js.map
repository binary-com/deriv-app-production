{"version":3,"sources":["webpack:///./App/Components/Elements/FullPageModal/full-page-modal.jsx","webpack:///./App/Components/Elements/Modals/DenialOfServiceModal/denial-of-service.jsx"],"names":["FullPageModal","handleCancel","_this","props","is_closed_on_cancel","hideFullBlur","onCancel","handleConfirm","is_closed_on_confirm","onConfirm","React","Component","this","is_visible","showFullBlur","_this$props","cancel_button_text","children","confirm_button_text","is_loading","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","react_transition_group__WEBPACK_IMPORTED_MODULE_3__","appear","in","timeout","classNames","enter","enterDone","exit","unmountOnExit","className","App_Components_Form_button_jsx__WEBPACK_IMPORTED_MODULE_4__","has_effect","text","onClick","defaultProps","propTypes","PropTypes","string","func","bool","full_page_modal","connect","_ref","ui","DenialOfServiceModal","react_default","localize","i18n_default_text"],"mappings":"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","file":"js/DenialOfServiceModal.8d80b11c6ac6ffb87751.js","sourcesContent":["import classNames        from 'classnames';\nimport React             from 'react';\nimport PropTypes         from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport Button            from 'App/Components/Form/button.jsx';\nimport { connect }       from 'Stores/connect';\n\nclass FullPageModal extends React.Component {\n    componentDidMount() {\n        if (this.props.is_visible) {\n            this.props.showFullBlur();\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.props.is_visible) {\n            this.props.showFullBlur();\n        }\n    }\n\n    handleCancel = () => {\n        if (this.props.is_closed_on_cancel) {\n            this.props.hideFullBlur();\n        }\n        this.props.onCancel();\n    };\n\n    handleConfirm = () => {\n        if (this.props.is_closed_on_confirm) {\n            this.props.hideFullBlur();\n        }\n        this.props.onConfirm();\n    };\n\n    render() {\n        const {\n            cancel_button_text,\n            children,\n            confirm_button_text,\n            onCancel,\n            is_loading,\n            is_visible,\n            title,\n        } = this.props;\n        return (\n            <React.Fragment>\n                <CSSTransition\n                    appear\n                    in={(is_visible && !is_loading)}\n                    timeout={50}\n                    classNames={{\n                        appear   : 'full-page-modal__background--enter',\n                        enter    : 'full-page-modal__background--enter',\n                        enterDone: 'full-page-modal__background--enter-done',\n                        exit     : 'full-page-modal__background--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div className='full-page-modal__background' />\n                </CSSTransition>\n                <CSSTransition\n                    appear\n                    in={(is_visible && !is_loading)}\n                    timeout={50}\n                    classNames={{\n                        appear   : 'full-page-modal__wrapper--enter',\n                        enter    : 'full-page-modal__wrapper--enter',\n                        enterDone: 'full-page-modal__wrapper--enter-done',\n                        exit     : 'full-page-modal__wrapper--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div className='full-page-modal__wrapper'>\n                        <div className='full-page-modal__dialog'>\n                            { title &&\n                                <h1 className='full-page-modal__header'>{title}</h1>\n                            }\n                            { typeof children === 'string' ?\n                                <p className='full-page-modal__content'>{children}</p>\n                                :\n                                <div className='full-page-modal__content'>{children}</div>\n                            }\n                            <div className='full-page-modal__footer'>\n                                { onCancel &&\n                                    <Button\n                                        className={classNames(\n                                            'full-page-modal__button',\n                                            'btn--secondary',\n                                            'btn--secondary--orange',\n                                        )}\n                                        has_effect\n                                        text={cancel_button_text}\n                                        onClick={this.handleCancel}\n                                    />\n                                }\n                                { confirm_button_text &&\n                                    <Button\n                                        className={classNames(\n                                            'full-page-modal__button',\n                                            'btn--primary',\n                                            'btn--primary--orange',\n                                        )}\n                                        has_effect\n                                        text={confirm_button_text}\n                                        onClick={this.handleConfirm}\n                                    />\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </React.Fragment>\n        );\n    }\n}\n\nFullPageModal.defaultProps = {\n    is_closed_on_cancel : true,\n    is_closed_on_confirm: true,\n};\n\nFullPageModal.propTypes = {\n    cancel_button_text  : PropTypes.string,\n    confirm_button_text : PropTypes.string,\n    hideFullBlur        : PropTypes.func,\n    is_closed_on_cancel : PropTypes.bool,\n    is_closed_on_confirm: PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_visible          : PropTypes.bool,\n    onCancel            : PropTypes.func,\n    onConfirm           : PropTypes.func,\n    showFullBlur        : PropTypes.func,\n    title               : PropTypes.string,\n};\n\nconst full_page_modal = connect(\n    ({ ui }) => ({\n        hideFullBlur: ui.hideFullBlur,\n        is_loading  : ui.is_loading,\n        showFullBlur: ui.showFullBlur,\n    }),\n)(FullPageModal);\nexport default full_page_modal;\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from 'App/i18n';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full-page-modal.jsx';\nimport Localize      from 'App/Components/Elements/localize.jsx';\n\nconst DenialOfServiceModal = ({ is_visible, onCancel, onConfirm }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with Virtual Account')}\n        cancel_button_text={localize('Back to main website')}\n        onConfirm={onConfirm}\n        onCancel={onCancel}\n        is_closed_on_cancel={false}\n        is_visible={is_visible}\n    >\n        <Localize i18n_default_text='You cannot use your real money account with Deriv at this time.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    is_visible: PropTypes.bool,\n    onCancel  : PropTypes.func,\n    onConfirm : PropTypes.func,\n};\n\nexport default DenialOfServiceModal;\n"],"sourceRoot":""}