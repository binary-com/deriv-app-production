{"version":3,"sources":["webpack:///./App/Containers/SettingsModal/settings-language.jsx"],"names":["__webpack_require__","r","__webpack_exports__","classnames__WEBPACK_IMPORTED_MODULE_0__","classnames__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","App_Components_Elements_localize_jsx__WEBPACK_IMPORTED_MODULE_3__","Assets_icon_jsx__WEBPACK_IMPORTED_MODULE_4__","Utils_Language__WEBPACK_IMPORTED_MODULE_5__","isCurrentLanguage","lang","currentLanguage","NonClickableLink","_ref","children","a","createElement","id","concat","className","classNames","settings-language__language-link--active","LanguageLink","_ref2","Fragment","icon","type","replace","toLowerCase","settings-language__language-name--active","getAllowedLanguages","propTypes","PropTypes","string","oneOfType","arrayOf","node","isRequired","LanguageSettings","i18n_default_text","Object","keys","map","key","href","getURL"],"mappings":"4GAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,GAAAO,EAAAP,EAAAK,EAAAC,GAAAE,EAAAR,EAAA,GAAAS,EAAAT,EAAAK,EAAAG,GAAAE,EAAAV,EAAA,IAAAW,EAAAX,EAAA,GAAAY,EAAAZ,EAAA,KAUMa,EAAoB,SAACC,GAAD,OAAUA,IAASC,KAEvCC,EAAmB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAUJ,EAAbG,EAAaH,KAAb,OACrBL,EAAAU,EAAAC,cAAA,OACIC,GAAE,eAAAC,OAAiBR,EAAjB,WACFS,UAAWC,IAAW,mCAAoC,CACtDC,2CAA4CZ,EAAkBC,MAGjEI,IAIHQ,EAAe,SAAAC,GAAA,IAAGb,EAAHa,EAAGb,KAAH,OACjBL,EAAAU,EAAAC,cAACX,EAAAU,EAAMS,SAAP,KACInB,EAAAU,EAAAC,cAACT,EAAA,EAAD,CACIkB,KAAK,kBACLN,UAAW,yEACXO,KAAMhB,EAAKiB,QAAQ,SAAU,KAAKC,gBAEtCvB,EAAAU,EAAAC,cAAA,QACIG,UAAWC,IAAW,mCAAoC,CACtDS,2CAA4CpB,EAAkBC,MAGjEoB,cAAsBpB,MAmCnCY,EAAaS,UAAY,CACrBrB,KAAMsB,IAAUC,QAGpBrB,EAAiBmB,UAAY,CACzBjB,SAAUkB,IAAUE,UAAU,CAC1BF,IAAUG,QAAQH,IAAUI,MAC5BJ,IAAUI,OACXC,WACH3B,KAAMsB,IAAUC,QAGLK,UA1CU,kBACrBjC,EAAAU,EAAAC,cAAA,OAAKG,UAAU,qBACXd,EAAAU,EAAAC,cAAA,OAAKG,UAAU,sCACXd,EAAAU,EAAAC,cAAA,YACIX,EAAAU,EAAAC,cAACV,EAAA,EAAD,CAAUiC,kBAAkB,sBAGpClC,EAAAU,EAAAC,cAAA,OAAKG,UAAU,yCACVqB,OAAOC,KAAKX,eACRY,IAAI,SAAAC,GAAG,OACJlC,EAAkBkC,GACdtC,EAAAU,EAAAC,cAACJ,EAAD,CAAkBF,KAAMiC,EAAKA,IAAKA,GAC9BtC,EAAAU,EAAAC,cAACM,EAAD,CAAcZ,KAAMiC,KAGxBtC,EAAAU,EAAAC,cAAA,KACIC,GAAE,eAAAC,OAAiByB,EAAjB,WACFA,IAAKA,EACLC,KAAMC,YAAOF,GACbxB,UAAWC,IAAW,mCAAoC,CACtDC,2CAA4CZ,EAAkBkC,MAGlEtC,EAAAU,EAAAC,cAACM,EAAD,CAAcZ,KAAMiC,EAAKA,IAAKA","file":"js/settings-language.3781c0978168af2f291b.js","sourcesContent":["import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport Localize          from 'App/Components/Elements/localize.jsx';\nimport Icon              from 'Assets/icon.jsx';\nimport {\n    getAllowedLanguages,\n    getURL,\n    currentLanguage }    from 'Utils/Language';\n\nconst isCurrentLanguage = (lang) => lang === currentLanguage;\n\nconst NonClickableLink = ({ children, lang }) => (\n    <div\n        id={`dt_settings_${lang}_button`}\n        className={classNames('settings-language__language-link', {\n            'settings-language__language-link--active': isCurrentLanguage(lang),\n        })}\n    >\n        {children}\n    </div>\n);\n\nconst LanguageLink = ({ lang }) => (\n    <React.Fragment>\n        <Icon\n            icon='IconCountryFlag'\n            className={'settings-language__language-link-flag settings-language__language-flag'}\n            type={lang.replace(/(\\s|_)/, '-').toLowerCase()}\n        />\n        <span\n            className={classNames('settings-language__language-name', {\n                'settings-language__language-name--active': isCurrentLanguage(lang),\n            })}\n        >\n            {getAllowedLanguages()[lang]}\n        </span>\n    </React.Fragment>\n);\n\nconst LanguageSettings = () => (\n    <div className='settings-language'>\n        <div className='settings-language__language-header'>\n            <span>\n                <Localize i18n_default_text='Select language' />\n            </span>\n        </div>\n        <div className='settings-language__language-container'>\n            {Object.keys(getAllowedLanguages())\n                .map(key => (\n                    isCurrentLanguage(key) ?\n                        <NonClickableLink lang={key} key={key}>\n                            <LanguageLink lang={key} />\n                        </NonClickableLink>\n                        :\n                        <a\n                            id={`dt_settings_${key}_button`}\n                            key={key}\n                            href={getURL(key)}\n                            className={classNames('settings-language__language-link', {\n                                'settings-language__language-link--active': isCurrentLanguage(key),\n                            })}\n                        >\n                            <LanguageLink lang={key} key={key} />\n                        </a>\n                ))}\n        </div>\n    </div>\n);\n\nLanguageLink.propTypes = {\n    lang: PropTypes.string,\n};\n\nNonClickableLink.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]).isRequired,\n    lang: PropTypes.string,\n};\n\nexport default LanguageSettings;\n"],"sourceRoot":""}