{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./_common/base/socket_base.js","webpack:///./_common/base/socket_cache.js","webpack:///./Modules/Reports/Helpers/market-underlying.js","webpack:///./Services/logout.js","webpack:///./_common/common_functions.js","webpack:///./_common/string_util.js","webpack:///./Stores/Modules/Trading/Constants/contract.js","webpack:///./Stores/connect.js","webpack:///./Stores/Modules/Portfolio/Helpers/details.js","webpack:///./Constants/ui.js","webpack:///./_common/base/currency_base.js","webpack:///./App/Components/Routes/button-link.jsx","webpack:///./App/Components/Elements/VerticalTabs/vertical-tab-content-container.jsx","webpack:///./App/Components/Elements/VerticalTabs/vertical-tab-headers.jsx","webpack:///./Modules/Trading/Components/Elements/full-screen-dialog.jsx","webpack:///./Services/socket-general.js","webpack:///./App/Containers/Redirect/redirect.jsx","webpack:///./Modules/Reports/Components/empty-portfolio-message.jsx","webpack:///./Modules/Contract/Containers/contract-link.jsx","webpack:///./Assets/SvgComponents/portfolio/ic-check.svg","webpack:///./Assets/SvgComponents/portfolio/ic-cross.svg","webpack:///./App/Components/Elements/PositionsDrawer/result-overlay.jsx","webpack:///./App/Components/Elements/PositionsDrawer/positions-drawer-card.jsx","webpack:///./App/Components/Elements/PositionsDrawer/positions-drawer.jsx","webpack:///./App/Components/Elements/market-is-closed-overlay.jsx","webpack:///./Modules/Trading/Containers/test.jsx","webpack:///./Modules/Trading/Components/Form/screen-large.jsx","webpack:///./Modules/Trading/Components/Form/form-layout.jsx","webpack:///./Modules/Trading/Containers/trade.jsx","webpack:///./App/Constants/routes-config.js","webpack:///./App/Components/Routes/binary-link.jsx","webpack:///./App/Components/Elements/login-prompt.jsx","webpack:///./App/Components/Routes/route-with-sub-routes.jsx","webpack:///./App/Components/Routes/binary-routes.jsx","webpack:///./Modules/PageError/PageError.jsx","webpack:///./Modules/Trading/Helpers/digits.js","webpack:///./Modules/Reports/Helpers/shortcode.js","webpack:///./App/Constants/app-config.js","webpack:///./App/Components/Elements/tooltip.jsx","webpack:///./App/Components/Form/InputField/increment-buttons.jsx","webpack:///./App/Components/Form/InputField/input.jsx","webpack:///./App/Components/Form/InputField/input-field.jsx","webpack:///./App/Components/Elements/VerticalTabs/vertical-tab.jsx","webpack:///./templates/_common/components/loading.jsx","webpack:///./App/Components/Elements/underlying-icon.jsx","webpack:///./App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-ticks.jsx","webpack:///./App/Containers/remaining-time.jsx","webpack:///./App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-slider.jsx","webpack:///./App/Components/Elements/localize.jsx","webpack:///./_common/storage.js","webpack:///./Stores/Modules/Contract/Helpers/logic.js","webpack:///./Stores/Modules/Trading/Helpers/barrier.js","webpack:///./Stores/Modules/Trading/Helpers/contract-type.js","webpack:///./App/Components/Elements/chart-loader.jsx","webpack:///./App/Components/Elements/PositionsDrawer/contract-type-cell.jsx","webpack:///./App/Components/Elements/Calendar/calendar-footer.jsx","webpack:///./App/Components/Form/ButtonToggleMenu/button-highlight.jsx","webpack:///./App/Components/Form/ButtonToggleMenu/button-highlight-wrapper.jsx","webpack:///./App/Components/Form/ButtonToggleMenu/button-toggle-menu.jsx","webpack:///./App/Components/Form/DropDown/items.jsx","webpack:///./App/Components/Form/DropDown/native-select.jsx","webpack:///./App/Components/Form/DropDown/helpers.js","webpack:///./App/Components/Form/DropDown/dropdown.jsx","webpack:///./Stores/Modules/Trading/Helpers/allow-equals.js","webpack:///./Modules/Trading/Components/Form/TradeParams/allow-equals.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./App/Components/Form/RangeSlider/tick-steps.jsx","webpack:///./App/Components/Form/RangeSlider/range-slider.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/duration-toggle.jsx","webpack:///./App/Components/Form/DatePicker/helpers.js","webpack:///./App/Components/Elements/Calendar/calendar.jsx","webpack:///./App/Components/Form/DatePicker/date-picker.jsx","webpack:///./Modules/Trading/Components/Form/DatePicker/trading-date-picker.jsx","webpack:///./App/Components/Form/TimePicker/dialog.jsx","webpack:///./App/Components/Form/TimePicker/time-picker.jsx","webpack:///./Stores/Modules/Trading/Helpers/end-time.js","webpack:///./Modules/Trading/Components/Form/TimePicker/trading-time-picker.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/advanced-duration.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/simple-duration.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/duration.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/duration-wrapper.jsx","webpack:///./App/Components/Form/number-selector.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/last-digit.jsx","webpack:///./Modules/Trading/Containers/trade-params.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-dialog.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-item.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-list.jsx","webpack:///./Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-dialog.jsx","webpack:///./Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-item.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-widget.jsx","webpack:///./Modules/Trading/Containers/contract-type.jsx","webpack:///./App/Components/Elements/Calendar/panels/types.js","webpack:///./App/Components/Elements/Calendar/panels/calendar-days.jsx","webpack:///./App/Components/Elements/Calendar/panels/calendar-months.jsx","webpack:///./App/Components/Elements/Calendar/panels/calendar-years.jsx","webpack:///./App/Components/Elements/Calendar/panels/calendar-decades.jsx","webpack:///./App/Components/Elements/Calendar/calendar-body.jsx","webpack:///./Modules/Trading/Components/Form/Purchase/contract-info.jsx","webpack:///./Modules/Trading/Components/Elements/purchase-button.jsx","webpack:///./Modules/Trading/Components/Elements/purchase-fieldset.jsx","webpack:///./Modules/Trading/Containers/purchase.jsx","webpack:///./App/Components/Elements/NotificationMessage/close-button.jsx","webpack:///./App/Components/Elements/NotificationMessage/constants.js","webpack:///./App/Components/Elements/NotificationMessage/notification.jsx","webpack:///./App/Components/Elements/PositionsDrawer/helpers/positions-helper.js","webpack:///./App/Components/Elements/PositionsDrawer/helpers/index.js","webpack:///./App/Components/Elements/Errors/error-component.jsx","webpack:///./App/Components/Elements/modal.jsx","webpack:///./Utils/Language/language.js","webpack:///./Utils/Language/index.js","webpack:///./App/Components/Elements/Calendar/calendar-button.jsx","webpack:///./App/Components/Elements/Calendar/calendar-header.jsx","webpack:///./App/Components/Elements/ContentLoader/positions-card.jsx","webpack:///./App/Components/Elements/ContentLoader/index.js","webpack:///./_common/base/gtm.js","webpack:///./_common/base/network_monitor_base.js","webpack:///./_common/url.js","webpack:///./_common/base/client_base.js","webpack:///./App/Components/Form/button.jsx","webpack:///./App/i18n.js","webpack:///./App/Containers/Lazy/lazy.jsx","webpack:///./Constants/index.js","webpack:///./Constants/routes.js","webpack:///./_common/base/server_time.js","webpack:///./_common/language.js","webpack:///./Stores/Modules/Trading/Helpers/duration.js","webpack:///./_common/lib/polyfills/nodelist.foreach.js","webpack:///./_common/lib/polyfills/element.closest.js","webpack:///./_common/lib/plugins.js","webpack:///./_common/base/subscription_manager.js","webpack:///./Services/trackjs.js","webpack:///./Services/ws-methods.js","webpack:///./_common/lib/polyfills/element.matches.js","webpack:///./Utils/Date/date-time.js","webpack:///./Utils/Date/index.js","webpack:///./_common/os_detect.js","webpack:///./App/Components/Elements/Errors/error-boundary.jsx","webpack:///./templates/app/components/loading.jsx","webpack:///./App/Containers/Layout/app-contents.jsx","webpack:///./App/Containers/server-time.jsx","webpack:///./App/Components/Layout/Footer/network-status.jsx","webpack:///./App/Components/Layout/Footer/toggle-fullscreen.jsx","webpack:///./App/Components/Layout/Footer/toggle-positions.jsx","webpack:///./App/Components/Layout/Footer/toggle-settings.jsx","webpack:///./App/Containers/Layout/footer.jsx","webpack:///./App/Components/Layout/Header/menu-links.jsx","webpack:///./App/Components/Layout/Header/login-button.jsx","webpack:///./App/Components/Layout/Header/signup-button.jsx","webpack:///./App/Components/Layout/Header/upgrade-button.jsx","webpack:///./App/Components/Layout/Header/account-actions.jsx","webpack:///./App/Constants/header-links.js","webpack:///./App/Containers/Layout/header.jsx","webpack:///./App/Containers/Modals/modals.jsx","webpack:///./App/Containers/Routes/routes.jsx","webpack:///./Services/network-monitor.js","webpack:///./Services/outdated-browser.js","webpack:///./Stores/Helpers/client-notifications.js","webpack:///./Utils/Validator/declarative-validation-rules.js","webpack:///./Utils/Validator/errors.js","webpack:///./Utils/Validator/validator.js","webpack:///./Stores/base-store.js","webpack:///./Stores/Modules/Trading/Helpers/currency.js","webpack:///./Stores/client-store.js","webpack:///./Stores/common-store.js","webpack:///./Stores/gtm-store.js","webpack:///./Stores/Modules/Cashier/cashier-store.js","webpack:///./Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./Stores/Modules/Contract/Helpers/chart-barriers.js","webpack:///./Modules/SmartChart/Components/Markers/marker-line.jsx","webpack:///./Modules/SmartChart/Components/Markers/marker-spot.jsx","webpack:///./Modules/SmartChart/Components/Markers/marker-spot-label.jsx","webpack:///./Stores/Modules/SmartChart/Constants/markers.js","webpack:///./Stores/Modules/Contract/Helpers/chart-marker-helpers.js","webpack:///./Stores/Modules/Contract/Helpers/chart-markers.js","webpack:///./Stores/Modules/Portfolio/Helpers/portfolio-notifcations.js","webpack:///./Stores/Modules/Contract/contract-replay-store.js","webpack:///./Stores/Modules/Contract/contract-trade-store.js","webpack:///./Stores/Modules/Trading/Helpers/active-symbols.js","webpack:///./Stores/Modules/Portfolio/Helpers/format-response.js","webpack:///./Stores/Modules/Portfolio/portfolio-store.js","webpack:///./Stores/Modules/Profit/Helpers/format-request.js","webpack:///./Stores/Modules/Profit/Helpers/format-response.js","webpack:///./Stores/Modules/Profit/profit-store.js","webpack:///./Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./Stores/Modules/SmartChart/chart-barrier-store.js","webpack:///./Stores/Modules/SmartChart/chart-marker-store.js","webpack:///./Stores/Modules/SmartChart/smart-chart-store.js","webpack:///./Stores/Modules/Statement/statement-store.js","webpack:///./Stores/Modules/Statement/Helpers/format-response.js","webpack:///./Stores/Modules/Trading/Actions/purchase.js","webpack:///./Stores/Modules/Trading/Actions/symbol.js","webpack:///./Stores/Modules/Trading/Constants/validation-rules.js","webpack:///./Stores/Modules/Trading/Actions/contract-type.js","webpack:///./Stores/Modules/Trading/Actions/duration.js","webpack:///./Stores/Modules/Trading/Actions/start-date.js","webpack:///./Stores/Modules/Trading/Helpers/process.js","webpack:///./Stores/Modules/Trading/Helpers/proposal.js","webpack:///./Stores/Modules/Trading/trade-store.js","webpack:///./Stores/Modules/Trading/Helpers/chart.js","webpack:///./Stores/Modules/index.js","webpack:///./Stores/ui-store.js","webpack:///./Stores/index.js","webpack:///./App/app.js","webpack:///./Utils/Events/storage.js","webpack:///./App/app.jsx","webpack:///./Utils/pwa/register-service-worker.js","webpack:///./App/Components/Elements/Popover/popover-bubble.jsx","webpack:///./App/Components/Elements/Popover/popover.jsx","webpack:///./App/Components/Form/fieldset.jsx","webpack:///./_common/base/login.js","webpack:///./Stores/Modules/Trading/Helpers/start-date.js","webpack:///./config.js","webpack:///./Stores/Modules/Contract/Helpers/digits.js","webpack:///./Assets/icon.jsx","webpack:///./Constants/contract.js","webpack:///./App/Components/Elements/money.jsx","webpack:///./Constants/date-time.js","webpack:///./_common/utility.js","webpack:///./App/Components/Elements/ui-loader.jsx","webpack:///./App/Components/Elements/Calendar/helper.js","webpack:///./Services/index.js","webpack:///./App/Components/Routes/helpers.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","prefetchChunks","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","deferredPrefetch","apply","shift","deferredModules","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","forEach","undefined","link","document","createElement","nc","setAttribute","rel","as","href","jsonpScriptSrc","head","appendChild","installedModules","installedCssChunks","main","p","404","DenialOfServiceModal","MarketUnavailableModal","ServicesErrorModal","UnsupportedContractModal","account-info","contract","digits","info-box","notification-messages","push-notification","reports","screen-small","settings-chart","settings-language","settings-theme","toggle-cashier","toggle-menu-drawer","vendors~open_position~7c650be5","default~open_position~1833eefb","open_positions","profit_table","statement","vendors~smart_chart","smart_chart","work-in-progress","wallet-information","two-month-picker","exports","module","l","e","promises","Promise","resolve","reject","fullhref","existingLinkTags","getElementsByTagName","dataHref","tag","getAttribute","existingStyleTags","linkTag","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","error","clearTimeout","chunk","errorType","realSrc","message","name","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","startupResult","binary_socket","config","buffered_sends","req_id","wrong_app_id","is_available","is_disconnect_called","is_connected_before","socket_url","timeouts","no_duplicate_requests","sent_requests","waiting_list","clearTimeouts","isReady","hasReadyState","sendBufferedRequests","wait","send","ClientBase","require","SocketCache","getLanguage","State","cloneObject","getPropertyValue","isEmptyObject","PromiseClass","getAppId","getSocketURL","BinarySocketBase","concat","items","clear","has","msg_type","indexOf","add","remove","promise_obj","response","this_promises","pr","another_exists","keys","some","req_obj","options","arguments","has_callback","callback","find","forced","set","skip_cache_update","JSON","stringify","time","assign","last_response","subscribe","isOnline","passthrough","wsEvent","init","_typeof","WebSocket","onopen","isLoggedIn","authorize","onOpen","onReconnect","onmessage","msg","parse","test","this_req_id","onMessage","onclose","onDisconnect","_len2","msg_types","Array","_key2","is_resolved","availability","status","_len","states","_key","readyState","sendBuffered","setOnDisconnect","setOnReconnect","removeOnReconnect","removeOnDisconnect","data_obj","msg_type_mapping","isEmptyValue","makeKey","moment","LocalStore","getStaticHash","payout_currencies","expire","proposal_open_contract","map_to","active_symbols","contracts_for","exchange_rates","ticks_history","trading_times","history","candles","is_empty_data","isArray","response_data","getObject","static_hash","response_obj","isBefore","expires","source_obj","map_key","ws_cache","localStorage","getItem","curr_lang","cookie","replace","active_symbols_obj","symbol","filter","x","symbol_info","exchange_is_open","isMarketClosed","echo_req","subscription","end","cached_response","cached_message","new_message","has_error_or_missing","has_new_value","has_old_cache","has_valid_cache","valueOf","setObject","should_match_all","data_key","__webpack_exports__","getMarketInformation","getMarketName","getTradeTypeName","Constants__WEBPACK_IMPORTED_MODULE_0__","shortcode","market_info","category","underlying","extracted","RegExp","exec","toLowerCase","getMarketNamesMap","toUpperCase","getContractConfig","requestLogout","_common_base_client_base__WEBPACK_IMPORTED_MODULE_0__","_common_base_client_base__WEBPACK_IMPORTED_MODULE_0___default","_common_base_socket_cache__WEBPACK_IMPORTED_MODULE_1__","_common_base_socket_cache__WEBPACK_IMPORTED_MODULE_1___default","_common_storage__WEBPACK_IMPORTED_MODULE_2__","_ws_methods__WEBPACK_IMPORTED_MODULE_3__","WS","logout","doLogout","removeCookies","Client","clearAllAccounts","isVisible","elem","offsetWidth","offsetHeight","getElementById","id_selector","parent","padLeft","txt","len","char","text","String","join","numberToString","toTitleCase","str","charAt","substr","compareBigUnsignedInt","a","b","first_num","second_num","max_length","Math","max","order","getLocalizedBasis","payout","localize","stake","multiplier","getContractTypesConfig","rise_fall","title","trade_types","basis","components","barrier_count","rise_fall_equal","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","getContractCategoriesConfig","_ref","_defineProperty","SPECIAL_REACT_KEYS","children","ref","MobxProvider","_Provider","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","_inherits","Provider","_createClass","stores","baseStores","context","mobxStores","props","store","_objectSpread","childContextTypes","PropTypes","client","common","gtm","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_getPrototypeOf2","_this","args","propTypes","React","wrappedDisplayName","displayName","constructor","getCurrentTick","getDurationUnitText","getDurationPeriod","getDurationTime","App_i18n__WEBPACK_IMPORTED_MODULE_0__","_common_utility__WEBPACK_IMPORTED_MODULE_1__","Utils_Date__WEBPACK_IMPORTED_MODULE_2__","_Contract_Helpers_digits__WEBPACK_IMPORTED_MODULE_3__","contract_info","tick_stream","unique","current_tick","isDigitContract","contract_type","isEndTime","duration","obj_duration","unit_map","name_plural","name_singular","h","duration_ms","asMilliseconds","getDiffDuration","epochToMoment","purchase_time","date_start","date_expiry","tick_count","floor","is_end_time","string_format","formatMiliseconds","getDurationUnitValue","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","crypto_config","currencies_config","formatCurrency","currency","addComma","num","decimal_points","is_crypto","number","toFixed","parseFloat","toString","$0","$1","$2","getDecimalPlaces","isCryptocurrency","calcDecimalPlaces","CryptoConfig","BTC","min_withdrawal","pa_max_withdrawal","pa_min_withdrawal","BCH","ETH","ETC","LTC","UST","USB","getMinWithdrawal","formatMoney","currency_value","amount","exclude_currency","decimals","minimumFractionDigits","money","sign","Number","decimal_places","isNaN","abs","Intl","maximumFractionDigits","NumberFormat","format","setCurrencies","website_status","getCurrencyName","getTransferLimits","which","transfer_limits","min","getTransferFee","currency_from","currency_to","transfer_fee","getMinimumTransferFee","pow","getTextFormat","getMinPayout","getPaWithdrawalLimit","limit","getCurrencies","classnames__WEBPACK_IMPORTED_MODULE_0__","classnames__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","ButtonLink","className","to","onClick","classNames","string","func","VerticalTabContentContainer","PureComponent","_this$props","action_bar","action_bar_classname","is_routed","selected","selected_item","item","label","TabContent","react__WEBPACK_IMPORTED_MODULE_1___default","map","component","icon","Assets_icon_jsx__WEBPACK_IMPORTED_MODULE_3__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","exact","from","routes","positions","_ref2","path","render","component_icon","VerticalTabHeaders","header_title","onChange","activeClassName","vertical-tab__header--active","vertical-tab__header__icon--active","FullScreenDialog","visible","wrapperClassName","body","classList","fullscreen-dialog--open","tagName","scrollToTarget","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","any","bool","client_store","common_store","setResidence","setBalance","handleError","authorizeAccount","mobx__WEBPACK_IMPORTED_MODULE_0__","_common_base_gtm__WEBPACK_IMPORTED_MODULE_1__","_common_base_gtm__WEBPACK_IMPORTED_MODULE_1___default","_common_base_login__WEBPACK_IMPORTED_MODULE_2__","_common_base_login__WEBPACK_IMPORTED_MODULE_2___default","_common_base_server_time__WEBPACK_IMPORTED_MODULE_3__","_common_base_server_time__WEBPACK_IMPORTED_MODULE_3___default","_common_base_socket_base__WEBPACK_IMPORTED_MODULE_4__","_common_base_socket_base__WEBPACK_IMPORTED_MODULE_4___default","_common_storage__WEBPACK_IMPORTED_MODULE_5__","_common_utility__WEBPACK_IMPORTED_MODULE_6__","App_i18n__WEBPACK_IMPORTED_MODULE_7__","_logout__WEBPACK_IMPORTED_MODULE_8__","_ws_methods__WEBPACK_IMPORTED_MODULE_9__","BinarySocketGeneral","setIsSocketOpened","is_ready","Login","isLoginPages","is_valid_login","subscribeWebsiteStatus","ResponseHandlers","websiteStatus","ServerTime","action","server_time","is_active_tab","sessionStorage","removeItem","loginid","is_populating_account_list","get_settings","country_code","setEmail","email","responsePayoutCurrencies","GTM","pushTransactionData","bom_ui","residence","landingCompany","flow","regeneratorRuntime","mark","_callee","balance","wrap","_context","prev","next","BinarySocket","stop","setError","responseAuthorize","subscribeBalance","sendRequest","getAccountStatus","payoutCurrencies","mt5LoginList","country","accounts","is_virtual","getSelfExclusion","accepted_bch","site_status","location","reload","setWebsiteStatus","Redirect","setCashierActiveTab","setVerificationCode","toggleAccountSignupModal","toggleCashierModal","url_params","URLSearchParams","search","replaceState","root","withRouter","EmptyPortfolioMessage","react_default","Fragment","ContractLink","contract_id","openContract","node","onMount","contract_trade","ic_check","styles","_objectWithoutProperties","_extends","xmlns","width","height","fill","fillRule","cx","cy","ic_cross","ic_cross_objectWithoutProperties","ic_cross_extends","stroke","strokeLinecap","ResultOverlay","handleClick","is_unsupported","preventDefault","is_visible","onClickRemove","is_contract_won","react_transition_group","in","enter","enterDone","exit","unmountOnExit","positions-drawer-card__result--won","positions-drawer-card__result--lost","react_router_dom","getContractPath","result__caption--won","result__caption--lost","oneOfType","has_same_contract_mounted","PositionsDrawerCard","active_position","indicative","id","is_dark_theme","is_loading","is_sell_requested","is_valid_to_sell","profit_loss","onClickSell","sell_price","toggleUnsupportedContractModal","loader_el","ContentLoader","speed","fallback_result","contract_el","underlying_icon","market","display_name","contract_type_cell","is_high_low","Shortcode","isHighLow","is_sold","ProgressSlider","start_time","expiry_time","ticks_count","positions-drawer-card__profit-loss--is-crypto","positions-drawer-card__profit-loss--negative","positions-drawer-card__profit-loss--positive","positions-drawer-card__indicative--movement-complete","buy_price","positions-drawer-card__wrapper--active","parseInt","result_overlay","positions-drawer-card--active","positions-drawer-card--green","positions-drawer-card--red","contract_link","Form_button","btn--loading","is_disabled","duration_unit","exit_spot","sell_time","PositionsDrawer","onUnmount","all_positions","active_contract_id","is_contract_mode","is_empty","is_positions_drawer_on","toggleDrawer","body_content","portfolio_position","appear","positions_drawer_card","positions_drawer_extends","positions-drawer--open","positions-drawer--contract-mode","lib","style","autoHide","empty_portfolio_message","MobxPropTypes","arrayOrObservableArray","portfolio","removePositionById","is_dark_mode_on","togglePositionsDrawer","startAnimation","children_background_color","getComputedStyle","firstElementChild","converted_rgba","startsWith","split","querySelectorAll","element","backgroundColor","requestAnimationFrame","toggleFade","opacity","direction","color","sub_or_add","reduction","new_opacity","stopId","cancelAnimationFrame","querySelector","contains","click","MarketIsClosedOverlay","i18n_default_text","classNameSpan","Test","state","setVisibility","stateVisibility","test_assertThisInitialized","container","fontSize","lineHeight","position","zIndex","background","padding","marginTop","display","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","keyCode","setState","_this2","entries","sort","_slicedToArray","k","v","test_typeof","toJS","array","_ref3","trade","ScreenLarge","is_contract_visible","is_trade_enabled","is_blurred","sidebar__items--blur","fieldset","trade_params","purchase","ui_loader","FormLayout","is_mobile","Lazy","ctor","should_load","screen_large","SmartChart","lazy","Trade","showPositions","hidePositions","onCloseContract","form_wrapper_class","should_show_bottom_widgets","is_digit_contract","should_show_last_digit_stats","isDigitTradeType","is_chart_visible","is_chart_loading","is_chart_ready","positions_drawer","has_progress","Suspense","fallback","chart_loader","chart_id","chart_type","Digits","is_trade_page","digits_info","display_status","is_ended","InfoBox","error_message","removeError","end_epoch","granularity","is_static_chart","onSymbolChange","scroll_to_epoch","start_epoch","cursor","is_market_closed","market_is_closed_overlay","form_layout","onClickNewTrade","purchase_info","routesConfig","removeErrorMessage","scroll_to_left_epoch","hidePositionsFooterToggle","showPositionsFooterToggle","has_only_forward_starting_contracts","setHasOnlyForwardingContracts","ContractDetails","Reports","OpenPositions","ProfitTable","Statement","Page404","route_default","getRoutesConfig","is_authenticated","index","RouterRedirect","icon_component","default","profit","error404","redirect","BinaryLink","active_class","binary_link_objectWithoutProperties","normalizePath","route","findRouteByPath","binary_link_extends","LoginPrompt","onLogin","onSignup","page_title","PageError","header","values","messages","defaultProps","open","urlFor","pushDataLayer","react_router","pathname","is_logged_in","login_prompt","redirectToLogin","route_with_sub_routes_extends","Language","setCookie","default_title","BinaryRoutes","idx","route_with_sub_routes","binary_routes_extends","buttonOnClick","error_code","redirect_label","redirect_url","has_html","dangerouslySetInnerHTML","__html","button_link","digitTypesMap","includes","extractInfoFromShortcode","info_from_shortcode","barrier_1","_ref$shortcode","_ref$shortcode_info","shortcode_info","website_name","Tooltip","show_tooltip_balloon_icon","onMouseEnter","onMouseLeave","alignment","classNameIcon","has_error","icon_class","tooltip--error","data-tooltip","data-tooltip-pos","Assets_icon","tooltip__balloon-icon--show","IncrementButtons","decrementValue","incrementValue","max_is_disabled","min_is_disabled","tabIndex","Input","changeValue","checked","classNameInlinePrefix","data_value","data_tip","display_value","fractional_digits","inline_prefix","is_autocomplete_disabled","is_hj_whitelisted","is_incrementable","is_read_only","onKeyPressed","placeholder","required","autoComplete","data-for","data-hj-whitelist","data-tip","data-value","disabled","maxLength","navigator","userAgent","selectionStart","evt","selectionEnd","onKeyDown","readOnly","InputField","classNameInput","classNamePrefix","error_messages","helper","is_float","_this$props$is_hj_whi","is_negative_disabled","_this$props$is_read_o","_this$props$is_signed","is_signed","_this$props$is_unit_a","is_unit_at_right","max_value","min_value","prefix","unit","Icon","has_valid_length","getDecimals","val","array_value","increment_value","new_value","calculateDecrementedValue","decrement_value","is_increment_input","input","InputField_input","trim","signed_regex","is_number","is_not_completed_number","has_zero_at_end","is_scientific_notation","input--error","increment_buttons","InputField_increment_buttons","input_tooltip","tooltip","tooltip--with-label","htmlFor","VerticalTab","changeSelected","applicable_routes","list","current_path","selected_index","vertical-tab--full-screen","is_full_width","_vertical_tab_headers_jsx__WEBPACK_IMPORTED_MODULE_4__","_vertical_tab_content_container_jsx__WEBPACK_IMPORTED_MODULE_3__","arrayOf","shape","isRequired","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","Loading","is_invisible","theme","inx","UnderlyingIcon","react__WEBPACK_IMPORTED_MODULE_1__","ProgressTicks","arr_ticks","_toConsumableArray","progress-slider__ticks-step--marked","RemainingTime","_ref$end_time","end_time","unix","remaining_time","formatDuration","percentage","getTimePercentage","positions_progress_ticks","Containers_remaining_time","progress-slider__line--green","progress-slider__line--orange","progress-slider__line--red","prop_types__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","react_i18next__WEBPACK_IMPORTED_MODULE_2__","Localize","defaults","Cookies","isProduction","setItem","Storage","isStorageSupported","storage","Store","InScriptStore","obj","getResponse","CookieStorage","cookie_name","cookie_domain","hostname","initialized","domain","Date","read","cookie_value","write","expireDate","isSecure","secure","SessionStore","domains","parent_path","cookie_names","getChartConfig","getChartType","getChartGranularity","getDisplayStatus","getIndicativePrice","getLastTickFromTickStream","isEnded","isUserSold","isValidToSell","getEndTime","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","_common_base_server_time__WEBPACK_IMPORTED_MODULE_2__","_common_base_server_time__WEBPACK_IMPORTED_MODULE_2___default","is_from_purchase","start","hour_to_granularity_map","getExpiryTime","diff","asHours","calculateGranularity","getFinalPrice","bid_price","is_expired","is_settleable","exit_tick_time","is_path_dependent","is_tick_contract","contract_types","available_contract_types","available_categories","buildTradeTypesConfig","getArrayDefaultValue","getComponents","getDurationUnitsList","getDurationUnit","getDurationMinMax","getStartType","getStartDates","hours","minutes","getValidTime","buildMoment","setMinuteMultipleByFive","getTradeTypes","getBarriers","getBasis","ContractType","contract_display","arr_new_values","c_type","form_components","contract_start_type","duration_units_list","duration_units","arr_units","contract_expiry_type","duration_min_max","start_date","current_start_date","start_dates_list","has_spot","forward_starting_dates","sessions","compare_moment","start_moment","isSessionAvailable","minute","hour","date","isTimeValid","toMoment","moment_obj","ceil","arr_basis","localized_basis","basis_list","reduce","cur","bas","buildContractTypesConfig","contractsFor","has_contracts","available","start_type","contract_categories","barriers","sub_cats","durations","buildDurationConfig","count","obj_barrier","field","expiry_type","buildBarriersConfig","buildForwardStartingConfig","barrier_values","barrier","high_barrier","barrier_2","low_barrier","getContractType","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","getFullContractTypes","getExpiryDate","expiry_date","proper_expiry_date","moment_start","moment_expiry","hasIntradayDurationUnit","isAfter","clone","isSameOrBefore","market_close_times","market_close_time","end_moment","expiry_sessions","close","minDate","is_end_of_day","is_end_of_session","subtract","getExpiryType","getSessions","option","getStartTime","getTradingTimes","trading_times_response","submarkets","symbols","_args","abrupt","sent","markets","times","_x","getContractCategories","contract_types_list","_templates_common_components_loading_jsx__WEBPACK_IMPORTED_MODULE_2__","ChartLoader","Constants_contract__WEBPACK_IMPORTED_MODULE_2__","ContractTypeCell","getContractTypeDisplay","Assets_icon_jsx__WEBPACK_IMPORTED_MODULE_2__","App_i18n__WEBPACK_IMPORTED_MODULE_3__","FooterIcon","use_icon","CalendarFooter","footer","has_today_btn","has_range_selection","duration_date","is_minimum","Highlight","left","left_offset","highlight_style","transform","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","HighlightWrapper","buttonClick","updateHighlightPosition","closest","resetHighlight","offsetLeft","active_button_el","getElementsByClassName","other_props","classnames","Children","child","cloneElement","button_highlight_Highlight","ButtonToggleMenu","buttons_arr","is_animated","menu","button-menu__button--active","selected_value","button_highlight_wrapper","Items","handleSelect","has_symbol","symbol_type_class_name","list__item--highlighted","list__item--selected","list__item--disabled","has_tooltip","Popover","NativeSelect","getItemFromValue","findInArray","findIndex","isArrayLike","getValueFromIndex","getPrevIndex","getNextIndex","Dropdown","list_ref","createRef","curr_index","is_list_visible","handleVisibility","setWrapperRef","wrapper_ref","handleClickOutside","is_single_option","prev_index","next_index","is_alignment_left","firstChars","is_nativepicker","native_select","left_alignment_style","list_width","dropdown--left","dropdown--show","dropdown--disabled","classNameDisplay","dropdown__display--clicked","dropdown__display--has-symbol","dropdown__select-arrow--left","onEntered","current","dropdown__list--left","list--left","autoHeight","autoHeightMax","renderTrackHorizontal","dropdown_extends","renderThumbHorizontal","DropDown_items","hasCallPutEqual","contract_type_list","hasDurationForCallPutEqual","contract_duration_list","allow_equals_toConsumableArray","AllowEquals","has_callputequal_duration","has_callputequal","isRiseFallEqual","input_field","_e$target","classNameTarget","margin","Amount","currencies_list","is_equal","is_minimized","is_single_currency","validation_errors","button_toggle_menu","dropdown","trade-container__currency-options-dropdown","allow_equals","observableObject","Barrier","barrier_title","input_class","is_center","TickSteps","hover_value","tick_steps_toConsumableArray","isActive","isMarked","isMarkedOnHover","range-slider__ticks-step--active","range-slider__ticks-step--marked","range-slider__ticks-step--marked-hover","RangeSlider","handleChange","resetOnHover","rangeSliderTrack","getRangeSliderTrackWidth","_e$nativeEvent","nativeEvent","offsetX","offsetY","is_hover","range-slider__error","steps","tick_steps","DurationToggle","icon_className","advanced-simple-toggle__icon--active","react","classNamePath","trading_events","getTradingEvents","events","Calendar","calendar_classCallCheck","calendar_possibleConstructorReturn","calendar_getPrototypeOf","switchView","view","calendar_view","navigateTo","new_date","calendar_date","date_format","onChangeCalendarMonth","start_of_month","getStartOfMonth","onMouseOver","hovered_date","updateSelectedDate","max_date","min_date","onSelect","moment_date","dataset","startOf","is_before","is_after","formatted_date","selected_date","updateSelected","stopPropagation","isPeriodDisabled","month","year","decade","resetCalendar","_this$props2","default_date","setToday","_this$props3","now","_this$props4","start_of_period","endOf","current_date","default_message","_this$props5","holidays","weekends","_this$state","calendar_header","calendar_body","calendar_footer","dates","descrip","DatePicker","date_value","is_datepicker_visible","is_clear_btn_visible","is_mounted","onClickOutside","mainNode","updateDatePickerValue","formatDate","is_clearable","onSelectCalendar","isDateValid","onChangeInput","formatted_value","addDays","clearDatePickerInput","updateStore","calendar","daysFromTodayTo","new_date_value","renderInputField","initial_value","disable_trading_events","defaultValue","datepicker__icon--is-hidden","datepicker__icon--with-label","datepicker__picker--left","date_picker_objectSpread","TradingDatePicker","max_date_duration","min_date_expiry","duration_d","is_24_hours_contract","has_intraday_unit","min_duration","daily","moment_contract_start_date_time","setTime","max_daily_duration","is_duration_contract","date_picker","disable_year_selector","Dialog","preClass","selected_time","start_time_moment","end_time_moment","seconds","milliseconds","to_compare_moment","_selected_time$split2","dialog_toConsumableArray","selectOption","current_value","prev_value","is_enabled","_prev_value$split","_prev_value$split2","prev_hour","prev_minute","start_time_reset_minute","is_hour_enabled","isBetween","is_minute_enabled","dialog_defineProperty","mm","TimePicker","is_open","toggleDropDown","arg","time_picker_typeof","saveRef","nodeName","target_element","dialog","getClosestTime","interval","TradingTimePicker","market_open_times","moment_expiry_date","market_open_datetime","market_close_datetime","expiry_datetime","server_datetime","boundaries","market_open_time","getBoundaries","getSelectedTime","time_picker","AdvancedDuration","advanced_duration_unit","advanced_expiry_type","duration_t","changeDurationUnit","getDurationFromUnit","expiry_list","number_input_props","onChangeUiStore","shared_input_props","has_intraday_duration_unit","isSame","endtime_container_class","has-time","range_slider","advanced_duration_extends","ticks","trading_date_picker","trading_time_picker","SimpleDuration","arr","filtered_arr","simple_duration_unit","has_label","du","simple_duration_extends","Duration","hasDurationUnit","is_advanced_duration","onChangeMultiple","has_end_time","expiry","pop","duration_unit_text","duration_value","shared_input","duration_name","number_input","has_toggle","trade-container__fieldset--advanced","duration_extends","advanced_duration","simple_duration","duration_toggle","_ref4","current_duration_unit","new_trade_store_values","duration_objectSpread","DurationWrapper","duration_list","duration_wrapper_toConsumableArray","advancedHasWrongExpiry","handleEndTime","getDurationMinMaxValues","convertDurationLimit","new_duration_unit","new_duration_value","current_unit","current_duration","_this$getDurationMinM2","duration_wrapper_slicedToArray","has_missing_duration_unit","simple_is_missing_duration_unit","_this$getDurationMinM4","setDurationUnit","Duration_duration","duration_wrapper_extends","duration_h","duration_m","duration_s","NumberSelector","arr_arr_numbers","selected_number","arr_numbers","number-selector__selection--selected","LastDigit","last_digit","arr_five","last_digit_toConsumableArray","number_selector","TradeParams","component_key","duration_wrapper","TradeParams_last_digit","TradeParams_amount","ContractTypeDialog","full_screen_dialog","ContractTypeItem","contracts","handleInfoClick","contract-type-item--selected","contract-type-item--invisible","ContractTypeList","contract_type_item","objectOrObservableObject","TradeTypeInfoDialog","TradeTypeInfoItem","handleNavigationClick","handleNextClick","handlePrevClick","item_index","itemList","onBackButtonClick","onSubmitButtonClick","ContractTypeWidget","is_dialog_open","is_info_dialog_open","handleInfoVisibility","navigationLength","nextIndex","list_item","prevIndex","onWidgetClick","getDisplayText","getItemIndex","curr_item","getItemList","contract-type-widget__display--clicked","contract_type_dialog","trade_type_info_dialog","trade_type_info_item","Contract","contract_type_widget","CommonPropTypes","CalendarDays","days","hide_others","moment_today","moment_cur_date","num_of_days","daysInMonth","moment_month_start","moment_month_end","moment_selected","subMonths","day","subDays","start_of_next_month","addMonths","moment_start_date","moment_hovered","is_active","is_today","getDaysOfTheWeek","has_events","is_closes_early","match","duration_from_today","is_between","is_between_hover","is_before_min_or_after_max_date","is_other_month","calendar__cell--active","calendar__cell--today","calendar__cell--active-duration","calendar__cell--today-duration","calendar__cell--disabled","calendar__cell--is-hidden","calendar__cell--other","calendar__cell--between-hover","calendar__cell--between","data-date","data-duration","classNameTargetIcon","getDays","week_headers_abbr","CalendarMonths","moment_selected_date","month_headers","data-month","calendar_months_objectSpread","CalendarYears","_getDecade$split2","getDecade","start_of_decade","end_of_decade","years","is_other_decade","data-year","calendar_years_objectSpread","CalendarDecades","decades","min_year","getCentury","_decade$split2","calendar_decades_slicedToArray","is_other_century","data-decade","calendar_decades_objectSpread","CalendarBody","calendar_days_CalendarDays","calendar_months_CalendarMonths","calendar_years_CalendarYears","calendar_decades_CalendarDecades","ContractInfo","has_increased","should_fade","proposal_info","has_error_or_not_loaded","trade-container__price-info--disabled","trade-container__price-info--slide","trade-container__price-info--fade","stakeOrPayout","obj_contract_basis","PurchaseButton","buy_info","info","is_proposal_empty","purchased_states_arr","setPurchaseState","onClickPurchase","is_button_disabled","btn-purchase--disabled","btn-purchase--animated--slide","btn-purchase--animated--fade","btn-purchase--swoosh","returns","PurchaseFieldset","is_proposal_error","onHoverPurchase","purchase_button","Elements_purchase_button","btn-purchase__shadow-wrapper--disabled","classNameBubble","Purchase","is_client_allowed_to_visit","isLoading","has_error_details","purchase_fieldset","Elements_purchase_fieldset","getContractTypePosition","unshift","is_purchase_locked","onPurchase","purchase_states","CloseButton","notification_order","types","danger","success","warning","contract_sold","sortNotifications","Notification","removeNotification","destroy","is_closed_by_user","closeOnClick","is_auto_close","delay","notification--small","size","should_hide_close_btn","close_button","oneOf","duration_from_purchase","round","getBarrierLabel","isDigitType","getBarrierValue","digitTypeMap","addCommaToNumber","DIGITDIFF","DIGITEVEN","DIGITMATCH","DIGITODD","DIGITOVER","DIGITUNDER","positions_helper_getTimePercentage","positions_helper_getBarrierLabel","ErrorComponent","redirectOnClick","_ref$should_show_refr","should_show_refresh","refresh_message","ModalElement","showFullBlur","modal_root","hideFullBlur","toggleModal","ReactDOM","createPortal","vertical_tab","classNameHeader","modal_content","Modal","modal_ModalElement","currentLanguage","getAllowedLanguages","exclude_languages","getAll","EN","getURL","lang","language_getAllowedLanguages","language_getURL","CalendarButton","is_hidden","CalendarHeader","disable_month_selector","hide_disabled_periods","is_date_view","is_month_view","is_year_view","is_decade_view","num_of_years","century","is_prev_month_disabled","is_prev_year_disabled","subYears","is_next_month_disabled","is_next_year_disabled","addYears","is_select_year_disabled","should_hide_next_month","should_hide_prev_month","should_hide_prev_year","should_hide_next_year","onClickPrevYear","onClickNextYear","onClickPrevMonth","onClickNextMonth","calendar_button","calendar__nav--disabled","calendar__nav--is-hidden","calendar__btn--disabled","PositionsCardLoader","react_content_loader_es","primaryColor","secondaryColor","y","rx","ry","positions_card_PositionsCardLoader","isGtmApplicable","dataLayer","language","visitorId","eventHandler","login_event","is_new_account","affiliate_token","getJSON","bom_affiliate_token","moment_now","utc","bom_account_type","getAccountType","bom_currency","bom_country","bom_country_abbrev","bom_email","url","bom_today","bom_date_joined","bom_age","date_of_birth","bom_firstname","first_name","bom_lastname","last_name","bom_phone","phone","mt5_login_list","acc_type","getMT5AccountType","group","login","last_transaction_timestamp","bom_transaction_in_last_30d","extra_data","transaction","storage_key","gtm_transactions","timestamp","transactions_arr","transactions","transaction_id","transaction_time","mt5NewAccount","mt5_new_account","mt5_account_type","account_type","gtm_data","mt5_last_signup","getAccountOfType","_pending_timeouts","status_config","ws_config","network_status","updateUI","StatusConfig","pendings","pending_keys","pending_timeouts","setStatus","ws_events_map","setPending","clearPendings","NetworkMonitorBase","online","class","offline","blinking","ws_init","ws_request","onLine","ping","socket_general_functions","fncUpdateUI","urlForLanguage","getCurrentProductionDomain","location_url","static_host","paramsHash","host_map","Url","bot.binary.com","developers.binary.com","academy.binary.com","tech.binary.com","blog.binary.com","getUrlBase","reset","param_hash","arr_params","parsed","URL","p_l","param","params","pars","should_change_to_legacy","new_url","urlForCurrentDomain","current_domain","url_object","urlForStatic","websiteUrl","protocol","getHostMap","resetStaticHost","current_loginid","types_map_config","client_object","getAllAccountsObject","getAllLoginids","isAccountOfType","TypesMapConfig","updateAccountList","canTransferFundsTo","only_enabled","this_type","financial","gaming","virtual","account_list","account","excluded_until","param_to_set","value_to_set","to_loginid","from_currency","to_currency","from_landing_company","to_landing_company","maltainvest","malta","is_from_crypto","is_to_crypto","isValidLoginid","valid_login_ids","every","current_client","hasAccountType","hasCurrencyType","loginids","getAccountTitle","types_map","landing_company_name","shouldAcceptTnc","website_tnc_version","client_tnc_status","setNewAccount","token","currentLandingCompany","landing_company_response","this_shortcode","landing_company_prop","shouldCompleteTax","getBasicUpgradeInfo","can_upgrade_to","upgradeable_landing_companies","can_open_multi","current_landing_company","landing_companies","landing_company","canUpgrade","can_upgrade","getLandingCompanyValue","landing_company_object","real","financial_company","gaming_company","getRiskAssessment","is_high_risk","canTransferFunds","hasSvgAccount","canChangeCurrency","is_current","has_no_mt5","has_no_transaction","has_account_criteria","Button","_ref$className","has_effect","classes","effect","button","wrapper","i18n_config","resources","translation","hashTransKey","crc32","lng","query","fallbackLng","i18n","use","initReactI18next","_ref$should_load","component_props","LazyLoadedComponent","_contract__WEBPACK_IMPORTED_MODULE_0__","_routes__WEBPACK_IMPORTED_MODULE_1__","account_password","apps","cashier_password","exclusion","limits","personal","settings","performance_request_time","get_time_interval","update_time_interval","onTimeUpdated","clock_started","pending","requestTime","timeCounter","fncTimeUpdated","clearInterval","setInterval","performance","start_timestamp","performance_response_time","server_time_at_response","updateTime","time_since_response","timePromise","all_languages","url_lang","lang_regex","languageFromUrl","current_lang","ACH","DE","ES","FR","ID","IT","PL","PT","RU","TH","VI","ZH_CN","ZH_TW","crowdin_lang","urlLang","custom_url","getDurationMaps","to_second","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","convertDurationUnit","duration_maps","u","from_unit","to_unit","duration_string","root_store","duration_is_day","expiry_is_after_today","isInteger","resetEndTimeOnVolatilityIndices","NodeList","thisArg","Element","documentElement","matches","parentElement","nodeType","hide","show","toggleClass","class_name","should_add","make_visible","html","content","innerHTML","subscriptions","forget_requested","subscription_id","dispatch","forget","forgetStream","hasCallbackFunction","hasValues","SubscriptionManager","sub_id","stream_id","sub_info","subscribers","fnc","fncCallback","match_values","forgets_list","request_obj","values_obj","addSubscriptionFromRequest","send_request","subscribe_request","subscription_props","is_stream","prop","should_forget_first","isDeepEqual","forgetAll","types_to_forget","sub_ids","forget_all","ignored_responses_in_trackjs","queue","ResponseQueue","ApiCallProxyHandler","prop_key","receiver","target_value","Reflect","return_value","TrackJS","log","fresh","track","getMessage","activeSymbols","buy","proposal_id","price","cashier","verification_code","get_account_status","get_self_exclusion","getSettings","newAccountVirtual","client_password","new_account_virtual","oauthApps","oauth_apps","profitTable","offset","date_boundaries","description","proposalOpenContract","residenceList","residence_list","sell","sellExpired","sell_expired","request_object","force_request","verifyEmail","verify_email","cb","is_forced","subscribeProposal","req","subscribeProposalOpenContract","subscribeProposalOpenContractOnBuy","buy_request","subscribeTicks","subscribeTicksHistory","subscribeTransaction","trackJSNetworkMonitor","Proxy","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","ownerDocument","createFromInputFallback","_d","NaN","epoch","isValid","isUTC","today_moment","second","convertToUnix","toGMTFormat","diffInMonths","asDays","formatted_str","time_str","isHourValid","isMinuteValid","num_of_months","date_1","date_2","miliseconds","str_format","date_time_epochToMoment","date_time_toMoment","date_time_toGMTFormat","date_time_getDiffDuration","date_time_formatDuration","date_time_isDateValid","date_time_minDate","date_time_formatMiliseconds","isMobile","ErrorBoundary","componentDidCatch","hasError","Errors","is_slow_loading","AppContents","is_app_blurred","is_dark_mode","is_fully_blurred","slow_loading_status","loading","app-contents--show-positions-drawer","app-contents--contract-mode","app-contents--is-blurred","tt_react_custom_scrollbars_lib","addNotificationBar","pwa_prompt_event","setPWAPromptEvent","gmt_time","NetworkStatus","network-status__circle--offline","network-status__circle--online","network-status__circle--blinker","ToggleFullScreen","toggle_fullscreen_classCallCheck","toggle_fullscreen_possibleConstructorReturn","toggle_fullscreen_getPrototypeOf","onFullScreen","is_full_screen","fullscreen_map","toggleFullScreen","to_exit","fncToCall","fnc_enter","fnc_exit","full_screen_icon_class","ic-fullscreen--active","TogglePositions","positions_count","toggle_positions_class","ic-positions--active","ic-positions--has-count","data-count","ToggleSettings","is_settings_visible","toggleSettings","toggle_settings_class","ic-settings--active","modal","Footer","active_positions","is_route_blurred","is_settings_modal_on","show_positions_toggle","toggleSettingsModal","footer--is-blurred","toggle_positions_TogglePositions","Containers_server_time","toggle_settings_ToggleSettings","toggle_fullscreen_ToggleFullScreen","MenuLinks","login_only","Components_Routes","link_to","logo","image","LoginButton","SignupButton","UpgradeButton","AccountActions","account_actions_classCallCheck","account_actions_possibleConstructorReturn","account_actions_getPrototypeOf","account_actions_inherits","nextProps","is_acc_switcher_on","onClickUpgrade","toggleAccountsDialog","is_upgrade_enabled","is_dialog_on","toggleDialog","upgrade_button_UpgradeButton","login_button_LoginButton","signup_button_SignupButton","active_cashier_tab","is_cashier_modal_on","header_links","Header","header--is-blurred","menu_links_MenuLinks","account_actions_AccountActions","is_accounts_switcher_on","is_initial_idle","is_denial_of_service_modal_visible","is_market_unavailable_visible","is_services_error_visible","is_unsupported_contract_modal_visible","resetPreviousSymbol","clearPurchaseInfo","resetPurchase","requestProposal","services_error","switchAccount","toggleServicesErrorModal","virtual_account_loginid","denialOfServiceOnConfirm","unsupportedContractOnClose","onConfirm","onCancel","Routes","NetworkMonitor","is_online","setNetworkStatus","OutdatedBrowser","showError","opening_tag","closing_tag","interpolation","escapeValue","$buoop","vs","f","api","noclose","reminder","onshow","nomessage","insecure","pre_build_dvrs","client_notifications","self_exclusion","exclusion_end","authenticate","cashier_locked","withdrawal_locked","mt5_withdrawal_locked","document_needs_action","unwelcome","mf_retail","financial_limit","risk","tax","tnc","required_fields","handleClientNotifications","addNotification","_response$get_account","prompt_client_to_authenticate","_getStatusValidations","validations","account_status","document_under_review","ukrts_max_turnover_limit_not_set","professional","is_mf_retail","landing_company_shortcode","checkAccountStatus","necessary_withdrawal_fields","necessary_signup_fields","required_settings_fields","getRequiredFields","hasMissingRequiredField","validRequired","validEmail","validPassword","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","validTaxID","validBarrier","validCompare","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimal_count","format_money","isMoreThanMax","getPreBuildDVRs","address","permitted_characters","compare","general","letter_symbol","not_equal","value_one","value_two","password","postcode","regular","signup_token","tax_id","errors_classCallCheck","errors","attribute","Validator","rules","validator_classCallCheck","error_count","rule","is_rule_string","rule_object","validator","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","BaseStore","bound","base_store_classCallCheck","_initializerDefineProperty","_descriptor","_descriptor2","switchAccountDisposer","switch_account_listener","_descriptor3","waitFor","base_store_asyncToGenerator","local_storage_properties","session_storage_properties","validation_rules","store_name","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","reaction","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","getSnapshot","_this3","propertyName","_this4","_this5","addRule","_this6","intercept","change","validateProperty","newValue","_this7","trigger","inputs","isPassed","setValidationErrorMessages","_this8","listener","_this9","when","switch_broadcast","_callee2","_context2","switchEndSignal","onSwitchAccount","t0","disposeSwitchAccount","reactions","act","partial_fetch_time","freeze","observable","ClientStore","client_store_classCallCheck","client_store_initializerDefineProperty","client_store_getPrototypeOf","client_store_descriptor","client_store_assertThisInitialized","client_store_descriptor2","client_store_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","fiat","crypto","isCrypto","currency_defineProperty","selectCurrency","session_start","upgrade_info","user_id","removeAllNotifications","setSwitched","setUserLogin","authorize_response","setLoginId","setAccounts","registerReactions","switched","getAccount","all_loginids","clearContract","clearTable","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","broadcastAccountChange","selected_currency","should_refresh_active_symbols","client_store_asyncToGenerator","_callee3","_context3","resetErrorServices","refresh","debouncedProposal","obj_params","active_loginid","map_names","is_allowed_real","acct1","param_value","token1","runInAction","storeClientAccounts","_this10","isDisabled","getAccountInfo","default_currency","valid_login_ids_regex","_this11","_this12","acc","computed","CommonStore","is_socket_opened","is_network_online","common_store_objectSpread","deposit_url","withdraw_url","GTMStore","gtm_store_classCallCheck","gtm_store_getPrototypeOf","gtm_store_descriptor","gtm_store_assertThisInitialized","accountSwitcherListener","gtm_store_asyncToGenerator","is_gtm_applicable","gtm_store_objectSpread","common_variables","contract_data","barrier1","barrier2","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","event_name","userId","CashierStore","cashier_store_classCallCheck","cashier_store_initializerDefineProperty","cashier_store_getPrototypeOf","cashier_store_descriptor","cashier_store_assertThisInitialized","cashier_store_descriptor2","cashier_store_descriptor3","cashier_store_descriptor4","cashier_store_descriptor5","cashier_store_descriptor6","cashier_store_descriptor7","containers","deposit","withdraw","default_cashier_height","timeout_cashier_url","timeout_verification_button","setErrorMessage","setContainerHeight","setLoading","container_urls","is_session_timeout","checkIframeLoaded","setSessionTimeout","setContainerUrl","response_cashier","clearVerification","setTimeoutCashierUrl","onIframeLoaded","clearTimeoutCashierUrl","container_height","is_session_time_out","is_verification_button_clicked","is_verification_email_sent","clearTimeoutVerification","setVerificationButtonClicked","response_verify_email","setVerificationEmailSent","setTimeoutVerification","cashier_store_asyncToGenerator","_callee6","_context6","_x5","CONTRACT_SHADES","CALL","PUT","CALLE","PUTE","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","ASIANU","ASIAND","DEFAULT_SHADES","1","2","BARRIER_COLORS","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","createChartBarrier","SmartChartStore","removeBarriers","createBarriers","line_style","not_draggable","updateBarrierShade","MarkerLine","marker_config","LINE_END","content_config","chart-marker-line__icon--won","chart-marker-line__icon--lost","LINE_START","MarkerSpot","spot_count","MarkerSpotLabel","marker_spot_label_classCallCheck","marker_spot_label_possibleConstructorReturn","marker_spot_label_getPrototypeOf","handleHoverToggle","show_label","has_hover_toggle","marker_spot","Markers_marker_spot","spot_className","align_label","spot_epoch","chart-spot-label__value-container--won","chart-spot-label__value-container--lost","spot_value","MARKER_TYPES_CONFIG","ContentComponent","LINE_PURCHASE","SPOT_ENTRY","SPOT_SELL","SPOT_EXIT","SPOT_MIDDLE","createMarkerConfig","marker_type","extend","getSpotCount","createMarkerSpotEntry","entry_tick_time","entry_tick","entry_tick_display_value","createMarkerSpotExit","tick","is_user_sold","exit_tick","exit_tick_display_value","createMarkerSpotMiddle","spot","tick_display_value","createChartMarkers","addTickMarker","addMarker","marker_spots","marker_lines","chart_markers_defineProperty","_marker_spots","_marker_lines","chart_markers_asyncToGenerator","marker_obj","createMarker","markers","_x2","_x3","addLabelAlignment","prev_tick","is_entry_spot","is_middle_spot","is_exit_spot","_x4","contractSold","sold_for","ContractReplayStore","is_ongoing_contract","prev_indicative","handleSubscribeProposalOpenContract","proposal_open_contract_request","forgetProposalOpenContract","setContractMode","populateConfig","indicative_status","sell_info","cleanupContractChartView","setIsChartLoading","new_indicative","updateMargin","handleDigits","extendObservable","getDigitInfo","handleSell","contract_replay_store_objectSpread","ContractTradeStore","is_from_positions","_this$contract_info","is_one_tick_contract","setStaticChart","setContractStart","setContractEnd","longcode","onMountBuy","updateProposal","has_existing_id","resetValues","switchToContractMode","applySavedTradeChartLayout","handleChartType","setChartView","drawChart","updateChartType","updateGranularity","showUnavailableLocationError","clients_country_code","clients_country_text","clients_country","obj_country","pickDefaultSymbol","getFavoriteOpenSymbol","getFirstOpenSymbol","chart_favorites","client_favorite_list","client_fav_symbol","client_first_open_symbol","isSymbolOpen","first_open_symbol","submarket","getSymbolDisplayName","formatPortfolioPosition","portfolio_pos","details","reference","getUnsupportedContracts","PortfolioStore","getPositionById","createTransformer","pos","pos1","pos2","res","new_pos","pushNewPosition","proposalOpenContractHandler","getPositionIndexById","populateResultDetails","proposal","entry_spot","portfolio_store_objectSpread","contract_idx","portfolio_store_asyncToGenerator","initializePortfolio","portfolioHandler","transactionHandler","contract_response","current_spot","current_spot_time","getDateTo","date_to","today","getDateFrom","should_load_partially","date_from","shouldSendDateFrom","getDateBoundaries","format_request_objectSpread","formatProfitTableTransactions","format_string","should_exclude_currency","format_response_objectSpread","delay_on_scroll_time","ProfitTableStore","fetchOnScroll","debounce","fetchNextBatch","has_loaded_all","shouldFetchNextBatch","profitTableResponseHandler","formatted_transactions","profit_store_toConsumableArray","_event$target","left_to_scroll","scrollHeight","assertHasValidCache","client_loginid","clearDateFilter","date_values","previous","barriersObjectToArray","reference_array","js_object","ChartBarrierStore","chart_barrier_store_dec","chart_barrier_store_dec2","chart_barrier_store_dec3","chart_barrier_store_dec4","chart_barrier_store_descriptor","chart_barrier_store_applyDecoratedDescriptor","chart_barrier_store_class","onChartBarrierChange","chart_barrier_store_classCallCheck","chart_barrier_store_initializerDefineProperty","chart_barrier_store_descriptor2","chart_barrier_store_descriptor3","chart_barrier_store_descriptor4","chart_barrier_store_descriptor5","chart_barrier_store_descriptor6","chart_barrier_store_descriptor7","chart_barrier_store_descriptor8","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","isFromChart","should_display","updateBarriers","chart_barrier_store_toConsumableArray","is_relative","barriers_list","barriersToString","configurable","initializer","getOwnPropertyDescriptor","ChartMarkerStore","chart_marker_store_descriptor","chart_marker_store_applyDecoratedDescriptor","chart_marker_store_class","chart_marker_store_classCallCheck","chart_marker_store_initializerDefineProperty","chart_marker_store_descriptor2","barriers_empty_array","markers_empty_array","trade_chart_symbol","trade_chart_granularity","trade_chart_type","wsSubscribe","smart_chart_store_objectSpread","wsForget","wsForgetStream","wsSendRequest","is_from_other_position","saveAndClearTradeChartLayout","removeMarkers","resetScrollToLeft","resetPurchaseStates","is_title_enabled","updateEpochScrollToValue","updateBarrierColor","should_export_layout","should_import_layout","trade_chart_layout","should_clear_chart","isDone","layout","smart_chart_store_defineProperty","has_differing","barriers_array","next_barrier","markers_array","marker","next_marker","assetInformation","countdown","is_chart_countdown_visible","isHighestLowestMarkerEnabled","current_language","barrier_config","main_barrier","isBarrierSupported","StatementStore","statementHandler","balance_after","action_type","refid","desc","app_id","formatStatementTransaction","statement_store_toConsumableArray","processPurchase","onChangeSymbolAsync","getValidationRules","start_moment_clone","_value$split2","_value$split4","onChangeContractTypeList","onChangeContractType","onChangeExpiry","onChangeStartDate","obj_contract_start_type","obj_sessions","obj_start_time","obj_duration_units_list","obj_duration_unit","obj_expiry_type","obj_expiry_date","obj_market_open_times","obj_market_close_times","obj_expiry_time","obj_duration_min_max","start_date_objectSpread","processTradeParams","new_state","functions","getMethodsList","extendOrReplace","t1","t2","ContractTypeHelper","process_toConsumableArray","StartDate","source","new_values","map_error_field","getProposalErrorField","error_field","error_id","el_error","getElementsByName","createProposalRequestForContract","type_of_contract","obj_expiry","proposal_objectSpread","TradeStore","trade_store_classCallCheck","trade_store_getPrototypeOf","trade_store_initializerDefineProperty","trade_store_descriptor","trade_store_assertThisInitialized","trade_store_descriptor2","trade_store_descriptor3","trade_store_descriptor4","trade_store_descriptor5","trade_store_descriptor6","trade_store_descriptor7","trade_store_descriptor8","trade_store_descriptor9","trade_store_descriptor10","trade_store_descriptor11","trade_store_descriptor12","trade_store_descriptor13","trade_store_descriptor14","trade_store_descriptor15","trade_store_descriptor16","trade_store_descriptor17","trade_store_descriptor18","trade_store_descriptor19","trade_store_descriptor20","trade_store_descriptor21","trade_store_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","_descriptor33","_descriptor34","_descriptor35","_descriptor36","_descriptor37","proposal_requests","initial_barriers","is_initial_barrier_applied","_descriptor38","_descriptor39","_descriptor40","disablePurchaseButtons","el_purchase_value","el_purchase_buttons","changeDurationValidationRules","onAllowEqualsChange","is_symbol_in_active_symbols","processNewValuesAsync","setAppLoading","trade_store_objectSpread","setActiveSymbols","trade_store_asyncToGenerator","setDefaultSymbol","setContractTypes","validateAllProperties","trade_store_defineProperty","previous_symbol","setMarketStatus","is_over","is_purchase_enabled","_response$buy","drawContractStartTime","openPositionsDrawer","pushPurchaseData","obj_new_values","is_changed_by_user","obj_old_values","prev_currency","setPreviousSymbol","requests","new_req","current_req","createProposalRequests","setIsDigitContract","onProposalResponse","prev_proposal_info","obj_prev_contract_basis","ask_price","contract_basis","getProposalInfo","proposal_response","_proposal_response$ec","setChartBarrier","duration_options","_callee7","_context7","onLoadingMount","prepareTradeStore","is_trade_component_mounted","first_timeout","loading_message","secondary_message","setSlowLoading","second_timeout","loading_interval","smart_chart_store","restoreTradeChart","pushState","_callee10","_context10","_callee9","_context9","_this13","_this14","_this15","ModulesStore","Modules_classCallCheck","contract_replay","UIStore","ui_store_classCallCheck","ui_store_getPrototypeOf","ui_store_initializerDefineProperty","ui_store_descriptor","ui_store_assertThisInitialized","ui_store_descriptor2","ui_store_descriptor3","ui_store_descriptor4","ui_store_descriptor5","ui_store_descriptor6","ui_store_descriptor7","ui_store_descriptor8","ui_store_descriptor9","ui_store_descriptor10","ui_store_descriptor11","ui_store_descriptor12","ui_store_descriptor13","ui_store_descriptor14","ui_store_descriptor15","ui_store_descriptor16","ui_store_descriptor17","ui_store_descriptor18","ui_store_descriptor19","ui_store_descriptor20","ui_store_descriptor21","ui_store_descriptor22","ui_store_descriptor23","ui_store_descriptor24","ui_store_descriptor25","ui_store_descriptor26","ui_store_descriptor27","ui_store_descriptor28","ui_store_descriptor29","ui_store_descriptor30","ui_store_descriptor31","ui_store_descriptor32","ui_store_descriptor33","ui_store_descriptor34","ui_store_descriptor35","ui_store_descriptor36","handleResize","autorun","screen_width","innerWidth","tab","is_reports_visible","is_main_drawer_on","is_notifications_drawer_on","notification","notification_messages","ui_store_toConsumableArray","push_notifications","state_change","is_account_signup_modal_visible","RootStore","Stores_classCallCheck","configure","enforceActions","initStore","hidden","setStorageEvents","isTouchDevice","App","base","basename","is_tablet","error_boundary","app_contents","Routes_routes","Modals_modals","app_App","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","FadeIn","posed","span","transition","PopoverBubble","calculatePosition","target_rectangle","_this$props$margin","bottom","right","popover_bubble","react_pose_es","initialPose","data-popover-pos","popover__bubble--error","popover_classCallCheck","popover_possibleConstructorReturn","popover_getPrototypeOf","toggleOpen","Boolean","target_reference","toggleClose","disable_target_icon","icon_class_name","Popover_popover_bubble","Fieldset","fieldset_header_class","fieldset_info_class","loginUrl","domain_app_ids","server_url","signup_device","date_first_contact","marketing_queries","default_binary_url","initOneAll","provider","el_button","brand","_common_base_server_time__WEBPACK_IMPORTED_MODULE_0__","_common_base_server_time__WEBPACK_IMPORTED_MODULE_0___default","Utils_Date__WEBPACK_IMPORTED_MODULE_1__","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","isBeforeDate","should_only_check_hour","now_moment","session","deriv.app","all_domains","config_app_id","is_real","server","_getLastTickFromTickS","createDigitInfo","spot_time","digit","icons","IconArrowBold","IconArrow","IconBack","IconCalendarToday","IconCalendar","IconChevronDoubleLeft","IconChevronDoubleRight","IconChevronLeft","IconChevronRight","IconClear","IconClock","IconClose","IconCountryFlag","IconDanger","IconDeposit","IconDepositSmall","IconExclamation","IconFlag","IconInfoBlue","IconInfoOutline","IconInformation","IconMinimize","IconMinus","IconPlus","IconQuestion","IconRedDot","IconSuccess","IconWarning","IconWip","IconWithdrawal","IconWithdrawalSmall","ContractIconClose","IconEndTime","ContractIconFlag","IconStartTime","IconTick","IconAuthenticateWithdrawals","IconEmailSent","ModalIconClose","IconMaximize","IconPositions","IconSettings","IconAccountsCurrency","IconLogout","IconBell","IconCashier","IconDeriv","IconHamburger","IconPortfolio","IconReports","IconTrade","IconDemo","IconOpenPositions","IconProfitTable","IconStatement","IconCalendarForwardToday","IconCharts","IconLanguage","IconPurchase","IconTheme","IconBuy","IconPayout","IconSell","IconWallet","IconBarrierDown","IconBarrierUp","IconTradeCategory","TradeCategoriesGIF","TradeCategories","IconTradeType","IconLock","IconPriceMove","classNameRect","IconLazy","FRXAUDCAD","FRXAUDCHF","FRXAUDJPY","FRXAUDNZD","FRXAUDPLN","FRXAUDUSD","FRXBROUSD","FRXEURAUD","FRXEURCAD","FRXEURCHF","FRXEURGBP","FRXEURJPY","FRXEURNZD","FRXEURUSD","FRXGBPAUD","FRXGBPCAD","FRXGBPCHF","FRXGBPJPY","FRXGBPNOK","FRXGBPUSD","FRXNZDJPY","FRXNZDUSD","FRXUSDCAD","FRXUSDCHF","FRXUSDJPY","FRXUSDNOK","FRXUSDPLN","FRXUSDSEK","FRXXAGUSD","FRXXAUUSD","FRXXPDUSD","FRXXPTUSD","OTC_AEX","OTC_AS51","OTC_DJI","OTC_FCHI","OTC_FTSE","OTC_GDAXI","OTC_HSI","OTC_IBEX35","OTC_N225","OTC_NDX","OTC_SPC","OTC_SSMI","OTC_SX5E","R_10","R_25","R_50","R_75","R_100","RDBEAR","RDBULL","WLDAUD","WLDEUR","WLDGBP","WLDUSD","RESETCALL","RESETPUT","TICKHIGH","TICKLOW","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","CALLSPREAD","PUTSPREAD","RUNHIGH","RUNLOW","getSupportedContracts","_common_base_currency_base__WEBPACK_IMPORTED_MODULE_3__","Money","_ref$currency","has_sign","_ref$is_formatted","is_formatted","abs_value","final_amount","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","Mondays","Tuesdays","Wednesdays","Thursdays","Fridays","Saturdays","Sundays","isEqualArray","isEqualObject","arr1","arr2","obj1","obj2","to_replace","tag_name","attributes","attr","textContent","UILoader","classNameBlock","block_class","loading_class","viewBox","strokeWidth","strokeMiterlimit","Utils_Date__WEBPACK_IMPORTED_MODULE_0__","_logout__WEBPACK_IMPORTED_MODULE_0__","_socket_general__WEBPACK_IMPORTED_MODULE_1__","_ws_methods__WEBPACK_IMPORTED_MODULE_2__","react_router__WEBPACK_IMPORTED_MODULE_0__","Constants_routes__WEBPACK_IMPORTED_MODULE_1__","routes_config","route_info","match_path","matchPath","route_path","getPath"],"mappings":"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","file":"js/main.8d80b11c6ac6ffb87751.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\tvar prefetchChunks = data[3] || [];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\tdeferredPrefetch.push.apply(deferredPrefetch, prefetchChunks);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\tif(deferredModules.length === 0) {\n \t\t\t// chunk prefetching for javascript\n \t\t\tdeferredPrefetch.forEach(function(chunkId) {\n \t\t\t\tif(installedChunks[chunkId] === undefined) {\n \t\t\t\t\tinstalledChunks[chunkId] = null;\n \t\t\t\t\tvar link = document.createElement('link');\n\n \t\t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\t\tlink.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t\t}\n \t\t\t\t\tlink.rel = \"prefetch\";\n \t\t\t\t\tlink.as = \"script\";\n \t\t\t\t\tlink.href = jsonpScriptSrc(chunkId);\n \t\t\t\t\tdocument.head.appendChild(link);\n \t\t\t\t}\n \t\t\t});\n \t\t\tdeferredPrefetch.length = 0;\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"main\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [], deferredPrefetch = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"404\":\"404\",\"DenialOfServiceModal\":\"DenialOfServiceModal\",\"MarketUnavailableModal\":\"MarketUnavailableModal\",\"ServicesErrorModal\":\"ServicesErrorModal\",\"UnsupportedContractModal\":\"UnsupportedContractModal\",\"account-info\":\"account-info\",\"contract\":\"contract\",\"digits\":\"digits\",\"info-box\":\"info-box\",\"notification-messages\":\"notification-messages\",\"push-notification\":\"push-notification\",\"reports\":\"reports\",\"screen-small\":\"screen-small\",\"settings-chart\":\"settings-chart\",\"settings-language\":\"settings-language\",\"settings-theme\":\"settings-theme\",\"toggle-cashier\":\"toggle-cashier\",\"toggle-menu-drawer\":\"toggle-menu-drawer\",\"vendors~open_position~7c650be5\":\"vendors~open_position~7c650be5\",\"default~open_position~1833eefb\":\"default~open_position~1833eefb\",\"open_positions\":\"open_positions\",\"profit_table\":\"profit_table\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\",\"work-in-progress\":\"work-in-progress\",\"wallet-information\":\"wallet-information\",\"two-month-picker\":\"two-month-picker\"}[chunkId]||chunkId) + \".\" + \"8d80b11c6ac6ffb87751\" + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"digits\":1,\"notification-messages\":1,\"reports\":1,\"screen-small\":1,\"work-in-progress\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + chunkId + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \tvar startupResult = (function() {\n \t// add entry module to deferred list\n \tdeferredModules.push([508,\"vendors~main\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n \t})();\n\n \twebpackJsonpCallback([[], {}, 0, [\"digits\",\"info-box\",\"settings-chart\",\"settings-language\",\"settings-theme\",\"toggle-cashier\"]]);\n \treturn startupResult;\n","const ClientBase       = require('./client_base');\nconst SocketCache      = require('./socket_cache');\nconst getLanguage      = require('../language').get;\nconst State            = require('../storage').State;\nconst cloneObject      = require('../utility').cloneObject;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst isEmptyObject    = require('../utility').isEmptyObject;\nconst PromiseClass     = require('../utility').PromiseClass;\nconst getAppId         = require('../../config').getAppId;\nconst getSocketURL     = require('../../config').getSocketURL;\n\n/*\n * An abstraction layer over native javascript WebSocket,\n * which provides additional functionality like\n * reopen the closed connection and process the buffered requests\n */\nconst BinarySocketBase = (() => {\n    let binary_socket;\n\n    let config               = {};\n    let buffered_sends       = [];\n    let req_id               = 0;\n    let wrong_app_id         = 0;\n    let is_available         = true;\n    let is_disconnect_called = false;\n    let is_connected_before  = false;\n\n    const socket_url = `${getSocketURL()}?app_id=${getAppId()}&l=${getLanguage()}`;\n    const timeouts   = {};\n    const promises   = {};\n\n    const no_duplicate_requests = [\n        'authorize',\n        'get_settings',\n        'residence_list',\n        'landing_company',\n        'payout_currencies',\n        'asset_index',\n        'active_symbols',\n    ];\n\n    const sent_requests = {\n        items : [],\n        clear : () => { sent_requests.items = []; },\n        has   : msg_type => sent_requests.items.indexOf(msg_type) >= 0,\n        add   : (msg_type) => { if (!sent_requests.has(msg_type)) sent_requests.items.push(msg_type); },\n        remove: (msg_type) => {\n            if (sent_requests.has(msg_type)) sent_requests.items.splice(sent_requests.items.indexOf(msg_type, 1));\n        },\n    };\n\n    const waiting_list = {\n        items: {},\n        add  : (msg_type, promise_obj) => {\n            if (!waiting_list.items[msg_type]) {\n                waiting_list.items[msg_type] = [];\n            }\n            waiting_list.items[msg_type].push(promise_obj);\n        },\n        resolve: (response) => {\n            const msg_type      = response.msg_type;\n            const this_promises = waiting_list.items[msg_type];\n            if (this_promises && this_promises.length) {\n                this_promises.forEach((pr) => {\n                    if (!waiting_list.another_exists(pr, msg_type)) {\n                        pr.resolve(response);\n                    }\n                });\n                waiting_list.items[msg_type] = [];\n            }\n        },\n        another_exists: (pr, msg_type) => (\n            Object.keys(waiting_list.items)\n                .some(type => (\n                    type !== msg_type &&\n                    waiting_list.items[type].indexOf(pr) !== -1\n                ))\n        ),\n    };\n\n    const clearTimeouts = () => {\n        Object.keys(timeouts).forEach((key) => {\n            clearTimeout(timeouts[key]);\n            delete timeouts[key];\n        });\n    };\n\n    const isReady = () => hasReadyState(1);\n\n    const isClose = () => !binary_socket || hasReadyState(2, 3);\n\n    const hasReadyState = (...states) => binary_socket && states.some(s => binary_socket.readyState === s);\n\n    const sendBufferedRequests = () => {\n        while (buffered_sends.length > 0 && is_available) {\n            const req_obj = buffered_sends.shift();\n            send(req_obj.request, req_obj.options);\n        }\n    };\n\n    const wait = (...msg_types) => {\n        const promise_obj = new PromiseClass();\n        let is_resolved   = true;\n        msg_types.forEach((msg_type) => {\n            const last_response = State.get(['response', msg_type]);\n            if (!last_response) {\n                if (msg_type !== 'authorize' || ClientBase.isLoggedIn()) {\n                    waiting_list.add(msg_type, promise_obj);\n                    is_resolved = false;\n                }\n            } else if (msg_types.length === 1) {\n                promise_obj.resolve(last_response);\n            }\n        });\n        if (is_resolved) {\n            promise_obj.resolve();\n        }\n        return promise_obj.promise;\n    };\n\n    /**\n     * @param {Object} data: request object\n     * @param {Object} options:\n     *      forced  : {boolean}  sends the request regardless the same msg_type has been sent before\n     *      msg_type: {string}   specify the type of request call\n     *      callback: {function} to call on response of streaming requests\n     */\n    const send = function (data, options = {}) {\n        const promise_obj = options.promise || new PromiseClass();\n        const has_callback = typeof options.callback === 'function';\n\n        if (!data || isEmptyObject(data)) return promise_obj.promise;\n\n        const msg_type = options.msg_type || no_duplicate_requests.find(c => c in data);\n\n        // Fetch from cache\n        if (!options.forced) {\n            const response = SocketCache.get(data, msg_type);\n            if (response) {\n                State.set(['response', msg_type], cloneObject(response));\n                if (isReady() && is_available && !options.skip_cache_update && !has_callback) { // make the request to keep the cache updated\n                    binary_socket.send(JSON.stringify(data), { forced: true });\n                } else if (+data.time !== 1) { // Do not buffer all time requests\n                    buffered_sends.push({\n                        request: data,\n                        options: Object.assign(options, { promise: promise_obj, forced: true }),\n                    });\n                }\n                promise_obj.resolve(response);\n                if (has_callback) {\n                    options.callback(response);\n                } else {\n                    return promise_obj.promise;\n                }\n            }\n        }\n\n        // Fetch from state\n        if (!options.forced && msg_type && no_duplicate_requests.indexOf(msg_type) !== -1) {\n            const last_response = State.get(['response', msg_type]);\n            if (last_response) {\n                promise_obj.resolve(last_response);\n                return promise_obj.promise;\n            } else if (sent_requests.has(msg_type)) {\n                return wait(msg_type).then((response) => {\n                    promise_obj.resolve(response);\n                    return promise_obj.promise;\n                });\n            }\n        }\n\n        if (!data.req_id) {\n            data.req_id = ++req_id;\n        }\n        promises[data.req_id] = {\n            callback: (response) => {\n                if (has_callback) {\n                    options.callback(response);\n                } else {\n                    promise_obj.resolve(response);\n                }\n            },\n            subscribe: !!data.subscribe,\n        };\n\n        if (isReady() && is_available && config.isOnline()) {\n            is_disconnect_called = false;\n            if (!getPropertyValue(data, 'passthrough') && !getPropertyValue(data, 'verify_email')) {\n                data.passthrough = {};\n            }\n\n            binary_socket.send(JSON.stringify(data));\n            config.wsEvent('send');\n            if (msg_type && !sent_requests.has(msg_type)) {\n                sent_requests.add(msg_type);\n            }\n        } else if (+data.time !== 1) { // Do not buffer all time requests\n            buffered_sends.push({ request: data, options: Object.assign(options, { promise: promise_obj }) });\n        }\n\n        return promise_obj.promise;\n    };\n\n    const init = (options) => {\n        if (wrong_app_id === getAppId()) {\n            return;\n        }\n        if (typeof options === 'object' && config !== options) {\n            config         = options;\n            buffered_sends = [];\n        }\n        clearTimeouts();\n        config.wsEvent('init');\n\n        if (isClose()) {\n            binary_socket = new WebSocket(socket_url);\n            State.set('response', {});\n        }\n\n        binary_socket.onopen = () => {\n            config.wsEvent('open');\n            if (ClientBase.isLoggedIn()) {\n                send({ authorize: ClientBase.get('token') }, { forced: true });\n            } else {\n                sendBufferedRequests();\n            }\n\n            if (typeof config.onOpen === 'function') {\n                config.onOpen(isReady());\n            }\n\n            if (typeof config.onReconnect === 'function' && is_connected_before) {\n                config.onReconnect();\n            }\n\n            if (!is_connected_before) {\n                is_connected_before = true;\n            }\n        };\n\n        binary_socket.onmessage = (msg) => {\n            config.wsEvent('message');\n            const response = msg.data ? JSON.parse(msg.data) : undefined;\n            if (response) {\n                SocketCache.set(response);\n                const msg_type = response.msg_type;\n\n                // store in State\n                if (!getPropertyValue(response, ['echo_req', 'subscribe']) || /balance|website_status/.test(msg_type)) {\n                    State.set(['response', msg_type], cloneObject(response));\n                }\n                // resolve the send promise\n                const this_req_id = response.req_id;\n                const pr          = this_req_id ? promises[this_req_id] : null;\n                if (pr && typeof pr.callback === 'function') {\n                    pr.callback(response);\n                    if (!pr.subscribe) {\n                        delete promises[this_req_id];\n                    }\n                }\n                // resolve the wait promise\n                waiting_list.resolve(response);\n\n                if (getPropertyValue(response, ['error', 'code']) === 'InvalidAppID') {\n                    wrong_app_id = getAppId();\n                }\n\n                if (typeof config.onMessage === 'function') {\n                    config.onMessage(response);\n                }\n            }\n        };\n\n        binary_socket.onclose = () => {\n            sent_requests.clear();\n            clearTimeouts();\n            config.wsEvent('close');\n\n            if (wrong_app_id !== getAppId() && typeof config.onDisconnect === 'function' && !is_disconnect_called) {\n                config.onDisconnect();\n                is_disconnect_called = true;\n            }\n        };\n    };\n\n    const clear = (msg_type) => {\n        buffered_sends = [];\n        if (msg_type) {\n            State.set(['response', msg_type], undefined);\n            sent_requests.remove(msg_type);\n        }\n    };\n\n    const availability = (status) => {\n        if (typeof status !== 'undefined') {\n            is_available = !!status;\n        }\n        return is_available;\n    };\n\n    return {\n        init,\n        wait,\n        send,\n        clear,\n        clearTimeouts,\n        availability,\n        hasReadyState,\n        sendBuffered      : sendBufferedRequests,\n        get               : () => binary_socket,\n        setOnDisconnect   : (onDisconnect) => { config.onDisconnect = onDisconnect; },\n        setOnReconnect    : (onReconnect) => { config.onReconnect = onReconnect; },\n        removeOnReconnect : () => { delete config.onReconnect; },\n        removeOnDisconnect: () => { delete config.onDisconnect; },\n    };\n})();\n\nmodule.exports = BinarySocketBase;\n","const moment           = require('moment');\nconst getLanguage      = require('../language').get;\nconst LocalStore       = require('../storage').LocalStore;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst getStaticHash    = require('../utility').getStaticHash;\nconst isEmptyObject    = require('../utility').isEmptyObject;\n\n/*\n * Caches WS responses to reduce delay time and number of requests\n * Stores data in LocalStore which is the first one available in: localStorage, sessionStorage, InScriptStore\n *\n * 1. It caches only the response of those calls which determined in `config`\n * 2. It doesn't cache responses which returned error\n * 3. The value is requested by BinarySocket,\n *    if this returns a value according to the logic here, socket code take it as response\n *    but also triggers an async `send` request, to keep the cache updated for next time\n * 4. Uses client's time to set and check for expiry, as the expire durations are not so long to need a more precise one\n *    (And doesn't worth to wait for the response of time call)\n * 5. Some responses should be cached by a particular value from request (e.g. contracts_for_frxAUDJPY)\n *    so there can be more than one value for a particular call\n * 6. Clears the whole cache regardless their expire time on the following events:\n *    6.1. Client changes: login / logout / switch loginid\n *    6.2. Detect a new release (static hash changed)\n */\nconst SocketCache = (() => {\n    // keys are msg_type\n    // expire: how long to keep the value (in minutes)\n    // map_to: to store different responses of the same key, should be array of:\n    //     string  : the property value from echo_req\n    //     function: return value of the function\n    const config = {\n        payout_currencies     : { expire: 120 },\n        proposal_open_contract: { expire: 10,  map_to: ['contract_id'] },\n        active_symbols        : { expire: 10,  map_to: ['product_type', 'landing_company', getLanguage] },\n        contracts_for         : { expire: 10,  map_to: ['contracts_for', 'product_type', 'currency'] },\n        exchange_rates        : { expire: 60,  map_to: ['base_currency'] },\n        ticks_history         : { expire: 10,  map_to: ['ticks_history', 'granularity', 'start', 'end', 'style'] },\n        trading_times         : { expire: 120, map_to: ['trading_times'] },\n        // TODO: Enable statement and profit table caching once we have UI design for handling\n        // transitions between cached table and newly added data to table\n        // statement             : { expire: 10,   map_to: ['limit', 'offset'] },\n        // profit_table          : { expire: 10,   map_to: ['date_from', 'limit', 'offset'] },\n    };\n\n    const storage_key = 'ws_cache';\n\n    let data_obj = {};\n\n    const msg_type_mapping = {\n        history: 'ticks_history',\n        candles: 'ticks_history',\n    };\n\n    const isMarketClosed = (active_symbols = [], symbol) => {\n        if (!active_symbols.length) return false;\n        return (active_symbols.filter(x => x.symbol === symbol)[0]) ?\n            !active_symbols.filter(symbol_info => symbol_info.symbol === symbol)[0].exchange_is_open\n            :\n            false;\n    };\n\n    const set = (response) => {\n        const msg_type = msg_type_mapping[response.msg_type] || response.msg_type;\n\n        // Excluding closed markets from caching once we have ws_cache and active_symbols cache set up\n        const ws_cache = JSON.parse(localStorage.getItem('ws_cache'));\n        // TODO: Update method of getting language from cookies once we have it in ui_store localStorage\n        const curr_lang = document.cookie.replace(/(?:(?:^|.*;\\s*)language\\s*=\\s*([^;]*).*$)|^.*$/, '$1');\n\n        const active_symbols_obj = curr_lang ? `active_symbols___${curr_lang}` : null;\n\n        if (!isEmptyObject(ws_cache)) {\n            if (msg_type === 'ticks_history' && !isEmptyObject(ws_cache[active_symbols_obj])) {\n                const active_symbols = ws_cache[active_symbols_obj].value.active_symbols;\n                const curr_symbol    = response.echo_req.ticks_history;\n                if (isMarketClosed(active_symbols, curr_symbol)) {\n                    return;\n                }\n            }\n        }\n\n        // check if response has subscription, since we only want to cache non-streaming responses\n        if (response.subscription || (response.echo_req.end === 'latest')) return;\n\n        if (!config[msg_type]) return;\n        // prevent unwanted page behaviour\n        // if a cached version already exists but it gives an error after being called for updating the cache\n        const cached_response = get(response.echo_req) || {};\n        const cached_message  = cached_response[msg_type];\n        const new_message     = response[msg_type];\n\n        const has_error_or_missing = response.error; // || !(msg_type in response);\n        const has_new_value        = cached_message && isEmptyValue(cached_message) && !isEmptyValue(new_message);\n        const has_old_cache        = cached_message && isEmptyValue(new_message) && !isEmptyValue(cached_message);\n        const has_valid_cache      = !isEmptyValue(cached_response) && !cached_response.error;\n\n        if ((has_error_or_missing || has_new_value || has_old_cache) && has_valid_cache) {\n            clear();\n            // window.location.reload();\n            return;\n        }\n\n        const key      = makeKey(response.echo_req, msg_type);\n        const expires  = moment().add(config[msg_type].expire, 'm').valueOf();\n\n        if (!data_obj.static_hash) {\n            data_obj.static_hash = getStaticHash();\n        }\n\n        data_obj[key] = { value: response, expires };\n        LocalStore.setObject(storage_key, data_obj);\n    };\n\n    const isEmptyValue = (data) => {\n        let is_empty_data = false;\n        if (Array.isArray(data)) {\n            if (!data.length) {\n                is_empty_data = true;\n            }\n        } else if (typeof response_data === 'object') {\n            if (!Object.keys(data).length) {\n                is_empty_data = true;\n            }\n        }\n        return is_empty_data;\n    };\n\n    const get = (request, msg_type) => {\n        let response;\n\n        if (isEmptyObject(data_obj)) {\n            data_obj = LocalStore.getObject(storage_key);\n            if (isEmptyObject(data_obj)) return undefined;\n        }\n\n        if (data_obj.static_hash !== getStaticHash()) { // new release\n            clear();\n        }\n\n        const key          = makeKey(request, msg_type);\n        const response_obj = getPropertyValue(data_obj, key) || {};\n\n        if (moment().isBefore(response_obj.expires)) {\n            response = response_obj.value;\n        } else { // remove if expired\n            remove(key);\n        }\n\n        return response;\n    };\n\n    const makeKey = (source_obj = {}, msg_type = '') => {\n        let key = msg_type || Object.keys(source_obj).find(type => config[type]);\n\n        if (key && !isEmptyObject(source_obj)) {\n            ((config[key] || {}).map_to || []).forEach((map_key) => {\n                const value = typeof map_key === 'function' ? map_key() : source_obj[map_key];\n                key += map_key ? `_${value || ''}` : '';\n            });\n        }\n\n        return key;\n    };\n\n    const remove = (key, should_match_all) => {\n        if (should_match_all) {\n            Object.keys(data_obj).forEach((data_key) => {\n                if (data_key.indexOf(key) !== -1) {\n                    delete data_obj[data_key];\n                }\n            });\n        } else if (key in data_obj) {\n            delete data_obj[key];\n        }\n        LocalStore.setObject(storage_key, data_obj);\n    };\n\n    const clear = () => {\n        LocalStore.remove(storage_key);\n        data_obj = {};\n    };\n\n    return {\n        set,\n        get,\n        remove,\n        clear,\n    };\n})();\n\nmodule.exports = SocketCache;\n","import { getMarketNamesMap, getContractConfig } from 'Constants';\n\n/**\n * Fetch market information from shortcode\n * @param shortcode: string\n * @returns {{underlying: string, category: string}}\n */\nexport const getMarketInformation = (shortcode) => {\n    const market_info = {\n        category  : '',\n        underlying: '',\n    };\n\n    const pattern = new RegExp('^([A-Z]+)_((OTC_[A-Z0-9]+)|R_[\\\\d]{2,3}|[A-Z]+)_'); // Used to get market name from shortcode\n    const extracted = pattern.exec(shortcode);\n    if (extracted !== null) {\n        market_info.category   = extracted[1].toLowerCase();\n        market_info.underlying = extracted[2];\n    }\n\n    return market_info;\n};\n\nexport const getMarketName = (underlying) => underlying ? getMarketNamesMap()[underlying.toUpperCase()] : null;\n\nexport const getTradeTypeName = (category) => category ? getContractConfig()[category.toUpperCase()].name : null;\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws-methods';\n\nexport const requestLogout = () =>\n    WS.logout().then(doLogout);\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n};\n","const createElement = require('./utility').createElement;\n\n/*\n * function to check if element is visible or not\n *\n */\nconst isVisible = elem => !(!elem || (elem.offsetWidth === 0 && elem.offsetHeight === 0));\n\n/*\n * @param  {String}  id_selector   the selector for the element\n * @param  {Element} parent        optional selector to use for parent, defaults to document\n * @return {Element}               return element if it exists, if it doesn't return a dummy element\n */\nconst getElementById = (id_selector, parent = document) => parent.getElementById(id_selector) || createElement('div');\n\nmodule.exports = {\n    isVisible,\n    getElementById,\n};\n","const toTitleCase = str => (\n    (str || '').replace(/\\w[^\\s/\\\\]*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase())\n);\n\nconst padLeft = (txt, len, char) => {\n    const text = String(txt || '');\n    return text.length >= len ? text : `${Array((len - text.length) + 1).join(char)}${text}`;\n};\n\nconst compareBigUnsignedInt = (a, b) => {\n    let first_num  = numberToString(a);\n    let second_num = numberToString(b);\n    if (!first_num || !second_num) {\n        return '';\n    }\n    const max_length = Math.max(first_num.length, second_num.length);\n    first_num        = padLeft(first_num, max_length, '0');\n    second_num       = padLeft(second_num, max_length, '0');\n\n    // lexicographical comparison\n    let order = 0;\n    if (first_num !== second_num) {\n        order = first_num > second_num ? 1 : -1;\n    }\n\n    return order;\n};\n\nconst numberToString = n => (typeof n === 'number' ? String(n) : n);\n\nmodule.exports = {\n    toTitleCase,\n    padLeft,\n    numberToString,\n    compareBigUnsignedInt,\n};\n","import { localize } from 'App/i18n';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall      : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['stake', 'payout'], components: ['start_date'], barrier_count: 0 },\n        rise_fall_equal: { title: localize('Rise/Fall'),                  trade_types: ['CALLE', 'PUTE'],             basis: ['stake', 'payout'], components: ['start_date'], barrier_count: 0 },\n        high_low       : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['stake', 'payout'], components: ['barrier'],    barrier_count: 1 },\n        touch          : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['stake', 'payout'], components: ['barrier'] },\n        end            : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['stake', 'payout'], components: ['barrier'] },\n        stay           : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['stake', 'payout'], components: ['barrier'] },\n        asian          : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['stake', 'payout'], components: [] },\n        match_diff     : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['stake', 'payout'], components: ['last_digit'] },\n        even_odd       : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['stake', 'payout'], components: [] },\n        over_under     : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['stake', 'payout'], components: ['last_digit'] },\n        lb_call        : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put         : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low    : { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'rise_fall_equal', 'high_low'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        gtm       : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","import { localize }        from 'App/i18n';\nimport { unique }          from '_common/utility';\nimport {\n    epochToMoment,\n    formatMiliseconds,\n    getDiffDuration }      from 'Utils/Date';\nimport { isDigitContract } from '../../Contract/Helpers/digits';\n\nexport const getCurrentTick = (contract_info) => {\n    const tick_stream = unique(contract_info.tick_stream, 'epoch');\n    const current_tick = isDigitContract(contract_info.contract_type) ? tick_stream.length : tick_stream.length - 1;\n    return (!current_tick || current_tick < 0) ? 0 : current_tick;\n};\n\nexport const getDurationUnitValue = (obj_duration) => {\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n    // Check with isEndTime to find out if value of duration has decimals\n    // for days we do not require precision for End Time value since users cannot select with timepicker if not in same day\n    // Seconds is the smallest End Time duration displayed thus we can keep the same formatting as normal Duration\n\n    if (duration_ms >= 86400000) {\n        const duration = duration_ms / (1000 * 60 * 60 * 24);\n        return Math.floor(duration);\n    } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n        const duration      = duration_ms / (1000 * 60 * 60);\n        const is_end_time   = isEndTime(duration);\n        const has_seconds   = isEndTime(duration_ms / (1000 * 60));\n        const string_format = has_seconds ? 'HH[h] mm[m] ss[s]' : 'HH[h] mm[m]';\n\n        return is_end_time ?\n            formatMiliseconds(duration_ms, string_format)\n            :\n            Math.floor(duration_ms / (1000 * 60 * 60));\n    } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n        const duration = duration_ms / (1000 * 60);\n        const is_end_time = isEndTime(duration);\n        return is_end_time ?\n            formatMiliseconds(duration_ms, 'mm[m] ss[s]')\n            :\n            Math.floor(duration_ms / (1000 * 60));\n    } else if (duration_ms >= 1000 && duration_ms < 60000) {\n        return Math.floor(duration_ms / 1000);\n    }\n    return Math.floor(duration_ms / 1000);\n};\n\nexport const isEndTime = (duration) => (duration % 1) !== 0;\n\nexport const getDurationUnitText = (obj_duration) => {\n    const unit_map = {\n        d: { name_plural: localize('days'),    name_singular: localize('day') },\n        h: { name_plural: localize('hours'),   name_singular: localize('hour') },\n        m: { name_plural: localize('minutes'), name_singular: localize('minute') },\n        s: { name: localize('seconds') },\n    };\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n    // return empty suffix string if duration is End Time set except for days and seconds, refer to L18 and L19\n\n    if (duration_ms) {\n        if (duration_ms >= 86400000) {\n            const days_value = duration_ms / 86400000;\n            return (days_value <= 2) ? unit_map.d.name_singular : unit_map.d.name_plural;\n        } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n            if (isEndTime(duration_ms / (1000 * 60 * 60))) return '';\n            return (duration_ms === 3600000) ? unit_map.h.name_singular : unit_map.h.name_plural;\n        } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n            if (isEndTime(duration_ms / (1000 * 60))) return '';\n            return (duration_ms === 60000) ? unit_map.m.name_singular : unit_map.m.name_plural;\n        } else if (duration_ms >= 1000 && duration_ms < 60000) {\n            return unit_map.s.name;\n        }\n    }\n    return unit_map.s.name;\n};\n\nexport const getDurationPeriod = (contract_info) => (\n    getDiffDuration(\n        epochToMoment(contract_info.purchase_time || contract_info.date_start),\n        epochToMoment(contract_info.date_expiry)\n    )\n);\n\nexport const getDurationTime = (contract_info) => (\n    contract_info.tick_count ?\n        contract_info.tick_count\n        :\n        getDurationUnitValue(getDurationPeriod(contract_info))\n);\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 1024;\n","const getLanguage      = require('../language').get;\nconst localize         = require('../../App/i18n').localize;\nconst getPropertyValue = require('../utility').getPropertyValue;\n\nlet currencies_config = {};\n\nconst getTextFormat = (number, currency) => `${currency} ${addComma(number, getDecimalPlaces(currency), isCryptocurrency(currency))}`;\n\nconst formatMoney = (currency_value, amount, exclude_currency, decimals = 0, minimumFractionDigits = 0) => {\n    let money = amount;\n    if (money) money = String(money).replace(/,/g, '');\n    const sign           = money && Number(money) < 0 ? '-' : '';\n    const decimal_places = decimals || getDecimalPlaces(currency_value);\n\n    money = isNaN(money) ? 0 : Math.abs(money);\n    if (typeof Intl !== 'undefined') {\n        const options = {\n            minimumFractionDigits: minimumFractionDigits || decimal_places,\n            maximumFractionDigits: decimal_places,\n        };\n        money = new Intl.NumberFormat(getLanguage().toLowerCase().replace('_', '-'), options).format(money);\n    } else {\n        money = addComma(money, decimal_places);\n    }\n\n    return sign + (exclude_currency ? '' : formatCurrency(currency_value)) + money;\n};\n\nconst formatCurrency = currency => `<span class=\"symbols ${(currency || '').toLowerCase()}\"></span>`;\n\nconst addComma = (num, decimal_points, is_crypto) => {\n    let number = String(num || 0).replace(/,/g, '');\n    if (typeof decimal_points !== 'undefined') {\n        number = (+number).toFixed(decimal_points);\n    }\n    if (is_crypto) {\n        number = parseFloat(+number);\n    }\n\n    return number.toString().replace(/(^|[^\\w.])(\\d{4,})/g, ($0, $1, $2) => (\n        $1 + $2.replace(/\\d(?=(?:\\d\\d\\d)+(?!\\d))/g, '$&,')\n    ));\n};\n\nconst calcDecimalPlaces = (currency) => isCryptocurrency(currency) ? 8 : 2;\n\nconst getDecimalPlaces = (currency) => (\n    // need to check currencies_config[currency] exists instead of || in case of 0 value\n    currencies_config[currency] ? getPropertyValue(currencies_config, [currency, 'fractional_digits']) : calcDecimalPlaces(currency)\n);\n\nconst setCurrencies = (website_status) => {\n    currencies_config = website_status.currencies_config;\n};\n\n// (currency in crypto_config) is a back-up in case website_status doesn't include the currency config, in some cases where it's disabled\nconst isCryptocurrency = currency => /crypto/i.test(getPropertyValue(currencies_config, [currency, 'type'])) || (currency in CryptoConfig.get());\n\nconst CryptoConfig = (() => {\n    let crypto_config;\n\n    const initCryptoConfig = () => ({\n        BTC: { name: localize('Bitcoin'),       min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        BCH: { name: localize('Bitcoin Cash'),  min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        ETH: { name: localize('Ether'),         min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        ETC: { name: localize('Ether Classic'), min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        LTC: { name: localize('Litecoin'),      min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        UST: { name: localize('Tether'),        min_withdrawal: 0.02,  pa_max_withdrawal: 2000, pa_min_withdrawal: 10 },\n        USB: { name: localize('Binary Coin'),   min_withdrawal: 0.02,  pa_max_withdrawal: 2000, pa_min_withdrawal: 10 },\n    });\n\n    return {\n        get: () => {\n            if (!crypto_config) {\n                crypto_config = initCryptoConfig();\n            }\n            return crypto_config;\n        },\n    };\n})();\n\nconst getMinWithdrawal = currency => (isCryptocurrency(currency) ? (getPropertyValue(CryptoConfig.get(), [currency, 'min_withdrawal']) || 0.002) : 1);\n\n/**\n * Returns the transfer limits for the account.\n * @param currency\n * @param {string} max|undefined\n * @returns numeric|undefined\n */\nconst getTransferLimits = (currency, which) => {\n    const transfer_limits = getPropertyValue(currencies_config, [currency, 'transfer_between_accounts', 'limits']) || getMinWithdrawal(currency);\n    const decimals        = getDecimalPlaces(currency);\n    if (which === 'max') {\n        return transfer_limits.max ? transfer_limits.max.toFixed(decimals) : undefined;\n    }\n\n    return transfer_limits.min ? transfer_limits.min.toFixed(decimals) : undefined;\n};\n\nconst getTransferFee = (currency_from, currency_to) => {\n    const transfer_fee = getPropertyValue(currencies_config, [currency_from, 'transfer_between_accounts', 'fees', currency_to]);\n    return `${typeof transfer_fee === 'undefined' ? '1' : transfer_fee}%`;\n};\n\n// returns in a string format, e.g. '0.00000001'\nconst getMinimumTransferFee = (currency) => {\n    const decimals = getDecimalPlaces(currency);\n    return `${currency} ${(1 / Math.pow(10, decimals)).toFixed(decimals)}`; // we need toFixed() so that it doesn't display in scientific notation, e.g. 1e-8 for currencies with 8 decimal places\n};\n\n// @param {String} limit = max|min\nconst getPaWithdrawalLimit = (currency, limit) => {\n    if (isCryptocurrency(currency)) {\n        return getPropertyValue(CryptoConfig.get(), [currency, `pa_${limit}_withdrawal`]); // pa_min_withdrawal and pa_max_withdrawal used here\n    }\n    return limit === 'max' ? 2000 : 10; // limits for fiat currency\n};\n\nconst getCurrencyName = currency => getPropertyValue(CryptoConfig.get(), [currency, 'name']) || '';\n\nconst getMinPayout = currency => getPropertyValue(currencies_config, [currency, 'stake_default']);\n\nmodule.exports = {\n    formatMoney,\n    formatCurrency,\n    addComma,\n    getDecimalPlaces,\n    setCurrencies,\n    isCryptocurrency,\n    getCurrencyName,\n    getMinWithdrawal,\n    getTransferLimits,\n    getTransferFee,\n    getMinimumTransferFee,\n    getTextFormat,\n    getMinPayout,\n    getPaWithdrawalLimit,\n    getCurrencies: () => currencies_config,\n};\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport { Link }   from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to, onClick }) => (\n    <Link\n        className={classNames('btn btn--link', className, 'effect')}\n        to={to}\n        onClick={onClick}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import classNames                  from 'classnames';\nimport React                       from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Icon                        from 'Assets/icon.jsx';\nimport routes                      from 'Constants/routes';\n\nclass VerticalTabContentContainer extends React.PureComponent {\n    render() {\n        const {\n            action_bar,\n            action_bar_classname,\n            is_routed,\n            items,\n            selected,\n        } = this.props;\n        const selected_item = items.find(item => item.label === selected.label);\n        const TabContent    = selected_item.value;\n\n        return (\n            <div className='vertical-tab__content'>\n                { action_bar &&\n                    <div className={classNames('vertical-tab__action-bar', {\n                        [action_bar_classname]: !!action_bar_classname,\n                    })}\n                    >\n                        {\n                            action_bar.map(({ component, icon, onClick, title }) => {\n                                const Component = component;\n                                return (\n                                    component ?\n                                        <Component key={title} />\n                                        :\n                                        <div\n                                            className='vertical-tab__action-bar-wrapper'\n                                            key={title}\n                                            onClick={onClick}\n                                        >\n                                            <Icon\n                                                className='vertical-tab__action-bar--icon'\n                                                icon={icon}\n                                            />\n                                        </div>\n                                );\n                            })\n                        }\n                    </div>\n                }\n                { is_routed ?\n                    <Switch>\n                        <Redirect exact from={routes.reports} to={routes.positions} />\n                        {\n                            items.map(({ value, path, icon }) => {\n                                const Component = value;\n                                return (\n                                    <Route\n                                        key={path}\n                                        path={path}\n                                        render={() => <Component component_icon={icon} />}\n                                    />\n                                );\n                            })\n                        }\n                    </Switch>\n                    :\n                    <TabContent\n                        key={selected_item.label}\n                        className='item-id'\n                    />\n                }\n            </div>\n        );\n    }\n}\n\nexport { VerticalTabContentContainer };\n","import classNames  from 'classnames';\nimport React       from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Icon        from 'Assets/icon.jsx';\n\nclass VerticalTabHeaders extends React.PureComponent {\n    render() {\n        return (\n            <div className='vertical-tab__tab'>\n                {this.props.header_title &&\n                    <div className='vertical-tab__header-title'>\n                        <p>{ this.props.header_title }</p>\n                    </div>\n                }\n\n                {this.props.items.map(item => {\n                    // Capitalize only the first letter of the label and make the rest lowercase\n                    const label = item.label.charAt(0).toUpperCase() + item.label.slice(1).toLowerCase();\n\n                    return (\n                        this.props.is_routed ?\n                            <NavLink\n                                key={item.path}\n                                to={item.path}\n                                onClick={() => this.props.onChange(item)}\n                                className='vertical-tab__header'\n                                activeClassName={\n                                    classNames({\n                                        'vertical-tab__header--active': this.props.selected.label === item.label,\n                                    })\n                                }\n                            >\n                                <Icon\n                                    icon={item.icon}\n                                    className={classNames('vertical-tab__header__icon', {\n                                        'vertical-tab__header__icon--active': this.props.selected.label === item.label,\n                                    })}\n                                />\n                                <span className='vertical-tab__header__link'>{label}</span>\n                            </NavLink>\n                            :\n                            <div\n                                className={\n                                    classNames('vertical-tab__header', {\n                                        'vertical-tab__header--active': this.props.selected.label === item.label,\n                                    })\n                                }\n                                key={item.label}\n                                onClick={() => this.props.onChange(item)}\n                            >\n                                <Icon\n                                    icon={item.icon}\n                                    className={classNames('vertical-tab__header__icon', {\n                                        'vertical-tab__header__icon--active': this.props.selected.label === item.label,\n                                    })}\n                                />\n                                <a\n                                    key={item.label}\n                                    className='vertical-tab__header__link'\n                                >\n                                    {label}\n                                </a>\n                            </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport { VerticalTabHeaders };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Icon       from 'Assets/icon.jsx';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children, wrapperClassName } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('deriv_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('deriv_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <Icon icon='IconClose' className='fullscreen-dialog__close-btn-icon' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className={`fullscreen-dialog__${wrapperClassName || 'contracts-modal-list'}`}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children        : PropTypes.any,\n    onClose         : PropTypes.func,\n    title           : PropTypes.string,\n    visible         : PropTypes.bool,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default FullScreenDialog;\n","import { action, flow }     from 'mobx';\nimport GTM                  from '_common/base/gtm';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { localize }         from 'App/i18n';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws-methods';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    // is_populating_account_list is a check to avoid logout on the first logged-in session\n                    // In any other case, if the response loginid does not match the store's loginid, user must be logged out\n                    if (response.authorize.loginid !== client_store.loginid &&\n                        !client_store.is_populating_account_list) {\n                        requestLogout();\n                    } else if (response.authorize.loginid === client_store.loginid) {\n                        // All other cases continue with the loginid and authorize the profile\n                        authorizeAccount(response);\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                GTM.pushTransactionData(response, { bom_ui: 'new' });\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: localize('You have reached the rate limit of requests per second. Please try later.') });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    const authorizeAccount = (response) => {\n        client_store.responseAuthorize(response);\n        WS.subscribeBalance(ResponseHandlers.balance, true);\n        WS.sendRequest({ get_settings: 1 }, { forced: true });\n        WS.getAccountStatus();\n        WS.payoutCurrencies();\n        WS.mt5LoginList();\n        setResidence(\n            response.authorize.country ||\n            client_store.accounts[client_store.loginid].residence\n        );\n        if (!client_store.is_virtual) {\n            WS.getSelfExclusion();\n        }\n        BinarySocket.sendBuffered();\n        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n            // showPopup({\n            //     url        : urlFor('user/warning'),\n            //     popup_id   : 'warning_popup',\n            //     form_id    : '#frm_warning',\n            //     content_id : '#warning_content',\n            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n            // });\n        }\n    };\n\n    return {\n        init,\n        setBalance,\n        authorizeAccount,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            client_store.setWebsiteStatus(response);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import PropTypes      from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect }    from 'Stores/connect';\nimport routes         from '../../../Constants/routes';\n\nconst Redirect = ({\n    history,\n    setCashierActiveTab,\n    setVerificationCode,\n    toggleAccountSignupModal,\n    toggleCashierModal,\n}) => {\n    const url_params = new URLSearchParams(window.location.search);\n\n    setVerificationCode(url_params.get('code'));\n\n    switch (url_params.get('action')) {\n        case 'signup': {\n            toggleAccountSignupModal(true);\n            break;\n        }\n        case 'payment_withdraw': {\n            setCashierActiveTab('withdraw');\n            toggleCashierModal(true);\n            break;\n        }\n        default: break;\n    }\n\n    // Clear URL search params and route to root (currently set to `trade`)\n    window.history.replaceState({}, document.title, '/');\n    history.push(routes.root);\n\n    return null;\n};\n\nRedirect.propTypes = {\n    history                 : PropTypes.object,\n    setVerificationCode     : PropTypes.func,\n    toggleAccountSignupModal: PropTypes.func,\n    toggleCashierModal      : PropTypes.func,\n};\n\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        setCashierActiveTab     : ui.setCashierActiveTab,\n        setVerificationCode     : client.setVerificationCode,\n        toggleAccountSignupModal: ui.toggleAccountSignupModal,\n        toggleCashierModal      : ui.toggleCashierModal,\n    }),\n)(Redirect));\n","import React        from 'react';\nimport { localize } from 'App/i18n';\nimport Icon         from 'Assets/icon.jsx';\n\nconst EmptyPortfolioMessage = ({ error }) => (\n    <div className='portfolio-empty'>\n        <div className='portfolio-empty__wrapper'>\n            { error ?\n                <span className='portfolio-empty__text'>{error}</span>\n                :\n                <React.Fragment>\n                    <Icon icon='IconPositions' className='portfolio-empty__icon' />\n                    <span className='portfolio-empty__text'>{localize('No open positions')}</span>\n                </React.Fragment>\n            }\n        </div>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nconst ContractLink = ({\n    contract_id,\n    children,\n    className,\n    openContract,\n}) => (\n    <a\n        className={className}\n        href='javascript:;'\n        onClick={() => openContract(contract_id, true)}\n    >\n        {children}\n    </a>\n);\n\nContractLink.propTypes = {\n    children   : PropTypes.node,\n    className  : PropTypes.string,\n    contract_id: PropTypes.number,\n    onMount    : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        openContract: modules.contract_trade.onMount,\n    }),\n)(ContractLink);\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" {...props}><g fill=\"none\" fillRule=\"evenodd\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4BBFAB\" /><path fill=\"#FFF\" fillRule=\"nonzero\" d=\"M6.5 10.8l5.65-5.65a.5.5 0 0 1 .7.7l-6 6a.5.5 0 0 1-.7 0l-3-3a.5.5 0 1 1 .7-.7l2.65 2.64z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" {...props}><g fill=\"none\" fillRule=\"evenodd\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#E31C4B\" fillRule=\"nonzero\" /><path stroke=\"#FFF\" strokeLinecap=\"round\" d=\"M10.5 5.5l-5 5m5 0l-5-5\" /></g></svg>);","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { NavLink }         from 'react-router-dom';\nimport { getContractPath } from 'App/Components/Routes/helpers';\nimport IconCheck           from 'Assets/SvgComponents/portfolio/ic-check.svg';\nimport IconCross           from 'Assets/SvgComponents/portfolio/ic-cross.svg';\nimport { localize }        from 'App/i18n';\n\nclass ResultOverlay extends React.PureComponent {\n\n    handleClick = (e) => {\n        if (this.props.is_unsupported) {\n            e.preventDefault();\n            this.props.onClick();\n        }\n    }\n\n    render() {\n        const {\n            contract_id,\n            is_visible,\n            onClickRemove,\n            result } = this.props;\n        const is_contract_won = (result === 'won');\n        return (\n            <React.Fragment>\n                <CSSTransition\n                    in={is_visible}\n                    timeout={250}\n                    classNames={{\n                        enter    : 'positions-drawer-card__result--enter',\n                        enterDone: 'positions-drawer-card__result--enter-done',\n                        exit     : 'positions-drawer-card__result--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div className={classNames('positions-drawer-card__result', {\n                        'positions-drawer-card__result--won' : is_contract_won,\n                        'positions-drawer-card__result--lost': !is_contract_won,\n                    })}\n                    >\n                        <span\n                            className='result__close-btn'\n                            onClick={() => onClickRemove(contract_id)}\n                        />\n                        <NavLink\n                            className='result__caption-wrapper'\n                            to={getContractPath(contract_id)}\n                            onClick={this.handleClick}\n                        >\n                            <span\n                                className={classNames('result__caption', {\n                                    'result__caption--won' : is_contract_won,\n                                    'result__caption--lost': !is_contract_won,\n                                }\n                                )}\n                            >\n                                {\n                                    (is_contract_won) ?\n                                        <React.Fragment>\n                                            {localize('won')}\n                                            <IconCheck className='result__icon' />\n                                        </React.Fragment>\n                                        :\n                                        <React.Fragment>\n                                            {localize('lost')}\n                                            <IconCross className='result__icon' />\n                                        </React.Fragment>\n                                }\n                            </span>\n                        </NavLink>\n                    </div>\n                </CSSTransition>\n            </React.Fragment>\n        );\n    }\n}\n\nResultOverlay.propTypes = {\n    contract_id              : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    has_same_contract_mounted: PropTypes.bool,\n    is_unsupported           : PropTypes.bool,\n    is_visible               : PropTypes.bool,\n    onClick                  : PropTypes.func,\n    onClickRemove            : PropTypes.func,\n    result                   : PropTypes.string,\n};\n\nexport default ResultOverlay;\n","import classNames              from 'classnames';\nimport PropTypes               from 'prop-types';\nimport React                   from 'react';\nimport { CSSTransition }       from 'react-transition-group';\nimport ContractLink            from 'Modules/Contract/Containers/contract-link.jsx';\nimport Shortcode               from 'Modules/Reports/Helpers/shortcode';\nimport { isCryptocurrency }    from '_common/base/currency_base';\nimport { localize }            from 'App/i18n';\nimport Icon                    from 'Assets/icon.jsx';\nimport Button                  from 'App/Components/Form/button.jsx';\nimport Money                   from 'App/Components/Elements/money.jsx';\nimport { UnderlyingIcon }      from 'App/Components/Elements/underlying-icon.jsx';\nimport { PositionsCardLoader } from 'App/Components/Elements/ContentLoader';\nimport ContractTypeCell        from './contract-type-cell.jsx';\nimport ProgressSlider          from './ProgressSlider';\nimport ResultOverlay           from './result-overlay.jsx';\n\nconst PositionsDrawerCard = ({\n    active_position,\n    className,\n    contract_info,\n    currency,\n    current_tick,\n    indicative,\n    id,\n    is_dark_theme,\n    is_loading,\n    is_sell_requested,\n    is_unsupported,\n    is_valid_to_sell,\n    profit_loss,\n    onClickSell,\n    onClickRemove,\n    result,\n    sell_price,\n    status,\n    toggleUnsupportedContractModal,\n    type,\n}) => {\n    const loader_el = (\n        <div className='positions-drawer-card__content-loader'>\n            <PositionsCardLoader\n                is_dark_theme={is_dark_theme}\n                speed={2}\n            />\n        </div>\n    );\n    const fallback_result = (profit_loss < 0) ? 'lost' : 'won';\n    const contract_el = (\n        <React.Fragment>\n            <div className={classNames(\n                'positions-drawer-card__grid',\n                'positions-drawer-card__grid-underlying-trade'\n            )}\n            >\n                <div className='positions-drawer-card__underlying-name'>\n                    <UnderlyingIcon market={contract_info.underlying} />\n                    <span className='positions-drawer-card__symbol'>\n                        {contract_info.display_name}\n                    </span>\n                </div>\n                <div className='positions-drawer-card__type'>\n                    <ContractTypeCell\n                        type={type}\n                        is_high_low={Shortcode.isHighLow({ shortcode: contract_info.shortcode })}\n                    />\n                </div>\n            </div>\n            {(result || !!(contract_info.is_sold)) ?\n                <div className='progress-slider--completed' />\n                :\n                <ProgressSlider\n                    is_loading={is_loading}\n                    start_time={contract_info.date_start}\n                    expiry_time={contract_info.date_expiry}\n                    current_tick={current_tick}\n                    ticks_count={contract_info.tick_count}\n                />\n            }\n            <div className={classNames(\n                'positions-drawer-card__grid',\n                'positions-drawer-card__grid-profit-payout'\n            )}\n            >\n                <div className={classNames(\n                    'positions-drawer-card__profit-loss',\n                    'positions-drawer-card__profit-loss-label',\n                )}\n                >\n                    {result ? localize('Profit/Loss:') : localize('Potential profit/loss:')}\n                </div>\n                <div className={classNames(\n                    'positions-drawer-card__indicative',\n                    'positions-drawer-card__indicative-label',\n                )}\n                >\n                    {!result ? localize('Indicative price:') : localize('Payout:')}\n                </div>\n                <div className={classNames(\n                    'positions-drawer-card__profit-loss', {\n                        'positions-drawer-card__profit-loss--is-crypto': isCryptocurrency(currency),\n                        'positions-drawer-card__profit-loss--negative' : (profit_loss < 0),\n                        'positions-drawer-card__profit-loss--positive' : (profit_loss > 0),\n                    })}\n                >\n                    <Money amount={Math.abs(profit_loss)} currency={currency} />\n                    <div className={classNames(\n                        'positions-drawer-card__indicative--movement', {\n                            'positions-drawer-card__indicative--movement-complete': !!result,\n                        },\n                    )}\n                    >\n                        <Icon\n                            icon='IconPriceMove'\n                            type={(status !== 'complete') ? status : null}\n                        />\n                    </div>\n                </div>\n                <div className='positions-drawer-card__indicative'>\n                    <Money amount={sell_price || indicative} currency={currency} />\n                    <div className={classNames(\n                        'positions-drawer-card__indicative--movement', {\n                            'positions-drawer-card__indicative--movement-complete': !!result,\n                        },\n                    )}\n                    >\n                        <Icon\n                            icon='IconPriceMove'\n                            type={(status !== 'complete') ? status : null}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className={classNames(\n                'positions-drawer-card__grid',\n                'positions-drawer-card__grid-price-payout',\n            )}\n            >\n                <div className='positions-drawer-card__purchase-price'>\n                    <span className='positions-drawer-card__purchase-label'>\n                        {localize('Purchase price:')}\n                    </span>\n                    <span className='positions-drawer-card__purchase-value'>\n                        <Money amount={contract_info.buy_price} currency={currency} />\n                    </span>\n                </div>\n                <div className='positions-drawer-card__payout-price'>\n                    <span className='positions-drawer-card__payout-label'>\n                        {localize('Potential payout:')}\n                    </span>\n                    <span className='positions-drawer-card__payout-value'>\n                        {contract_info.payout ?\n                            <Money amount={contract_info.payout} currency={currency} />\n                            :\n                            <strong>-</strong>\n                        }\n                    </span>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n\n    return (\n        <div className={classNames(\n            'positions-drawer-card__wrapper', {\n                'positions-drawer-card__wrapper--active': (parseInt(active_position) === id),\n            },\n            className)}\n        >\n            <ResultOverlay\n                contract_id={id}\n                is_unsupported={is_unsupported}\n                is_visible={!!(contract_info.is_sold)}\n                has_same_contract_mounted={id === parseInt(active_position)}\n                onClickRemove={onClickRemove}\n                onClick={() => toggleUnsupportedContractModal(true)}\n                result={(result || fallback_result)}\n            />\n            {is_unsupported ?\n                <div\n                    className={classNames(\n                        'positions-drawer-card', {\n                            'positions-drawer-card--active': (parseInt(active_position) === id),\n                            'positions-drawer-card--green' : (profit_loss > 0) && !result,\n                            'positions-drawer-card--red'   : (profit_loss < 0) && !result,\n                        }\n                    )}\n                    onClick={() => toggleUnsupportedContractModal(true)}\n                >\n                    {contract_info.underlying ? contract_el : loader_el}\n                </div>\n                :\n                <ContractLink\n                    className={classNames(\n                        'positions-drawer-card', {\n                            'positions-drawer-card--active': (parseInt(active_position) === id),\n                            'positions-drawer-card--green' : (profit_loss > 0) && !result,\n                            'positions-drawer-card--red'   : (profit_loss < 0) && !result,\n                        }\n                    )}\n                    contract_id={id}\n                >\n                    {contract_info.underlying ? contract_el : loader_el}\n                </ContractLink>\n            }\n            <CSSTransition\n                in={!!(is_valid_to_sell)}\n                timeout={250}\n                classNames={{\n                    enter    : 'positions-drawer-card__sell-button--enter',\n                    enterDone: 'positions-drawer-card__sell-button--enter-done',\n                    exit     : 'positions-drawer-card__sell-button--exit',\n                }}\n                unmountOnExit\n            >\n                <div className='positions-drawer-card__sell-button'>\n                    <Button\n                        className={classNames(\n                            'btn--primary',\n                            'btn--primary--green',\n                            'btn--sell', {\n                                'btn--loading': is_sell_requested,\n                            })}\n                        is_disabled={!is_valid_to_sell || is_sell_requested}\n                        text={localize('Sell contract')}\n                        onClick={() => onClickSell(id)}\n                    />\n                </div>\n            </CSSTransition>\n        </div>\n    );\n};\n\nPositionsDrawerCard.propTypes = {\n    active_position: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className                     : PropTypes.string,\n    contract_info                 : PropTypes.object,\n    currency                      : PropTypes.string,\n    current_tick                  : PropTypes.number,\n    duration                      : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    duration_unit                 : PropTypes.string,\n    exit_spot                     : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    id                            : PropTypes.number,\n    indicative                    : PropTypes.number,\n    is_dark_theme                 : PropTypes.bool,\n    is_loading                    : PropTypes.bool,\n    is_sell_requested             : PropTypes.bool,\n    is_unsupported                : PropTypes.bool,\n    is_valid_to_sell              : PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClickRemove                 : PropTypes.func,\n    onClickSell                   : PropTypes.func,\n    profit_loss                   : PropTypes.number,\n    result                        : PropTypes.string,\n    sell_time                     : PropTypes.number,\n    status                        : PropTypes.string,\n    toggleUnsupportedContractModal: PropTypes.func,\n    type                          : PropTypes.string,\n};\n\nexport default PositionsDrawerCard;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { NavLink }                    from 'react-router-dom';\nimport { TransitionGroup,\n    CSSTransition }                   from 'react-transition-group';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport { localize }                   from 'App/i18n';\nimport Icon                           from 'Assets/icon.jsx';\nimport routes                         from 'Constants/routes';\nimport EmptyPortfolioMessage          from 'Modules/Reports/Components/empty-portfolio-message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PositionsDrawerCard            from './positions-drawer-card.jsx';\n\nclass PositionsDrawer extends React.Component {\n    componentDidMount()    {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const {\n            all_positions,\n            active_contract_id,\n            error,\n            currency,\n            is_contract_mode,\n            is_dark_theme,\n            is_empty,\n            is_positions_drawer_on,\n            onClickSell,\n            onClickRemove,\n            openContract,\n            toggleDrawer,\n            toggleUnsupportedContractModal,\n        } = this.props;\n\n        // Show only 5 most recent open contracts\n        const body_content = (\n            <React.Fragment>\n                <TransitionGroup component='div'>\n                    {all_positions.slice(0, 5).map((portfolio_position) => (\n                        <CSSTransition\n                            appear\n                            key={portfolio_position.id}\n                            in={true}\n                            timeout={150}\n                            classNames={{\n                                appear   : 'positions-drawer-card__wrapper--enter',\n                                enter    : 'positions-drawer-card__wrapper--enter',\n                                enterDone: 'positions-drawer-card__wrapper--enter-done',\n                                exit     : 'positions-drawer-card__wrapper--exit',\n                            }}\n                            unmountOnExit\n                        >\n                            <PositionsDrawerCard\n                                active_position={active_contract_id}\n                                is_dark_theme={is_dark_theme}\n                                onClickSell={onClickSell}\n                                onClickRemove={onClickRemove}\n                                openContract={openContract}\n                                key={portfolio_position.id}\n                                currency={currency}\n                                toggleUnsupportedContractModal={toggleUnsupportedContractModal}\n                                {...portfolio_position}\n                            />\n                        </CSSTransition>\n                    ))}\n                </TransitionGroup>\n            </React.Fragment>\n        );\n\n        return (\n            <div className={classNames(\n                'positions-drawer', {\n                    'positions-drawer--open'         : is_positions_drawer_on,\n                    'positions-drawer--contract-mode': is_contract_mode,\n                })}\n            >\n                <div className='positions-drawer__header'>\n                    <span className='positions-drawer__title'>{localize('Recent Positions')}</span>\n                    <div\n                        className='positions-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <Icon icon='IconMinimize' />\n                    </div>\n                </div>\n                <div className='positions-drawer__body'>\n                    <Scrollbars\n                        style={{ width: '100%', height: '100%' }}\n                        autoHide\n                    >\n                        {(is_empty || error) ? <EmptyPortfolioMessage error={error} />  : body_content}\n                    </Scrollbars>\n                </div>\n                <div className='positions-drawer__footer'>\n                    <NavLink className='btn btn--link btn--alternate' to={routes.reports}>\n                        <span className='btn__text'>\n                            {localize('Go to Reports')}\n                        </span>\n                    </NavLink>\n                </div>\n            </div>\n        );\n    }\n}\n\nPositionsDrawer.propTypes = {\n    active_contract_id    : PropTypes.number,\n    all_positions         : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_contract_mode      : PropTypes.bool,\n    is_dark_theme         : PropTypes.bool,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    onClickRemove         : PropTypes.func,\n    onClickSell           : PropTypes.func,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    openContract          : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        currency                      : client.currency,\n        active_contract_id            : modules.contract_trade.contract_id,\n        all_positions                 : modules.portfolio.all_positions,\n        error                         : modules.portfolio.error,\n        is_contract_mode              : modules.smart_chart.is_contract_mode,\n        is_empty                      : modules.portfolio.is_empty,\n        is_loading                    : modules.portfolio.is_loading,\n        onClickSell                   : modules.portfolio.onClickSell,\n        onClickRemove                 : modules.portfolio.removePositionById,\n        openContract                  : modules.contract_trade.onMount,\n        onMount                       : modules.portfolio.onMount,\n        onUnmount                     : modules.portfolio.onUnmount,\n        is_dark_theme                 : ui.is_dark_mode_on,\n        is_positions_drawer_on        : ui.is_positions_drawer_on,\n        toggleDrawer                  : ui.togglePositionsDrawer,\n        toggleUnsupportedContractModal: ui.toggleUnsupportedContractModal,\n    })\n)(PositionsDrawer);\n","import React        from 'react';\nimport { localize } from 'App/i18n';\nimport Localize     from './localize.jsx';\nimport Button       from '../Form/button.jsx';\n\nconst toggleFade = ({ node, opacity, direction, color }) => {\n    const sub_or_add = direction === -1 && opacity > 0.1 ? -1 : 1;\n    let reduction = 0.05;\n    if (opacity < 0.3 && opacity > 0.1) {\n        reduction = 0.01;\n    }\n    const new_opacity = parseFloat(Number(opacity + (sub_or_add * reduction)).toFixed(2));\n\n    node.style.backgroundColor = color.replace(`${opacity})`, `${Number(new_opacity).toFixed(2)})`);\n\n    const stopId = requestAnimationFrame(toggleFade.bind(this,\n        {\n            node,\n            opacity  : new_opacity,\n            direction: sub_or_add,\n            color    : node.style.backgroundColor,\n        },\n    ));\n    if (new_opacity >= 1) {\n        cancelAnimationFrame(stopId);\n        // Set the initial value to follow CSS\n        node.querySelectorAll('div')\n            .forEach(element => {\n                element.style.backgroundColor = '';\n            });\n        node.style.backgroundColor = '';\n    }\n};\n\nconst startAnimation = (node) => {\n    const children_background_color = getComputedStyle(node.firstElementChild).getPropertyValue('background-color');\n    const converted_rgba = children_background_color.startsWith('rgba') ?\n        children_background_color :\n        `rgba(${children_background_color\n            .replace('rgb(', '')\n            .replace(')', '')\n            .split(', ')\n            .join(',')},1)`;\n\n    // Set initial value for individual rows\n    node.querySelectorAll('div')\n        .forEach(element => {\n            element.style.backgroundColor = 'transparent';\n        });\n    node.style.backgroundColor = converted_rgba; // compensate for removal background of individual rows\n\n    const direction            = -1; // lower the opacity\n    requestAnimationFrame(toggleFade.bind(this,\n        {\n            node,\n            opacity: 1,\n            direction,\n            color  : converted_rgba,\n        },\n    ));\n};\n\n/**\n * Handle animation for dropdown, this is imperative, with DOM manipulation.\n */\nconst onClick = () => {\n    const dropdown = document.querySelector('.cq-menu-dropdown');\n    if (dropdown.classList.contains('open')) return;\n    document.querySelector('.cq-symbol-select-btn').click();\n    const left_panel = document.querySelector('.cq-filter-panel');\n    left_panel.querySelector('.ic-volidx').parentNode.click();\n\n    const node = document\n        .querySelector('.category-volidx')\n        .querySelector('.category-content');\n    setTimeout(startAnimation.bind(this, node), 600);\n};\n\nconst MarketIsClosedOverlay = () => (\n    <div className='market-is-closed-overlay'>\n        <p><Localize i18n_default_text='Market is closed.' /></p>\n        <p><Localize i18n_default_text='Try Volatility Indices which simulate real-world market volatility and are open 24/7.' /></p>\n        <Button\n            className='market-is-closed-overlay__button'\n            classNameSpan='market-is-closed-overlay__button--span'\n            onClick={onClick}\n            text={localize('Try Volatility Indices')}\n        />\n    </div>\n);\n\nexport default MarketIsClosedOverlay;\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui-loader.jsx';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport ContractType from '../../Containers/contract-type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade-params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled, is_blurred }) => (\n    <div className={classNames('sidebar__items', {\n        'sidebar__items--blur': is_contract_visible || is_blurred,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <Fieldset className='trade-container__fieldset trade-types'>\n                    <ContractType />\n                </Fieldset>\n                <TradeParams />\n                <div className='purchase-container'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_blurred         : PropTypes.bool,\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport Lazy        from 'App/Containers/Lazy';\nimport ScreenLarge from './screen-large.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_blurred,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <Lazy\n            ctor={() => import(/* webpackChunkName: \"screen-small\" */'./screen-small.jsx')}\n            should_load={is_mobile}\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n            is_blurred={is_blurred}\n        />\n);\n\nFormLayout.propTypes = {\n    is_blurred         : PropTypes.bool,\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport ChartLoader           from 'App/Components/Elements/chart-loader.jsx';\nimport UILoader              from 'App/Components/Elements/ui-loader.jsx';\nimport { connect }           from 'Stores/connect';\nimport PositionsDrawer       from 'App/Components/Elements/PositionsDrawer';\nimport MarketIsClosedOverlay from 'App/Components/Elements/market-is-closed-overlay.jsx';\nimport Lazy                  from 'App/Containers/Lazy';\nimport Test                  from './test.jsx';\nimport FormLayout            from '../Components/Form/form-layout.jsx';\nimport { isDigitTradeType }  from '../Helpers/digits';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.showPositions();\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.hidePositions();\n        if (this.props.is_contract_mode) {\n            this.props.onCloseContract();\n        }\n        this.props.onUnmount();\n    }\n\n    render() {\n        const form_wrapper_class           = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar__container desktop-only';\n        const should_show_bottom_widgets   = this.props.is_digit_contract && this.props.is_contract_mode;\n        const should_show_last_digit_stats = isDigitTradeType(this.props.contract_type) && !this.props.is_contract_mode;\n        const is_chart_visible             = (this.props.is_chart_loading || !this.props.is_chart_ready);\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <PositionsDrawer />\n                <div className='chart-container'>\n                    <Lazy\n                        ctor={() => import(/* webpackChunkName: \"notification-messages\" */'App/Containers/notification-messages.jsx')}\n                        has_progress={false}\n                        should_load={true}\n                    />\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <ChartLoader is_visible={is_chart_visible} />\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                chart_type={this.props.chart_type}\n                                Digits={\n                                    <Lazy\n                                        ctor={() => import(/* webpackChunkName: \"digits\", webpackPrefetch: true */'Modules/Contract/Components/Digits')}\n                                        should_load={this.props.is_digit_contract}\n                                        is_trade_page\n                                        contract_info={this.props.contract_info}\n                                        digits_info={this.props.digits_info}\n                                        display_status={this.props.display_status}\n                                        is_digit_contract={this.props.is_digit_contract}\n                                        is_ended={this.props.is_ended}\n                                    />\n                                }\n                                InfoBox={\n                                    <Lazy\n                                        ctor={() => import(/* webpackChunkName: \"info-box\", webpackPrefetch: true */'Modules/Contract/Components/InfoBox')}\n                                        should_load={true}\n                                        has_progress={false}\n                                        is_trade_page\n                                        contract_info={this.props.contract_info}\n                                        error_message={this.props.error_message}\n                                        is_contract_mode={this.props.is_contract_mode}\n                                        removeError={this.props.removeError}\n                                        onClose={this.props.onCloseContract}\n                                    />\n                                }\n                                end_epoch={this.props.end_epoch}\n                                granularity={this.props.granularity}\n                                is_trade_page\n                                is_static_chart={this.props.is_static_chart}\n                                onSymbolChange={this.props.onSymbolChange}\n                                scroll_to_epoch={this.props.scroll_to_epoch}\n                                start_epoch={this.props.start_epoch}\n                                should_show_bottom_widgets={should_show_bottom_widgets}\n                                should_show_last_digit_stats={should_show_last_digit_stats}\n                                symbol={this.props.symbol}\n                            />\n                        </React.Suspense>\n                    }\n                    {/* Remove Test component for debugging below for production release */}\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                    onClick={this.props.is_contract_mode ? () => {\n                        this.props.onCloseContract();\n                    } : null}\n                    style={{ cursor: this.props.is_contract_mode ? 'pointer' : 'initial' }}\n                >\n                    { this.props.is_market_closed && <MarketIsClosedOverlay />}\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={this.props.is_contract_mode}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                        is_blurred={this.props.is_market_closed}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id         : PropTypes.string,\n    chart_type       : PropTypes.string,\n    contract_info    : PropTypes.object,\n    contract_type    : PropTypes.string,\n    digits_info      : PropTypes.object,\n    display_status   : PropTypes.string,\n    end_epoch        : PropTypes.number,\n    granularity      : PropTypes.number,\n    hidePositions    : PropTypes.func,\n    is_chart_loading : PropTypes.bool,\n    is_chart_ready   : PropTypes.bool,\n    is_contract_mode : PropTypes.bool,\n    is_digit_contract: PropTypes.bool,\n    is_ended         : PropTypes.bool,\n    is_market_closed : PropTypes.bool,\n    is_mobile        : PropTypes.bool,\n    is_static_chart  : PropTypes.bool,\n    is_trade_enabled : PropTypes.bool,\n    onClickNewTrade  : PropTypes.func,\n    onCloseContract  : PropTypes.func,\n    onMount          : PropTypes.func,\n    onSymbolChange   : PropTypes.func,\n    onUnmount        : PropTypes.func,\n    purchase_info    : PropTypes.object,\n    scroll_to_epoch  : PropTypes.number,\n    showPositions    : PropTypes.func,\n    start_epoch      : PropTypes.number,\n    symbol           : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_info                      : modules.contract_trade.contract_info,\n        digits_info                        : modules.contract_trade.digits_info,\n        display_status                     : modules.contract_trade.display_status,\n        error_message                      : modules.contract_trade.error_message,\n        is_ended                           : modules.contract_trade.is_ended,\n        is_digit_contract                  : modules.contract_trade.is_digit_contract,\n        onCloseContract                    : modules.contract_trade.onCloseContract,\n        removeError                        : modules.contract_trade.removeErrorMessage,\n        chart_id                           : modules.smart_chart.chart_id,\n        chart_type                         : modules.smart_chart.chart_type,\n        scroll_to_epoch                    : modules.smart_chart.scroll_to_left_epoch,\n        granularity                        : modules.smart_chart.granularity,\n        end_epoch                          : modules.smart_chart.end_epoch,\n        start_epoch                        : modules.smart_chart.start_epoch,\n        is_chart_loading                   : modules.smart_chart.is_chart_loading,\n        is_chart_ready                     : modules.smart_chart.is_chart_ready,\n        is_contract_mode                   : modules.smart_chart.is_contract_mode,\n        is_static_chart                    : modules.smart_chart.is_static_chart,\n        contract_type                      : modules.trade.contract_type,\n        is_market_closed                   : modules.trade.is_market_closed,\n        is_trade_enabled                   : modules.trade.is_trade_enabled,\n        onClickNewTrade                    : modules.trade.onClickNewTrade,\n        onMount                            : modules.trade.onMount,\n        onSymbolChange                     : modules.trade.onChange,\n        onUnmount                          : modules.trade.onUnmount,\n        purchase_info                      : modules.trade.purchase_info,\n        symbol                             : modules.trade.symbol,\n        hidePositions                      : ui.hidePositionsFooterToggle,\n        showPositions                      : ui.showPositionsFooterToggle,\n        has_only_forward_starting_contracts: ui.has_only_forward_starting_contracts,\n        is_mobile                          : ui.is_mobile,\n        setHasOnlyForwardingContracts      : ui.setHasOnlyForwardingContracts,\n    })\n)(Trade);\n","import { lazy }                       from 'react';\nimport { Redirect as RouterRedirect } from 'react-router-dom';\nimport { Redirect }                   from 'App/Containers/Redirect';\nimport { localize }                   from 'App/i18n';\nimport { routes }                     from 'Constants';\n\nimport Trade from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\n\n// Reports Routes\nconst Reports       = lazy(() => import(/* webpackChunkName: \"reports\" */        'Modules/Reports'));\nconst OpenPositions = lazy(() => import(/* webpackChunkName: \"open_positions\" */ 'Modules/Reports/Containers/open-positions.jsx'));\nconst ProfitTable   = lazy(() => import(/* webpackChunkName: \"profit_table\" */   'Modules/Reports/Containers/profit-table.jsx'));\nconst Statement     = lazy(() => import(/* webpackChunkName: \"statement\" */      'Modules/Reports/Containers/statement.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: RouterRedirect,  title: '',                            to: routes.trade },\n    {\n        path            : routes.reports,\n        component       : Reports,\n        is_authenticated: true,\n        title           : localize('Reports'),\n        routes          : [\n            { path: routes.positions, component: OpenPositions, title: localize('Open Positions'), icon_component: 'IconOpenPositions', default: true },\n            { path: routes.profit,    component: ProfitTable,   title: localize('Profit Table'),   icon_component: 'IconProfitTable' },\n            { path: routes.statement, component: Statement,     title: localize('Statement'),      icon_component: 'IconStatement' },\n        ],\n    },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),    exact: true },\n    { path: routes.error404,  component: Page404,         title: localize('Error 404') },\n    { path: routes.redirect,  component: Redirect,        title: localize('Redirect') },\n]);\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n    }\n    routesConfig.push(route_default);\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ active_class, to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName={active_class || 'active'} exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    active_class: PropTypes.string,\n    children    : PropTypes.object,\n    to          : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { urlFor }   from '_common/url';\nimport PageError    from 'Modules/PageError';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    onLogin,\n    onSignup,\n    page_title,\n}) => (\n    <PageError\n        header={\n            <Localize\n                i18n_default_text='{{page_title}} page is only<0 />available for existing clients.'\n                values={{ page_title: page_title || 'This' }}\n                components={[ <br key={0} /> ]}\n            />\n        }\n        messages={[\n            <Localize\n                key={0}\n                i18n_default_text='If you have an active account, please <0>Log in</0> for full access. Otherwise, please <1>Sign up</1> to start trading.'\n                components={[\n                    <a key={0} className='link' href='javascript:;' onClick={onLogin} />,\n                    <a key={1} className='link' href='javascript:;' onClick={onSignup} />,\n                ]}\n            />,\n        ]}\n    />\n);\n\nLoginPrompt.propTypes = {\n    onLogin   : PropTypes.func,\n    onSignup  : PropTypes.func,\n    page_title: PropTypes.string,\n};\n\n// TODO - Remove this default setting once sign-up has been integrated to app 2\nLoginPrompt.defaultProps = {\n    onSignup: () => { window.open(urlFor('new-account', undefined, undefined, true)); },\n};\n\nexport default LoginPrompt;\n\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport BinarySocket        from '_common/base/socket_base';\nimport Language            from '_common/language';\nimport routes              from 'Constants/routes';\nimport { connect }         from 'Stores/connect';\nimport LoginPrompt         from '../Elements/login-prompt.jsx';\nimport { default_title }   from '../../Constants/app-config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt onLogin={redirectToLogin} page_title={route.title} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        Language.setCookie();\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        BinarySocket.wait('website_status').then(() => {\n            route.pushDataLayer({ event: 'page_load' });\n        });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport { RouteWithSubRoutes as RouteWithSubRoutesRender }; // For tests\n\nexport default connect(({ gtm }) => ({\n    pushDataLayer: gtm.pushDataLayer,\n}))(RouteWithSubRoutes);\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes-config';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<div />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ButtonLink   from 'App/Components/Routes/button-link.jsx';\nimport Localize     from 'App/Components/Elements/localize.jsx';\n\nconst PageError = ({\n    buttonOnClick,\n    error_code,\n    messages,\n    header,\n    redirect_label,\n    redirect_url,\n}) => (\n    <div className='page-error__container'>\n        <div className='page-error__box'>\n            <h3 className='page-error__header'>\n                {header}\n            </h3>\n            <div className='page-error__message-wrapper'>\n                <span className='page-error__message'>\n                    { messages.map((message, index) => (\n                        message.has_html ?\n                            <p key={index} dangerouslySetInnerHTML={{ __html: message.message }} />\n                            :\n                            <p key={index}>{ message }</p>\n                    ))}\n                    { error_code &&\n                    <React.Fragment>\n                        <br />\n                        <p className='page-error__code'><Localize i18n_default_text={'Error Code: {{error_code}}'} values={{ error_code }} /></p>\n                    </React.Fragment>\n                    }\n                </span>\n            </div>\n            { redirect_label &&\n            <ButtonLink\n                className='page-error__btn btn--primary btn--primary--orange'\n                to={redirect_url}\n                onClick={buttonOnClick}\n            >\n                <span className='page-error__btn-text btn__text'>\n                    {redirect_label}\n                </span>\n            </ButtonLink>\n            }\n        </div>\n    </div>\n);\n\nPageError.propTypes = {\n    buttonOnClick : PropTypes.func,\n    error_code    : PropTypes.number,\n    header        : PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    messages      : PropTypes.array,\n    redirect_label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    redirect_url  : PropTypes.string,\n};\n\nexport default PageError;\n","const digitTypesMap = [ 'even_odd', 'match_diff', 'over_under' ];\n\nexport const isDigitTradeType = (contract_type) => digitTypesMap.includes(contract_type);\n","const Shortcode = (() => {\n    const extractInfoFromShortcode = (shortcode) => {\n        const info_from_shortcode = {\n            category  : '',\n            underlying: '',\n            barrier_1 : '',\n        };\n\n        const pattern = new RegExp('^([A-Z]+)_((OTC_[A-Z0-9]+)|R_[\\\\d]{2,3}|[A-Z]+)'); // Used to get market name from shortcode\n        const extracted = pattern.exec(shortcode);\n        if (extracted !== null) {\n            info_from_shortcode.category   = extracted[1].toLowerCase();\n            info_from_shortcode.underlying = extracted[2];\n\n            if (/^(CALL|PUT)$/i.test(info_from_shortcode.category)) {\n                info_from_shortcode.barrier_1 = shortcode.split('_').slice(-2)[0];\n            }\n        }\n\n        return info_from_shortcode;\n    };\n\n    const isHighLow = ({ shortcode = '', shortcode_info = '' }) => {\n        const info_from_shortcode = shortcode ? extractInfoFromShortcode(shortcode) : shortcode_info;\n        return (info_from_shortcode && info_from_shortcode.barrier_1) ? !/^S0P$/.test(info_from_shortcode.barrier_1) : false;\n    };\n\n    return {\n        extractInfoFromShortcode,\n        isHighLow,\n    };\n})();\n\nmodule.exports = Shortcode;\n","export const website_domain = 'Deriv.app';\nexport const website_name   = 'Deriv';\nexport const default_title  = website_name;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport Icon              from 'Assets/icon.jsx';\n\nclass Tooltip extends React.PureComponent {\n    state = {\n        show_tooltip_balloon_icon: false,\n    }\n\n    onMouseEnter = () => {\n        this.setState({ show_tooltip_balloon_icon: true });\n    }\n\n    onMouseLeave = () => {\n        this.setState({ show_tooltip_balloon_icon: false });\n    }\n\n    render() {\n        const {\n            alignment,\n            children,\n            className,\n            classNameIcon,\n            has_error,\n            icon, // only question or info accepted\n            message,\n        } = this.props;\n\n        const icon_class = classNames(classNameIcon, icon);\n        return (\n            <span\n                className={classNames(className, 'tooltip', { 'tooltip--error': has_error })}\n                data-tooltip={message || undefined}\n                data-tooltip-pos={alignment}\n            >\n                {icon === 'info' &&\n                    <React.Fragment>\n                        <Icon\n                            icon='IconInfoOutline'\n                            className={icon_class}\n                            onMouseEnter={this.onMouseEnter}\n                            onMouseLeave={this.onMouseLeave}\n                        />\n                        <Icon\n                            icon='IconInfoBlue'\n                            className={classNames(`${classNameIcon}-balloon-icon`, 'tooltip__balloon-icon', {\n                                'tooltip__balloon-icon--show': this.state.show_tooltip_balloon_icon,\n                            })}\n                        />\n                    </React.Fragment>\n                }\n                {icon === 'question' && <Icon icon='IconQuestion' className={icon_class} />}\n                {icon === 'dot'      && <Icon icon='IconRedDot' className={icon_class} />}\n                {children}\n            </span>\n        );\n    }\n}\n\nTooltip.propTypes = {\n    alignment    : PropTypes.string,\n    children     : PropTypes.node,\n    className    : PropTypes.string,\n    classNameIcon: PropTypes.string,\n    has_error    : PropTypes.bool,\n    icon         : PropTypes.string,\n    message      : PropTypes.string,\n};\n\nexport default Tooltip;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Icon      from 'Assets/icon.jsx';\nimport Button    from '../button.jsx';\n\nconst IncrementButtons = ({\n    decrementValue,\n    incrementValue,\n    max_is_disabled,\n    min_is_disabled,\n}) => (\n    <React.Fragment>\n        <Button\n            className={'input-wrapper__button input-wrapper__button--increment'}\n            is_disabled={max_is_disabled}\n            onClick={incrementValue}\n            tabIndex='-1'\n        >\n            <Icon icon='IconPlus' className={'input-wrapper__icon input-wrapper__icon--plus' } is_disabled={max_is_disabled} />\n        </Button>\n        <Button\n            className={'input-wrapper__button input-wrapper__button--decrement'}\n            is_disabled={min_is_disabled}\n            onClick={decrementValue}\n            tabIndex='-1'\n        >\n            <Icon icon='IconMinus' className={'input-wrapper__icon input-wrapper__icon--minus'} is_disabled={min_is_disabled} />\n        </Button>\n    </React.Fragment>\n);\n\nIncrementButtons.propTypes = {\n    decrementValue : PropTypes.func,\n    incrementValue : PropTypes.func,\n    max_is_disabled: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    min_is_disabled: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n};\n\nexport default IncrementButtons;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst Input = ({\n    changeValue,\n    checked,\n    className,\n    classNameInlinePrefix,\n    data_value,\n    data_tip,\n    display_value,\n    fractional_digits,\n    id,\n    inline_prefix,\n    is_autocomplete_disabled,\n    is_disabled,\n    is_hj_whitelisted,\n    is_incrementable,\n    is_read_only,\n    max_length,\n    name,\n    onClick,\n    onKeyPressed,\n    placeholder,\n    required,\n    type,\n}) => {\n    const onChange = (e) => {\n        /**\n         * fix for Safari\n         * we have to keep track of the current cursor position, update the value in store,\n         * then reset the cursor position to the current cursor position\n         */\n        // TODO: find better ways to target browsers\n        if (navigator.userAgent.indexOf('Safari') !== -1 && type !== 'checkbox') {\n            const cursor = e.target.selectionStart;\n            changeValue(e, (evt) => {\n                evt.target.selectionEnd = cursor; // reset the cursor position in callback\n            });\n        } else {\n            changeValue(e);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            {!!inline_prefix &&\n            <div className={classNameInlinePrefix}>\n                <span className={classNames(classNameInlinePrefix ? `${classNameInlinePrefix}--symbol` : '', 'symbols', `symbols--${inline_prefix.toLowerCase()}`)} />\n            </div>\n            }\n            <input\n                autoComplete={is_autocomplete_disabled ? 'off' : undefined}\n                checked={checked}\n                className={classNames(className)}\n                data-for={`error_tooltip_${name}`}\n                data-hj-whitelist={is_hj_whitelisted}\n                data-tip={data_tip}\n                data-value={data_value}\n                disabled={is_disabled}\n                id={id}\n                maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n                name={name}\n                onChange={onChange}\n                onClick={onClick}\n                onKeyDown={is_incrementable ? onKeyPressed : undefined}\n                placeholder={placeholder || undefined}\n                readOnly={is_read_only}\n                required={required || undefined}\n                type={type === 'number' ? 'text' : type}\n                value={display_value || ''}\n            />\n        </React.Fragment>\n    );\n};\n\nInput.propTypes = {\n    changeValue: PropTypes.func,\n    checked    : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className            : PropTypes.string,\n    classNameInlinePrefix: PropTypes.string,\n    data_tip             : PropTypes.string,\n    data_value           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    display_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    fractional_digits       : PropTypes.number,\n    id                      : PropTypes.string,\n    inline_prefix           : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_hj_whitelisted       : PropTypes.bool,\n    is_incrementable        : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onClick                 : PropTypes.func,\n    onKeyPressed            : PropTypes.func,\n    placeholder             : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Input;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { isCryptocurrency }      from '_common/base/currency_base';\nimport Tooltip                   from 'App/Components/Elements/tooltip.jsx';\nimport IncrementButtons          from './increment-buttons.jsx';\nimport Input                     from './input.jsx';\n\nclass InputField extends React.Component {\n    render () {\n        const {\n            checked,\n            className,\n            classNameInlinePrefix,\n            classNameInput,\n            classNamePrefix,\n            currency,\n            data_tip,\n            data_value,\n            error_messages,\n            fractional_digits,\n            helper,\n            id,\n            inline_prefix,\n            is_autocomplete_disabled,\n            is_disabled,\n            is_float,\n            is_hj_whitelisted = false,\n            is_incrementable,\n            is_negative_disabled,\n            is_read_only = false,\n            is_signed = false,\n            is_unit_at_right = false,\n            label,\n            max_length,\n            max_value,\n            min_value,\n            name,\n            onChange,\n            onClick,\n            placeholder,\n            prefix,\n            required,\n            type,\n            unit,\n            value,\n        } = this.props;\n        const Icon = this.props.icon;\n        const has_error       = error_messages && !!error_messages.length;\n        let has_valid_length  = true;\n        const max_is_disabled = max_value && +value >= +max_value;\n        const min_is_disabled = min_value && +value <= +min_value;\n\n        const changeValue = (e, callback) => {\n            if (unit) {\n                e.target.value = e.target.value.replace(unit, '').trim();\n            }\n\n            if (e.target.value === value && type !== 'checkbox') {\n                return;\n            }\n\n            if (type === 'number' || type === 'tel') {\n                const is_empty = !e.target.value || e.target.value === '' || e.target.value === '  ';\n                const signed_regex = is_signed ? '^([+-.0-9])' : '^';\n\n                const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                    .test(e.target.value);\n\n                const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                    .test(e.target.value);\n                // This regex check whether there is any zero at the end of fractional part or not.\n                const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                    .test(e.target.value);\n\n                const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n                if (max_length && fractional_digits) {\n                    has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                        .test(e.target.value);\n                }\n\n                if (((is_number) || is_empty) && has_valid_length) {\n                    e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation || type === 'tel'\n                        ? e.target.value\n                        : +e.target.value;\n                } else if (!is_not_completed_number) {\n                    e.target.value = value;\n                    return;\n                }\n            }\n\n            onChange(e);\n            if (callback) {\n                callback(e);\n            }\n        };\n\n        const getDecimals = (val) => {\n            const array_value = typeof val === 'string' ? val.split('.') : val.toString().split('.');\n            return array_value && array_value.length > 1 ? array_value[1].length : 0;\n        };\n\n        const incrementValue = () => {\n            if (max_is_disabled) return;\n            let increment_value;\n\n            const decimal_places = value ? getDecimals(value) : 0;\n            const is_crypto      = !!currency && isCryptocurrency(currency);\n\n            if (is_crypto || (!currency && is_float)) {\n                const new_value = parseFloat(+value) + parseFloat(1 * 10 ** (0 - decimal_places));\n                increment_value = parseFloat(new_value).toFixed(decimal_places);\n            } else {\n                increment_value = parseFloat((+value) + 1).toFixed(decimal_places);\n            }\n            onChange({ target: { value: increment_value, name } });\n        };\n\n        const calculateDecrementedValue = () => {\n            let decrement_value;\n\n            const decimal_places = value ? getDecimals(value) : 0;\n            const is_crypto      = !!currency && isCryptocurrency(currency);\n\n            if (is_crypto || (!currency && is_float)) {\n                const new_value = parseFloat(+value) - parseFloat(1 * 10 ** (0 - decimal_places));\n                decrement_value = parseFloat(new_value).toFixed(decimal_places);\n            } else {\n                decrement_value = parseFloat((+value) - 1).toFixed(decimal_places);\n            }\n            return decrement_value;\n        };\n\n        const decrementValue = () => {\n            if (!value || min_is_disabled) return;\n            const decrement_value = calculateDecrementedValue();\n            if (is_negative_disabled && decrement_value < 0) return;\n            onChange({ target: { value: decrement_value, name } });\n        };\n\n        const onKeyPressed = (e) => {\n            if (e.keyCode === 38) incrementValue(); // up-arrow pressed\n            if (e.keyCode === 40) decrementValue(); // down-arrow pressed\n        };\n\n        let display_value = value;\n\n        if (unit) {\n            display_value = is_unit_at_right ? `${value} ${unit}` : `${unit} ${value}`;\n        }\n\n        const is_increment_input = is_incrementable && (type === 'number' || type === 'tel');\n\n        const input =\n            <Input\n                changeValue={changeValue}\n                checked={checked}\n                className={classNames(is_increment_input ? 'input-wrapper__input' : '', inline_prefix ? 'input--has-inline-prefix' : '', 'input', { 'input--error': has_error }, classNameInput)}\n                classNameInlinePrefix={classNameInlinePrefix}\n                data_tip={data_tip}\n                data_value={data_value}\n                display_value={display_value}\n                fractional_digits={fractional_digits}\n                has_error={has_error}\n                id={id}\n                inline_prefix={inline_prefix}\n                is_autocomplete_disabled={is_autocomplete_disabled}\n                is_disabled={is_disabled}\n                is_hj_whitelisted={is_hj_whitelisted}\n                is_incrementable={is_increment_input}\n                is_read_only={is_read_only}\n                max_length={max_length}\n                name={name}\n                onClick={onClick}\n                onKeyPressed={onKeyPressed}\n                placeholder={placeholder}\n                required={required}\n                type={type}\n            />;\n\n        const increment_buttons =\n            <IncrementButtons\n                max_is_disabled={max_is_disabled}\n                incrementValue={incrementValue}\n                min_is_disabled={min_is_disabled || (is_negative_disabled && calculateDecrementedValue() < 0)}\n                decrementValue={decrementValue}\n            />;\n\n        const input_tooltip =\n            <Tooltip\n                className={classNames('', { 'tooltip--with-label': label })}\n                alignment='left'\n                message={has_error ? error_messages[0] : null}\n                has_error={has_error}\n            >\n                {!!label &&\n                <label htmlFor={name} className='input-field__label'>{label}</label>\n                }\n                {!!helper &&\n                <span className='input-field__helper'>{helper}</span>\n                }\n                {is_increment_input ?\n                    <div className='input-wrapper'>\n                        {increment_buttons}\n                        {input}\n                    </div>\n                    :\n                    input\n                }\n            </Tooltip>;\n\n        return (\n            <React.Fragment>\n                {!!prefix &&\n                <div className={classNamePrefix}>\n                    <span className={classNames(`${classNamePrefix}--symbol`, 'symbols', `symbols--${prefix.toLowerCase()}`)} />\n                </div>\n                }\n                <div\n                    className={classNames('input-field', className)}\n                >\n                    {this.props.icon &&\n                    <Icon onClick={onClick} />\n                    }\n                    {input_tooltip}\n                </div>\n            </React.Fragment>\n        );\n\n    }\n}\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    checked: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className            : PropTypes.string,\n    classNameInlinePrefix: PropTypes.string,\n    classNameInput       : PropTypes.string,\n    classNamePrefix      : PropTypes.string,\n    currency             : PropTypes.string,\n    error_messages       : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits    : PropTypes.number,\n    helper               : PropTypes.string,\n    icon                 : PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.node,\n    ]),\n    id                      : PropTypes.string,\n    inline_prefix           : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_float                : PropTypes.bool,\n    is_hj_whitelisted       : PropTypes.bool,\n    is_incrementable        : PropTypes.bool,\n    is_negative_disabled    : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    is_signed               : PropTypes.bool,\n    is_unit_at_right        : PropTypes.bool,\n    label                   : PropTypes.string,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onChange                : PropTypes.func,\n    onClick                 : PropTypes.func,\n    placeholder             : PropTypes.string,\n    prefix                  : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    unit                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import classNames                      from 'classnames';\nimport PropTypes                       from 'prop-types';\nimport React                           from 'react';\nimport { VerticalTabContentContainer } from './vertical-tab-content-container.jsx';\nimport { VerticalTabHeaders }          from './vertical-tab-headers.jsx';\n\nclass VerticalTab extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        if (props.is_routed) {\n            const applicable_routes = props.list.filter(item => (\n                item.path === props.current_path || item.default\n            ));\n            const selected = applicable_routes.length > 1\n                ? applicable_routes[applicable_routes.length - 1]\n                : applicable_routes[0];\n\n            this.state = {\n                selected,\n            };\n        } else {\n            this.state = {\n                selected: props.list[props.selected_index || 0],\n            };\n        }\n    }\n\n    changeSelected = (e) => {\n        this.setState({\n            selected: e,\n        });\n    };\n\n    render() {\n        return (\n            <div\n                className={classNames('vertical-tab', {\n                    'vertical-tab--full-screen': this.props.is_full_width,\n                })}\n            >\n                <VerticalTabHeaders\n                    items={this.props.list}\n                    onChange={this.changeSelected}\n                    selected={this.state.selected}\n                    is_routed={this.props.is_routed}\n                    header_title={this.props.header_title}\n                />\n                <VerticalTabContentContainer\n                    action_bar={this.props.action_bar}\n                    action_bar_classname={this.props.action_bar_classname}\n                    items={this.props.list}\n                    selected={this.state.selected}\n                    is_routed={this.props.is_routed}\n                />\n            </div>\n        );\n    }\n}\n\nVerticalTab.propTypes = {\n    action_bar: PropTypes.arrayOf(\n        PropTypes.shape({\n            component: PropTypes.func,\n            icon     : PropTypes.string,\n            onClick  : PropTypes.func,\n            title    : PropTypes.string,\n        })\n    ),\n    action_bar_classname: PropTypes.string,\n    current_path        : PropTypes.string,\n    header_title        : PropTypes.string,\n    is_full_width       : PropTypes.bool,\n    is_routed           : PropTypes.bool,\n    list                : PropTypes.arrayOf(\n        PropTypes.shape({\n            default: PropTypes.bool,\n            icon   : PropTypes.string,\n            label  : PropTypes.string,\n            path   : PropTypes.string,\n            value  : PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n        })\n    ).isRequired,\n    selected_index: PropTypes.number,\n};\n\nexport default VerticalTab;\n","import React from 'react';\n\nconst Loading = ({ is_invisible, theme, id }) => (\n    <div id={id} className={`barspinner barspinner--${ theme || 'dark'}${is_invisible ? ' invisible' : ''}`}>\n        { Array.from(new Array(5)).map((x, inx) => (\n            <div key={inx} className={`barspinner__rect barspinner__rect--${inx + 1} rect${inx + 1}`} />\n        ))}\n    </div>\n);\n\nexport default Loading;\n","import classNames from 'classnames';\nimport React      from 'react';\n\nconst UnderlyingIcon = ({ market }) => (\n    <div\n        className={classNames(\n            'icons-underlying',\n            `icons-underlying__ic-${market ? market.toUpperCase() : 'unknown'}`\n        )}\n    />\n);\n\nexport { UnderlyingIcon };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from 'App/Components/Elements/localize.jsx';\n\nconst ProgressTicks = ({\n    current_tick,\n    ticks_count,\n}) => {\n    const arr_ticks   = [...Array(ticks_count).keys()];\n    return (\n        <div className='progress-slider__ticks'>\n            <span className='progress-slider__ticks-caption'>\n                <Localize i18n_default_text='Tick {{current_tick}}' values={{ current_tick: current_tick.toString() }} />\n            </span>\n            <div className='progress-slider__ticks-wrapper'>\n                {arr_ticks.map(idx =>\n                    <div\n                        key={idx}\n                        className={classNames('progress-slider__ticks-step', {\n                            'progress-slider__ticks-step--marked': (idx + 1) <= parseInt(current_tick),\n                        })}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n\nProgressTicks.propTypes = {\n    current_tick: PropTypes.number,\n    ticks_count : PropTypes.number,\n};\n\nexport default ProgressTicks;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { connect }           from 'Stores/connect';\nimport ProgressTicks         from './positions-progress-ticks.jsx';\nimport { getTimePercentage } from '../helpers';\nimport RemainingTime         from '../../../../Containers/remaining-time.jsx';\n\nconst ProgressSlider = ({\n    className,\n    current_tick,\n    is_loading,\n    start_time,\n    expiry_time,\n    server_time,\n    ticks_count,\n}) => {\n    const percentage = getTimePercentage(server_time, start_time, expiry_time);\n    return (\n        <div className={classNames('progress-slider', className)}>\n            {(ticks_count) ?\n                <ProgressTicks\n                    current_tick={current_tick}\n                    ticks_count={ticks_count}\n                />\n                :\n                <React.Fragment>\n                    <span className='positions-drawer-card__remaining-time'>\n                        <RemainingTime end_time={expiry_time} />\n                    </span>\n                    {(is_loading || (percentage < 1)) ?\n                        <div className='progress-slider__infinite-loader'>\n                            <div className='progress-slider__infinite-loader--indeterminate' />\n                        </div>\n                        :\n                        /* Calculate line width based on percentage of time left */\n                        <div className='progress-slider__track'>\n                            <div\n                                className={classNames('progress-slider__line', {\n                                    'progress-slider__line--green' : (percentage >= 50),\n                                    'progress-slider__line--orange': (percentage < 50 && percentage >= 20),\n                                    'progress-slider__line--red'   : (percentage < 20),\n                                })}\n                                style={{ width: `${percentage}%` }}\n                            />\n                        </div>\n                    }\n                </React.Fragment>\n            }\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nProgressSlider.propTypes = {\n    className   : PropTypes.string,\n    current_tick: PropTypes.number,\n    expiry_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_loading : PropTypes.bool,\n    server_time: PropTypes.object,\n    start_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    ticks_count: PropTypes.number,\n};\n\nexport default connect(({ common }) => ({\n    server_time: common.server_time,\n}))(ProgressSlider);\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { Trans }        from 'react-i18next';\n\nconst Localize = ({ i18n_default_text, values, components }) => (\n    <Trans defaults={i18n_default_text} values={values} components={components} />\n);\n\nLocalize.propTypes = {\n    components       : PropTypes.arrayOf(PropTypes.node),\n    i18n_default_text: PropTypes.string,\n    values           : PropTypes.object,\n};\n\nexport default Localize;\n","const Cookies          = require('js-cookie');\nconst getPropertyValue = require('./utility').getPropertyValue;\nconst isEmptyObject    = require('./utility').isEmptyObject;\nconst isProduction     = require('../config').isProduction;\n\nconst getObject = function (key) {\n    return JSON.parse(this.getItem(key) || '{}');\n};\n\nconst setObject = function (key, value) {\n    if (value && value instanceof Object) {\n        try {\n            this.setItem(key, JSON.stringify(value));\n        } catch (e) { /* do nothing */ }\n    }\n};\n\nif (typeof Storage !== 'undefined') {\n    Storage.prototype.getObject = getObject;\n    Storage.prototype.setObject = setObject;\n}\n\nconst isStorageSupported = (storage) => {\n    if (typeof storage === 'undefined') {\n        return false;\n    }\n\n    const test_key = 'test';\n    try {\n        storage.setItem(test_key, '1');\n        storage.removeItem(test_key);\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\n\nconst Store = function (storage) {\n    this.storage           = storage;\n    this.storage.getObject = getObject;\n    this.storage.setObject = setObject;\n};\n\nStore.prototype = {\n    get(key) {\n        return this.storage.getItem(key) || undefined;\n    },\n    set(key, value) {\n        if (typeof value !== 'undefined') {\n            this.storage.setItem(key, value);\n        }\n    },\n    getObject(key) {\n        return typeof this.storage.getObject === 'function' // Prevent runtime error in IE\n            ? this.storage.getObject(key)\n            : JSON.parse(this.storage.getItem(key) || '{}');\n    },\n    setObject(key, value) {\n        if (typeof this.storage.setObject === 'function') { // Prevent runtime error in IE\n            this.storage.setObject(key, value);\n        } else {\n            this.storage.setItem(key, JSON.stringify(value));\n        }\n    },\n    remove(key) { this.storage.removeItem(key); },\n    clear()     { this.storage.clear(); },\n};\n\nconst InScriptStore = function (object) {\n    this.store = typeof object !== 'undefined' ? object : {};\n};\n\nInScriptStore.prototype = {\n    get(key) {\n        return getPropertyValue(this.store, key);\n    },\n    set(k, value, obj = this.store) {\n        let key = k;\n        if (!Array.isArray(key)) key = [key];\n        if (key.length > 1) {\n            if (!(key[0] in obj) || isEmptyObject(obj[key[0]])) obj[key[0]] = {};\n            this.set(key.slice(1), value, obj[key[0]]);\n        } else {\n            obj[key[0]] = value;\n        }\n    },\n    getObject(key) {\n        return JSON.parse(this.get(key) || '{}');\n    },\n    setObject(key, value) {\n        this.set(key, JSON.stringify(value));\n    },\n    remove(...keys) {\n        keys.forEach((key) => { delete this.store[key]; });\n    },\n    clear()   { this.store = {}; },\n    has(key)  { return this.get(key) !== undefined; },\n    keys()    { return Object.keys(this.store); },\n    call(key) { if (typeof this.get(key) === 'function') this.get(key)(); },\n};\n\nconst State     = new InScriptStore();\nState.prototype = InScriptStore.prototype;\n/**\n * Shorthand function to get values from response object of State\n *\n * @param {String} pathname\n *     e.g. getResponse('authorize.currency') == get(['response', 'authorize', 'authorize', 'currency'])\n */\nState.prototype.getResponse = function (pathname) {\n    let path = pathname;\n    if (typeof path === 'string') {\n        const keys = path.split('.');\n        path = ['response', keys[0]].concat(keys);\n    }\n    return this.get(path);\n};\nState.set('response', {});\n\nconst CookieStorage = function (cookie_name, cookie_domain) {\n    const hostname = window.location.hostname;\n\n    this.initialized = false;\n    this.cookie_name = cookie_name;\n    this.domain      = cookie_domain || (isProduction() ? `.${hostname.split('.').slice(-2).join('.')}` : hostname);\n    this.path        = '/';\n    this.expires     = new Date('Thu, 1 Jan 2037 12:00:00 GMT');\n    this.value       = {};\n};\n\nCookieStorage.prototype = {\n    read() {\n        const cookie_value = Cookies.get(this.cookie_name);\n        try {\n            this.value = cookie_value ? JSON.parse(cookie_value) : {};\n        } catch (e) {\n            this.value = {};\n        }\n        this.initialized = true;\n    },\n    write(val, expireDate, isSecure) {\n        if (!this.initialized) this.read();\n        this.value = val;\n        if (expireDate) this.expires = expireDate;\n        Cookies.set(this.cookie_name, this.value, {\n            expires: this.expires,\n            path   : this.path,\n            domain : this.domain,\n            secure : !!isSecure,\n        });\n    },\n    get(key) {\n        if (!this.initialized) this.read();\n        return this.value[key];\n    },\n    set(key, val) {\n        if (!this.initialized) this.read();\n        this.value[key] = val;\n        Cookies.set(this.cookie_name, this.value, {\n            expires: new Date(this.expires),\n            path   : this.path,\n            domain : this.domain,\n        });\n    },\n    remove() {\n        Cookies.remove(this.cookie_name, {\n            path  : this.path,\n            domain: this.domain,\n        });\n    },\n};\n\nconst removeCookies = (...cookie_names) => {\n    const domains = [\n        `.${document.domain.split('.').slice(-2).join('.')}`,\n        `.${document.domain}`,\n    ];\n\n    let parent_path = window.location.pathname.split('/', 2)[1];\n    if (parent_path !== '') {\n        parent_path = `/${parent_path}`;\n    }\n\n    cookie_names.forEach((c) => {\n        Cookies.remove(c, { path: '/', domain: domains[0] });\n        Cookies.remove(c, { path: '/', domain: domains[1] });\n        Cookies.remove(c);\n        if (new RegExp(c).test(document.cookie) && parent_path) {\n            Cookies.remove(c, { path: parent_path, domain: domains[0] });\n            Cookies.remove(c, { path: parent_path, domain: domains[1] });\n            Cookies.remove(c, { path: parent_path });\n        }\n    });\n};\n\nlet SessionStore,\n    LocalStore;\n\nif (isStorageSupported(window.localStorage)) {\n    LocalStore = new Store(window.localStorage);\n}\nif (isStorageSupported(window.sessionStorage)) {\n    SessionStore = new Store(window.sessionStorage);\n}\n\nif (!LocalStore) {\n    LocalStore = new InScriptStore();\n}\nif (!SessionStore) {\n    SessionStore = new InScriptStore();\n}\n\nmodule.exports = {\n    isStorageSupported,\n    CookieStorage,\n    removeCookies,\n    State,\n    SessionStore,\n    LocalStore,\n};\n","import moment            from 'moment';\nimport { isEmptyObject } from '_common/utility';\nimport ServerTime        from '_common/base/server_time';\n\nexport const getChartConfig = (\n    contract_info,\n    is_digit_contract,\n    is_from_purchase,\n) => {\n    if (isEmptyObject(contract_info)) return null;\n    const start       = contract_info.date_start;\n    const end         = getEndTime(contract_info);\n    const granularity = getChartGranularity(start, end || null);\n    const chart_type  = getChartType(start, end || null);\n\n    return {\n        chart_type                : contract_info.tick_count ? 'mountain' : chart_type,\n        granularity               : contract_info.tick_count ? 0 : granularity,\n        end_epoch                 : end,\n        start_epoch               : !is_from_purchase ? start : null,\n        scroll_to_epoch           : contract_info.purchase_time,\n        should_show_bottom_widgets: is_digit_contract,\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\n\nconst getExpiryTime = (time) => time || ServerTime.get().unix();\n\nexport const getChartType = (start_time, expiry_time) => {\n    const duration = moment.duration(moment.unix(getExpiryTime(expiry_time)).diff(moment.unix(start_time))).asHours();\n    // use line chart if duration is equal or less than 1 hour\n    return (duration <= 1) ? 'mountain' : 'candle';\n};\n\nexport const getChartGranularity = (start_time, expiry_time) =>\n    calculateGranularity(getExpiryTime(expiry_time) - start_time);\n\nexport const calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const getLastTickFromTickStream = (tick_stream = []) => (\n    tick_stream[tick_stream.length - 1] || {}\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n\nexport const getEndTime = (contract_info) => {\n    const {\n        exit_tick_time,\n        date_expiry,\n        is_expired,\n        is_path_dependent,\n        sell_time,\n        status,\n        tick_count: is_tick_contract,\n    } = contract_info;\n\n    const is_finished = is_expired && (status !== 'open');\n\n    if (!is_finished && !isUserSold(contract_info)) return undefined;\n\n    if (isUserSold(contract_info)) {\n        return (sell_time > date_expiry) ?\n            date_expiry : sell_time;\n    } else if (!is_tick_contract && (sell_time > date_expiry)) {\n        return date_expiry;\n    }\n\n    return (date_expiry > exit_tick_time && !(+is_path_dependent)) ? date_expiry : exit_tick_time;\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import ServerTime               from '_common/base/server_time';\nimport { localize }             from 'App/i18n';\nimport {\n    cloneObject,\n    getPropertyValue }          from '_common/utility';\nimport { WS }                   from 'Services';\nimport {\n    isTimeValid,\n    minDate,\n    toMoment }                  from 'Utils/Date';\nimport { buildBarriersConfig }  from './barrier';\nimport {\n    buildDurationConfig,\n    hasIntradayDurationUnit }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }        from './start-date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }         from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n    const trading_times          = {};\n    let has_only_forward_starting_contracts = false;\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const has_contracts = getPropertyValue(r, ['contracts_for']);\n        has_only_forward_starting_contracts = has_contracts && !r.contracts_for.available.find((contract) => contract.start_type !== 'forward');\n        if (!has_contracts || has_only_forward_starting_contracts) return;\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = isTimeValid(time) ? time.split(':') : [0, 0];\n        return toMoment(date || ServerTime.get()).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingTimes = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response = await WS.getTradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times]) {\n                                        trading_times[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times][symbol.symbol] = {\n                                        'open' : symbol.times.open,\n                                        'close': symbol.times.close,\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (duration_units_list, expiry_type) => {\n        if (duration_units_list && duration_units_list.length === 1 && duration_units_list[0].value === 't') {\n            return { expiry_type: 'duration' };\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (duration_units_list, expiry_date, expiry_type, start_date) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start  = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format('YYYY-MM-DD');\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    ) => {\n        let end_time = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (market_close_times && market_close_times.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get().isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date ? buildMoment(start_date, start_time) : ServerTime.get();\n                const end_moment   = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [{\n                    open : start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                    close: minDate(start_moment.clone().add(24, 'hour'), buildMoment(expiry_date, market_close_time)),\n                }];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes');\n                    // Set the end_time to be multiple of 5 to be equal as the SELECTED_TIME that shown to the client.\n                    end_time = setMinuteMultipleByFive(end_time).format('HH:mm');\n                }\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n        return { expiry_time: end_time };\n    };\n\n    const setMinuteMultipleByFive = (moment_obj) => (\n        moment_obj.minute((Math.ceil(moment_obj.minute() / 5) * 5))\n    );\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingTimes,\n        getContractCategories: () => ({\n            contract_types_list: available_categories,\n            has_only_forward_starting_contracts,\n        }),\n    };\n})();\n\nexport default ContractType;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Loading   from '../../../templates/_common/components/loading.jsx';\n\nconst ChartLoader = ({ is_visible }) => (\n    is_visible &&\n    <div className='chart-container__loader'>\n        <Loading theme='chart-loader' />\n    </div>\n);\n\nChartLoader.propTypes = {\n    is_visible: PropTypes.bool,\n};\n\nexport default ChartLoader;\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport Icon                       from 'Assets/icon.jsx';\n\nconst ContractTypeCell = ({ type, is_high_low }) => (\n    <div className='contract-type'>\n        <div className='contract-type__type-wrapper'>\n            <Icon\n                icon='IconTradeType'\n                type={(is_high_low) ? `${type.toLowerCase()}_barrier` : type.toLowerCase()}\n                className='category-type'\n            />\n        </div>\n        <span className='contract-type__type-label'>\n            {getContractTypeDisplay(type, is_high_low) || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Icon         from 'Assets/icon.jsx';\nimport { localize } from 'App/i18n';\n\nconst FooterIcon = (use_icon) => use_icon || 'IconCalendarToday';\n\nconst CalendarFooter = ({\n    footer,\n    has_today_btn,\n    has_range_selection,\n    duration_date,\n    is_minimum,\n    onClick,\n    use_icon,\n}) => (\n    <React.Fragment>\n        { (has_today_btn || footer || has_range_selection) &&\n            <div className='calendar__footer'>\n                { footer && <span className='calendar__text'>{footer}</span>}\n                { has_range_selection && <span className='calendar__text'>{ `${!is_minimum ? localize('Duration: ') : ''}${duration_date}` }</span> }\n                { has_today_btn &&\n                    <Icon\n                        icon={FooterIcon(use_icon)}\n                        className='calendar__icon'\n                        onClick={onClick}\n                    />\n                }\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarFooter.propTypes = {\n    duration_date      : PropTypes.string,\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    is_minimum         : PropTypes.bool,\n    onClick            : PropTypes.func,\n    use_icon           : PropTypes.string,\n};\n\nexport default CalendarFooter;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst Highlight = ({ left, width }) => {\n    const border_radius_size = '4px';\n    const left_offset        = (left < 110) ? 0 : left;\n    const width_offset       = (width < 110) ? 111 : width;\n    const highlight_style = {\n        width                    : width_offset,\n        left                     : 0,\n        transform                : `translate3d(${left_offset}px, 0, 0)`,\n        'borderTopLeftRadius'    : (left_offset === 0) ? border_radius_size : 0,\n        'borderTopRightRadius'   : (left_offset === 0) ? 0 : border_radius_size ,\n        'borderBottomLeftRadius' : (left_offset === 0) ? border_radius_size  : 0,\n        'borderBottomRightRadius': (left_offset === 0) ? 0 : border_radius_size ,\n    };\n\n    return (\n        <span style={highlight_style} className='button-menu--highlight' />\n    );\n};\n\nHighlight.propTypes = {\n    left : PropTypes.number,\n    width: PropTypes.number,\n};\n\nexport { Highlight };\n","import classnames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { Highlight } from './button-highlight.jsx';\n\nclass HighlightWrapper extends React.PureComponent {\n    state = {\n        left : 0,\n        width: 0,\n    }\n\n    componentDidMount() {\n        const active_button_el = [...this.node.getElementsByClassName('button-menu__button--active')][0];\n        if (!this.node) return;\n        this.updateHighlightPosition(active_button_el);\n    }\n\n    componentDidUpdate() {\n        const active_button_el = [...this.node.getElementsByClassName('button-menu__button--active')][0];\n        if (active_button_el) {\n            this.updateHighlightPosition(active_button_el);\n        } else if (this.state.left !== 0 || this.state.width !== 0) {\n            this.resetHighlight(); // clear highlight when active element doesn't exist\n        }\n    }\n\n    componentWillUnMount() {\n        this.resetHighlight();\n    }\n\n    onClick = (e, buttonClick) => {\n        if (!e.target) return;\n        this.updateHighlightPosition(e.target.closest('button'));\n        if (typeof buttonClick  === 'function') {\n            buttonClick();\n        }\n    };\n\n    resetHighlight = () => {\n        this.setState({\n            left : 0,\n            width: 0,\n        });\n    };\n\n    updateHighlightPosition = (el) => {\n        if (!el) return;\n        const { offsetLeft: left, offsetWidth: width } = el;\n        if (this.state.width !== width) {\n            this.setState({ width });\n        }\n        if (this.state.left !== left) {\n            this.setState({ left });\n        }\n    };\n\n    render() {\n        const { className, ...other_props } = this.props;\n        const props = {\n            className: classnames('button-menu__wrapper', className),\n            ...other_props,\n        };\n\n        return (\n            <div ref={(node) => this.node = node} {...props}>\n                {\n                    React.Children.map(this.props.children, child => (\n                        React.cloneElement(child, {\n                            onClick: (e) => this.onClick(e, child.props.onClick),\n                        })\n                    ))\n                }\n                <Highlight left={this.state.left} width={this.state.width} />\n            </div>\n        );\n    }\n}\n\nHighlightWrapper.propTypes = {\n    children : PropTypes.array,\n    className: PropTypes.string,\n    timeout  : PropTypes.number,\n};\n\nexport default HighlightWrapper;\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport Button           from 'App/Components/Form/button.jsx';\nimport HighlightWrapper from './button-highlight-wrapper.jsx';\n\nconst ButtonToggleMenu = ({\n    buttons_arr,\n    is_animated,\n    name,\n    onChange,\n    value,\n}) => {\n    const changeValue = (selected_value) => {\n        if (value === selected_value) return;\n        onChange({ target: { value: selected_value, name } });\n    };\n    const menu = buttons_arr.map((val, idx) => {\n        const className = classNames('button-menu__button', {\n            'button-menu__button--active': val.value === value,\n        });\n        return (\n            <Button\n                key={idx}\n                text={`${val.text.charAt(0).toUpperCase()}${val.text.slice(1)}`}\n                onClick={() => changeValue(val.value)}\n                className={className}\n            />\n        );\n    });\n    return (\n        <div className='button-menu'>\n            {is_animated ?\n                <HighlightWrapper>\n                    {menu}\n                </HighlightWrapper>\n                :\n                <React.Fragment>\n                    {menu}\n                </React.Fragment>\n            }\n        </div>\n    );\n};\n\nButtonToggleMenu.propTypes = {\n    buttons_arr: PropTypes.array,\n    is_animated: PropTypes.bool,\n    name       : PropTypes.string,\n    onChange   : PropTypes.func,\n    value      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default ButtonToggleMenu;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { Popover }         from 'App/Components/Elements/Popover';\nimport { getCurrencyName } from '_common/base/currency_base';\n\nconst Items = ({\n    index,\n    handleSelect,\n    has_symbol,\n    items,\n    name,\n    value,\n}) =>  items.map((item, idx) => {\n    const symbol_type_class_name = item.text ? `symbols--${(item.text).toLowerCase()}` : '';\n    return (\n        <div\n            className={classNames(\n                'list__item',\n                { 'list__item--highlighted': idx === index },\n                { 'list__item--selected': value === item.value },\n                { 'list__item--disabled': item.disabled }\n            )}\n            name={name}\n            value={item.value}\n            onClick={item.disabled ? null : handleSelect.bind(null, item)}\n            key={idx}\n        >\n            {!!has_symbol && item.has_tooltip &&\n                <Popover\n                    alignment='left'\n                    message={getCurrencyName(item.value)}\n                >\n                    <span\n                        className={classNames(\n                            'symbols',\n                            'list__item-symbol',\n                            symbol_type_class_name\n                        )}\n                    />\n                </Popover>\n            }\n\n            {!!has_symbol && !item.has_tooltip &&\n                <span\n                    className={classNames(\n                        'symbols',\n                        'list__item-text',\n                        symbol_type_class_name,\n                    )}\n                />\n            }\n\n            {!has_symbol &&\n                <span className='list__item-text'>{item.text}</span>\n            }\n        </div>\n    );\n});\n\nItems.propTypes = {\n    handleSelect: PropTypes.func,\n    has_symbol  : PropTypes.bool,\n    name        : PropTypes.string,\n    value       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Items;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst NativeSelect = ({\n    name,\n    list,\n    value,\n    onChange,\n}) => (\n    <div className='native-select native-select__wrapper'>\n        <select className='select native-select__select' name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default NativeSelect;\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import classNames        from 'classnames';\nimport { isArrayLike }   from 'mobx';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Scrollbars }    from 'tt-react-custom-scrollbars';\nimport Icon              from 'Assets/icon.jsx';\nimport Items             from './items.jsx';\nimport NativeSelect      from './native-select.jsx';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex }       from './helpers';\n\nclass Dropdown extends React.PureComponent {\n    list_ref = React.createRef();\n    state = {\n        curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        is_list_visible: false,\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    setWrapperRef = (node) => this.wrapper_ref = node;\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n        }\n    }\n\n    handleVisibility = () => {\n        this.setState((state) =>({  is_list_visible: !state.is_list_visible }));\n    }\n\n    onKeyPressed = (event) => {\n        if (this.is_single_option) return;\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                } else if (!this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 37: // Left arrow is pressed\n                if (!this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 39: // Right Arrow is pressed\n                if (this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <NativeSelect\n                    name={this.props.name}\n                    value={this.props.value}\n                    list={this.props.list}\n                    onChange={this.props.onChange}\n                />\n            );\n        }\n\n        // we are calculating the offset for the dropdown list based on it's width here\n        const left_alignment_style = {\n            transform: `translate3d(calc(-${this.state.list_width}px - 12px), 0, 0px)`,\n        };\n\n        // upon render via css transition group, we use this as a callback to set the width of the dropdown list in the state\n        const setListWidth = () => this.setState({ list_width: this.list_ref.current.offsetWidth });\n\n        const is_single_option = isArrayLike(this.props.list) ?\n            !!(this.props.list.length < 2)\n            :\n            !!(Object.keys(this.props.list).length < 2);\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={classNames('dropdown-container', this.props.className, {\n                    'dropdown--left'    : this.props.is_alignment_left,\n                    'dropdown--show'    : this.state.is_list_visible,\n                    'dropdown--disabled': is_single_option,\n                })}\n            >\n                <div\n                    className={classNames('dropdown__display', this.props.classNameDisplay, {\n                        'dropdown__display--clicked'   : this.state.is_list_visible,\n                        'dropdown__display--has-symbol': this.props.has_symbol,\n                    })}\n                    tabIndex={is_single_option ? '-1' : '0'}\n                    onClick={this.handleVisibility}\n                    onKeyDown={this.onKeyPressed}\n                >\n                    {this.props.has_symbol &&\n                    <span name={this.props.name} value={this.props.value} className={`symbols dropdown__display-symbol symbols--${(this.props.value || '').toLowerCase()}`} />\n                    }\n                    {!this.props.has_symbol &&\n                    <span name={this.props.name} value={this.props.value} className='dropdown__display-text'>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                    }\n                </div>\n                {\n                    !is_single_option && <Icon\n                        icon='IconArrow'\n                        className={classNames('dropdown__select-arrow', {\n                            'dropdown__select-arrow--left': this.props.is_alignment_left,\n                        })}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `dropdown__list--enter ${this.props.is_alignment_left ? 'dropdown__list--left--enter' : ''}`,\n                        enterDone: `dropdown__list--enter-done ${this.props.is_alignment_left ? 'dropdown__list--left--enter-done' : ''}`,\n                        exit     : `dropdown__list--exit ${this.props.is_alignment_left ? 'dropdown__list--left--exit' : ''}`,\n                    }}\n                    onEntered={setListWidth}\n                    unmountOnExit\n                >\n                    <div className={classNames('dropdown__list', {\n                        'dropdown__list--left': this.props.is_alignment_left,\n                    })}\n                    >\n                        <div\n                            className={classNames('list', {\n                                'list--left': this.props.is_alignment_left,\n                            })}\n                            ref={this.list_ref}\n                            style={this.props.is_alignment_left ? left_alignment_style : undefined}\n                        >\n                            <Scrollbars\n                                autoHeight\n                                autoHide\n                                autoHeightMax={200}\n                                renderTrackHorizontal={props => <div {...props} className='track-horizontal' style={{ display: 'none' }} />}\n                                renderThumbHorizontal={props => <div {...props} className='thumb-horizontal' style={{ display: 'none' }} />}\n                            >\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        index={this.state.curr_index}\n                                        handleSelect={this.handleSelect}\n                                        has_symbol={this.props.has_symbol}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list__label'>{key}</div>\n                                            <Items\n                                                index={this.state.curr_index}\n                                                handleSelect={this.handleSelect}\n                                                has_symbol={this.props.has_symbol}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </Scrollbars>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDropdown.propTypes = {\n    className        : PropTypes.string,\n    classNameDisplay : PropTypes.string,\n    has_symbol       : PropTypes.bool,\n    is_alignment_left: PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    list             : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Dropdown;\n","import { getPropertyValue } from '_common/utility';\nimport ContractType         from './contract-type';\n\nexport const hasCallPutEqual = (contract_type_list) => {\n    if (!contract_type_list) return false;\n\n    return getPropertyValue(contract_type_list, 'Up/Down')\n        .some(contract => contract.value === 'rise_fall_equal');\n};\n\nexport const hasDurationForCallPutEqual = (contract_type_list, duration_unit, contract_start_type) => {\n    if (!contract_type_list || !duration_unit || !contract_start_type) return false;\n\n    const contract_list = Object.keys(contract_type_list || {})\n        .reduce((key, list) => ([...key, ...contract_type_list[list].map(contract => contract.value)]), []);\n\n    const contract_duration_list = contract_list\n        .map(list => ({ [list]: getPropertyValue(ContractType.getFullContractTypes(), [list, 'config', 'durations', 'units_display', contract_start_type]) }));\n\n    // Check whether rise fall equal is exists and has the current store duration unit\n    return hasCallPutEqual(contract_type_list) ? contract_duration_list\n        .filter(contract => contract.rise_fall_equal)[0].rise_fall_equal\n        .some(duration => duration.value === duration_unit) : false;\n};\n\nexport const isRiseFallEqual = (contract_type) => /^(rise_fall|rise_fall_equal)$/.test(contract_type);\n","import React                    from 'react';\nimport PropTypes                from 'prop-types';\nimport { localize }             from 'App/i18n';\nimport { Popover }              from 'App/Components/Elements/Popover';\nimport InputField               from 'App/Components/Form/InputField';\nimport {\n    hasCallPutEqual,\n    hasDurationForCallPutEqual,\n    isRiseFallEqual }           from 'Stores/Modules/Trading/Helpers/allow-equals';\n\nconst AllowEquals = ({\n    contract_start_type,\n    contract_type,\n    contract_types_list,\n    duration_unit,\n    expiry_type,\n    onChange,\n    value,\n}) => {\n    const has_callputequal_duration = hasDurationForCallPutEqual(contract_types_list,\n        duration_unit, contract_start_type);\n    const has_callputequal          = hasCallPutEqual(contract_types_list);\n\n    const has_allow_equals = isRiseFallEqual(contract_type) &&\n            ((has_callputequal_duration || expiry_type === 'endtime') && has_callputequal);\n\n    const changeValue = (e) => {\n        const { name, checked } = e.target;\n        onChange({ target: { name, value: Number(checked) } });\n    };\n\n    return (\n        has_allow_equals &&\n            <div className='allow-equals'>\n                <InputField\n                    className='allow-equals__input-field'\n                    classNameInput='allow-equals__input trade-container__input'\n                    checked={value}\n                    id='allow_equals'\n                    name='is_equal'\n                    onChange={changeValue}\n                    type='checkbox'\n                    value={value}\n                />\n                <label className='allow-equals__label' htmlFor='allow_equals'>{localize('Allow equals')}</label>\n                <Popover\n                    alignment='left'\n                    classNameTarget='allow-equals__tooltip'\n                    icon='info'\n                    message={localize('Win payout if exit spot is also equal to entry spot.')}\n                    margin={113}\n                />\n            </div>\n    );\n};\n\nAllowEquals.propTypes = {\n    contract_start_type: PropTypes.string,\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    duration_unit      : PropTypes.string,\n    expiry_type        : PropTypes.string,\n    onChange           : PropTypes.func,\n    value              : PropTypes.number,\n};\n\nexport default AllowEquals;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }                from '_common/base/currency_base';\nimport ButtonToggleMenu               from 'App/Components/Form/ButtonToggleMenu';\nimport Dropdown                       from 'App/Components/Form/DropDown';\nimport Fieldset                       from 'App/Components/Form/fieldset.jsx';\nimport InputField                     from 'App/Components/Form/InputField';\nimport { connect }                    from 'Stores/connect';\nimport AllowEquals                    from './allow-equals.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    contract_start_type,\n    contract_type,\n    contract_types_list,\n    currencies_list,\n    currency,\n    duration_unit,\n    expiry_type,\n    is_equal,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized fieldset-minimized__amount'>\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={classNames('fieldset-minimized__currency', 'symbols', { [`symbols--${(currency || '').toLowerCase()}`]: currency })} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n\n    const input =\n        <InputField\n            className='trade-container__amount'\n            classNameInlinePrefix='trade-container__currency'\n            classNameInput='trade-container__input'\n            currency={currency}\n            error_messages={validation_errors.amount}\n            fractional_digits={getDecimalPlaces(currency)}\n            id='amount'\n            inline_prefix={is_single_currency ? currency : null}\n            is_autocomplete_disabled\n            is_float\n            is_hj_whitelisted\n            is_incrementable\n            is_nativepicker={is_nativepicker}\n            is_negative_disabled\n            max_length={10}\n            name='amount'\n            onChange={onChange}\n            type='tel'\n            value={amount}\n        />;\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <ButtonToggleMenu\n                buttons_arr={basis_list}\n                className='dropdown--no-margin'\n                is_animated={true}\n                name='basis'\n                onChange={onChange}\n                value={basis}\n            />\n            {!is_single_currency ?\n                <div className='trade-container__currency-options'>\n                    <Dropdown\n                        className={classNames({ 'trade-container__currency-options-dropdown': !is_single_currency })}\n                        classNameDisplay='trade-container__currency-options--display'\n                        has_symbol\n                        is_alignment_left\n                        is_nativepicker={false}\n                        list={currencies_list}\n                        name='currency'\n                        value={currency}\n                        onChange={onChange}\n                    />\n                    {input}\n                </div>\n                :\n                input\n\n            }\n            <AllowEquals\n                contract_start_type={contract_start_type}\n                contract_type={contract_type}\n                contract_types_list={contract_types_list}\n                duration_unit={duration_unit}\n                expiry_type={expiry_type}\n                onChange={onChange}\n                value={parseInt(is_equal)}\n            />\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis              : PropTypes.string,\n    basis_list         : MobxPropTypes.arrayOrObservableArray,\n    contract_start_type: PropTypes.string,\n    contract_type      : PropTypes.string,\n    contract_types_list: MobxPropTypes.observableObject,\n    currencies_list    : MobxPropTypes.observableObject,\n    currency           : PropTypes.string,\n    duration_unit      : PropTypes.string,\n    expiry_type        : PropTypes.string,\n    is_equal           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default connect(({ modules, client }) => ({\n    amount             : modules.trade.amount,\n    basis              : modules.trade.basis,\n    basis_list         : modules.trade.basis_list,\n    contract_start_type: modules.trade.contract_start_type,\n    contract_type      : modules.trade.contract_type,\n    contract_types_list: modules.trade.contract_types_list,\n    currencies_list    : client.currencies_list,\n    currency           : modules.trade.currency,\n    duration_unit      : modules.trade.duration_unit,\n    expiry_type        : modules.trade.expiry_type,\n    is_equal           : modules.trade.is_equal,\n    is_single_currency : client.is_single_currency,\n    onChange           : modules.trade.onChange,\n    validation_errors  : modules.trade.validation_errors,\n}))(Amount);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Icon         from 'Assets/icon.jsx';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport InputField   from 'App/Components/Form/InputField';\nimport { connect }  from 'Stores/connect';\nimport { localize } from 'App/i18n';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    const barrier_title = barrier_count === 1 ? localize('Barrier') : localize('Barriers');\n\n    if (is_minimized) {\n        return barrier_count !== 2 ? (\n            <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                {barrier_1}\n            </div>\n        ) : (\n            <React.Fragment>\n                <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized fieldset-minimized__barrier2'>\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    const input_class = barrier_count === 2 ? 'multiple' : 'single';\n    return (\n        <Fieldset\n            className='trade-container__fieldset trade-container__barriers'\n            header={barrier_title}\n            is_center\n        >\n            <div>\n                <InputField\n                    type='number'\n                    name='barrier_1'\n                    value={barrier_1}\n                    className={`trade-container__barriers-${input_class}`}\n                    classNameInput={classNames('trade-container__input', 'trade-container__barriers-input', `trade-container__barriers-${input_class}-input`)}\n                    onChange={onChange}\n                    error_messages={validation_errors.barrier_1 || []}\n                    is_float\n                    is_signed\n                />\n\n                {barrier_count === 2 &&\n                    <React.Fragment>\n                        <InputField\n                            type='number'\n                            name='barrier_2'\n                            value={barrier_2}\n                            className='multiple'\n                            classNameInput='trade-container__input'\n                            onChange={onChange}\n                            error_messages={validation_errors.barrier_2}\n                            is_float\n                            is_signed\n                        />\n                        <Icon icon='IconBarrierUp'   className='trade-container__barriers--up' />\n                        <Icon icon='IconBarrierDown' className='trade-container__barriers--down' />\n                    </React.Fragment>\n                }\n            </div>\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(({ modules }) => (\n    {\n        barrier_1        : modules.trade.barrier_1,\n        barrier_2        : modules.trade.barrier_2,\n        barrier_count    : modules.trade.barrier_count,\n        onChange         : modules.trade.onChange,\n        validation_errors: modules.trade.validation_errors,\n    }\n))(Barrier);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst TickSteps = ({\n    hover_value,\n    max_value,\n    min_value,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    value,\n}) => {\n    const arr_ticks = [...Array((max_value - min_value) + 1).keys()];\n\n    const isActive = (idx) => (idx + min_value) === value;\n    const isMarked = (idx) => (idx + min_value) < value;\n    const isMarkedOnHover = (idx) => (isMarked(idx)) ? false : (idx + min_value) <= hover_value;\n\n    return (\n        <React.Fragment>\n            {arr_ticks.map(idx =>\n                <span\n                    key={idx}\n                    className={classNames('range-slider__ticks-step', {\n                        'range-slider__ticks-step--active'      : isActive(idx),\n                        'range-slider__ticks-step--marked'      : isMarked(idx),\n                        'range-slider__ticks-step--marked-hover': isMarkedOnHover(idx),\n                    })}\n                    onClick={() => onClick(idx + min_value)}\n                    onMouseEnter={() => onMouseEnter(idx + min_value)}\n                    onMouseLeave={onMouseLeave}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nTickSteps.propTypes = {\n    hover_value : PropTypes.number,\n    max_value   : PropTypes.number,\n    min_value   : PropTypes.number,\n    onClick     : PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    value       : PropTypes.number,\n};\n\nexport default TickSteps;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport TickSteps    from './tick-steps.jsx';\n\nclass RangeSlider extends React.PureComponent {\n    state = {\n        hover_value: 0,\n    }\n\n    handleChange = (e) => {\n        // e.target.value returns string, we need to convert them to number\n        const value = +e.target.value;\n        if (value !== this.props.value) {\n            this.resetOnHover();\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    handleClick = (index) => {\n        if (index !== this.props.value) {\n            this.resetOnHover();\n            this.props.onChange({ target: { name: this.props.name, value: index } });\n        }\n    };\n\n    onMouseEnter = (index) => {\n        if (index) {\n            this.setState({ hover_value: index });\n            this.rangeSliderTrack.style.width = this.getRangeSliderTrackWidth(index, true);\n        }\n    };\n\n    onMouseLeave = (e) => {\n        const { offsetX, offsetY } = e.nativeEvent;\n        if (offsetY <= -3 || offsetY >= 3 || offsetX < -3 || offsetX > 3) {\n            this.resetOnHover();\n        }\n    };\n\n    getRangeSliderTrackWidth = (value, is_hover) => {\n        const width = (value - this.props.min_value) * (10 / (this.props.max_value - this.props.min_value));\n        return `${(width * 2) + (is_hover ? 0.8 : 1.4)}em`;\n    };\n\n    resetOnHover = () => {\n        if (this.state.hover_value) {\n            this.setState({ hover_value: 0 });\n            this.rangeSliderTrack.style.width = 0;\n        }\n    };\n\n    render() {\n        const {\n            className,\n            max_value,\n            min_value,\n            name,\n            value,\n        } = this.props;\n\n        const display_value = this.state.hover_value || value;\n        return (\n            <div className={classNames('range-slider', className, { 'range-slider__error': ((value < min_value) || (value > max_value)) })}>\n                <label className='range-slider__label' htmlFor='range'>\n                    <input\n                        className='input trade-container__input range-slider__track'\n                        id='range'\n                        max={max_value}\n                        max_value={max_value}\n                        min={min_value}\n                        min_value={min_value}\n                        name={name}\n                        onChange={this.handleChange}\n                        tabIndex='0'\n                        type='range'\n                        steps={max_value - min_value}\n                        value={value}\n                    />\n                    {/* this element to be placed before <TickSteps /> to prevent overlapping colors */}\n                    <span\n                        ref={node => this.rangeSliderTrack = node}\n                        className='range-slider__line range-slider__line--fill'\n                        onMouseLeave={this.onMouseLeave}\n                    />\n                    <div className='range-slider__ticks'>\n                        <TickSteps\n                            hover_value={this.state.hover_value}\n                            max_value={max_value}\n                            min_value={min_value}\n                            onClick={this.handleClick}\n                            onMouseLeave={this.onMouseLeave}\n                            onMouseEnter={this.onMouseEnter}\n                            value={value}\n                        />\n                    </div>\n                    {/* Calculate line width based on active value and size of range thumb */}\n                    <div\n                        className='range-slider__line'\n                        style={{ width: `${this.getRangeSliderTrackWidth(value)}` }}\n                    />\n                </label>\n                <div className='range-slider__caption'>\n                    {\n                        !!display_value &&\n                        <span className='range-slider__caption-title'>\n                            {display_value === 1 && localize('{{display_value}} Tick', { display_value })}\n                            {display_value > 1 && localize('{{display_value}} Ticks', { display_value })}\n                        </span>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nRangeSlider.propTypes = {\n    className: PropTypes.string,\n    max_value: PropTypes.number,\n    min_value: PropTypes.number,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.number,\n};\n\nexport default RangeSlider;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React, { Fragment } from 'react';\nimport Icon                from 'Assets/icon.jsx';\n\nconst DurationToggle = ({\n    name,\n    onChange,\n    value,\n}) => {\n    const toggle = () => {\n        onChange({ target: { value: !value, name } });\n    };\n    const icon_className = classNames(\n        'advanced-simple-toggle__icon',\n        'select-arrow',\n        { 'advanced-simple-toggle__icon--active': value },\n    );\n    return (\n        <Fragment>\n            <button className='advanced-simple-toggle' onClick={toggle}>\n                <Icon icon='IconArrow' className={icon_className} classNamePath={'advanced-simple-toggle__icon-path'} />\n            </button>\n        </Fragment>);\n};\n\nDurationToggle.propTypes = {\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.bool,\n};\n\nexport default DurationToggle;\n","\nimport { WS }               from 'Services';\nimport { getPropertyValue } from '_common/utility';\n\nconst trading_events = {};\nexport const getTradingEvents = async (date, underlying = null) => {\n    if (!date) {\n        return [];\n    }\n\n    if (!(date in trading_events)) {\n        const trading_times_response = await WS.getTradingTimes(date);\n\n        if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n            for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                if (submarkets) {\n                    for (let j = 0; j < submarkets.length; j++) {\n                        const symbols = submarkets[j].symbols;\n                        if (symbols) {\n                            for (let k = 0; k < symbols.length; k++) {\n                                const symbol = symbols[k];\n                                if (!trading_events[trading_times_response.echo_req.trading_times]) {\n                                    trading_events[trading_times_response.echo_req.trading_times] = {};\n                                }\n                                trading_events[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                    symbol.events;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return trading_events[date][underlying];\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    getStartOfMonth,\n    toMoment }        from 'Utils/Date';\nimport { localize }   from 'App/i18n';\nimport CalendarBody   from './calendar-body.jsx';\nimport CalendarFooter from './calendar-footer.jsx';\nimport CalendarHeader from './calendar-header.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date, value } = props;\n        const current_date = toMoment(value || start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: value,        // selected date\n            calendar_view: 'date',\n            hovered_date : '',\n            duration_date: '',\n        };\n    }\n\n    switchView = (view) => {\n        this.setState({ calendar_view: view });\n    };\n\n    navigateTo = (new_date) => {\n        this.setState({\n            calendar_date: toMoment(new_date).format(this.props.date_format),\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(new_date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    onMouseOver = (event) => {\n        const target = event.currentTarget;\n\n        if (!target.classList.contains('calendar__cell--disabled') && !target.classList.contains('calendar__cell--hover')) {\n            target.className += ' calendar__cell--hover';\n            this.setState({\n                hovered_date : target.getAttribute('data-date'),\n                duration_date: target.getAttribute('data-duration'),\n            });\n        }\n    };\n\n    onMouseLeave = (event) => {\n        const target = event.currentTarget;\n\n        if (target.classList.contains('calendar__cell--hover')) {\n            target.classList.remove('calendar__cell--hover');\n\n            this.setState({\n                hovered_date : null,\n                duration_date: null,\n            });\n        }\n    };\n\n    updateSelectedDate = (e) => {\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = toMoment(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(toMoment(min_date));\n        const is_after    = moment_date.isAfter(toMoment(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        if (e) e.stopPropagation();\n\n        if (type === 'day') {\n            this.updateSelectedDate(e);\n            return;\n        }\n\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = toMoment(this.state.calendar_date)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = toMoment(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = toMoment().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = toMoment(date).clone().startOf(unit);\n        const end_of_period   = toMoment(date).clone().endOf(unit);\n        return end_of_period.isBefore(toMoment(min_date))\n            || start_of_period.isAfter(toMoment(max_date));\n    };\n\n    render() {\n        const { date_format, duration_date, footer, has_today_btn, has_range_selection,\n            holidays, start_date, weekends } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n        let default_message, is_minimum;\n\n        if (duration_date) {\n            default_message = `${duration_date} ${duration_date === 1 ? localize('Day') : localize('Days')}`;\n            is_minimum = false;\n        } else {\n            default_message = localize('Minimum duration is 1 day');\n            is_minimum = true;\n        }\n        \n        return (\n            <div className='calendar' data-value={selected_date}>\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    navigateTo={this.navigateTo}\n                    switchView={this.switchView}\n                />\n                <CalendarBody\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    start_date={start_date}\n                    selected_date={selected_date}\n                    updateSelected={this.updateSelected}\n                    holidays={holidays}\n                    has_range_selection={has_range_selection}\n                    hovered_date={this.state.hovered_date}\n                    weekends={weekends}\n                    onMouseOver={this.onMouseOver}\n                    onMouseLeave={this.onMouseLeave}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    duration_date={this.state.duration_date || default_message}\n                    is_minimum={is_minimum}\n                    has_today_btn={has_today_btn}\n                    has_range_selection={has_range_selection}\n                    onClick={this.setToday}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : toMoment(0).format('YYYY-MM-DD'),               // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : toMoment().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    date_format  : PropTypes.string,\n    duration_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    max_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onChangeCalendarMonth: PropTypes.func,\n    onSelect             : PropTypes.func,\n    start_date           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value   : PropTypes.string,\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport default Calendar;\n","import classNames           from 'classnames';\nimport { observer }         from 'mobx-react';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport Icon                 from 'Assets/icon.jsx';\nimport InputField           from 'App/Components/Form/InputField';\nimport {\n    addDays,\n    daysFromTodayTo,\n    formatDate,\n    getStartOfMonth,\n    isDateValid,\n    toMoment }              from 'Utils/Date';\nimport { localize }         from 'App/i18n';\nimport { getTradingEvents } from './helpers';\nimport Calendar             from '../../Elements/Calendar';\n\nclass DatePicker extends React.Component {\n    state = {\n        date_value           : '',\n        holidays             : [],\n        is_datepicker_visible: false,\n        is_clear_btn_visible : false,\n        value                : this.props.value,\n        weekends             : [],\n    };\n\n    is_mounted = false;\n\n    componentDidMount() {\n        this.is_mounted = true;\n\n        document.addEventListener('click', this.onClickOutside, true);\n        const { mode, value } = this.props;\n        const initial_value = mode === 'duration' ? formatDate(addDays(toMoment(), value || 1), 'DD MMM YYYY') : formatDate(value, 'DD MMM YYYY');\n\n        this.updateDatePickerValue(initial_value);\n\n        if (this.props.disable_trading_events) {\n            this.onChangeCalendarMonth(getStartOfMonth(this.state.value));\n        }\n    }\n\n    componentWillUnmount() {\n        this.is_mounted = false;\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState(state => ({ is_datepicker_visible: !state.is_datepicker_visible }));\n    };\n\n    onClickOutside = (e) => {\n        if (/purchase_/ig.test(e.target.id)) {\n            return;\n        }\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value, 'DD MMM YYYY'));\n            }\n        }\n    };\n\n    onMouseEnter = () => {\n        if (this.state.value && (('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_clear_btn_visible: true });\n        }\n    };\n\n    onMouseLeave = () => {\n        this.setState({ is_clear_btn_visible: false });\n    };\n\n    onSelectCalendar = (selected_date, is_datepicker_visible = true) => {\n        let value = selected_date;\n        if (!isDateValid(value)) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(value);\n        } else {\n            this.updateDatePickerValue(formatDate(value, 'DD MMM YYYY'));\n        }\n        this.setState({ is_datepicker_visible });\n    };\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        const formatted_value = formatDate(addDays(toMoment(), value), 'DD MMM YYYY');\n        this.updateDatePickerValue(formatted_value);\n        this.props.onChange(e);\n    };\n\n    clearDatePickerInput = () => {\n        this.setState({ value: null }, this.updateStore);\n        if (this.calendar) {\n            this.calendar.resetCalendar();\n        }\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value) => {\n        const { date_format, mode, start_date } = this.props;\n        this.setState({ value }, this.updateStore);\n\n        if (mode === 'duration') {\n            const new_value      = daysFromTodayTo(value);\n            const new_date_value = formatDate(value, 'DD MMM YYYY');\n            this.setState({ value: new_value, date_value: new_date_value }, this.updateStore);\n        }\n\n        // update Calendar\n        const new_date = (mode === 'duration') ? formatDate(value, 'DD MMM YYYY') : value;\n        if (this.calendar && (isDateValid(new_date) || !new_date)) {\n            if (!new_date) {\n                const current_date = formatDate(start_date, date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    };\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    async onChangeCalendarMonth(calendar_date) {\n        const trading_events = await getTradingEvents(calendar_date, this.props.underlying);\n        const holidays = [];\n        let weekends   = [];\n        trading_events.forEach(events => {\n            const dates = events.dates.split(', '); // convert dates str into array\n            const idx = dates.indexOf('Fridays');\n            if (idx !== -1) {\n                weekends = [6, 0]; // Sat, Sun\n            }\n            holidays.push({\n                dates,\n                descrip: events.descrip,\n            });\n        });\n\n        if (this.is_mounted) {\n            this.setState({\n                holidays,\n                weekends,\n            });\n        }\n    }\n\n    renderInputField = () => {\n        const { is_read_only, mode, name, label, error_messages } = this.props;\n        let { placeholder } = this.props;\n        let value, type, onChange;\n\n        switch (mode) {\n            case 'duration':\n                onChange = this.onChangeInput;\n                type = 'text';\n                value = this.state.value;\n                break;\n            default:\n                placeholder = placeholder || localize('Select a date');\n                type = 'text';\n                value = formatDate(this.props.value, 'DD MMM YYYY');\n        }\n\n        return (\n            <InputField\n                className='datepicker__input-field'\n                classNameInput='datepicker__input trade-container__input'\n                data-tip={false}\n                data-value={this.state.value}\n                error_messages={error_messages}\n                is_autocomplete_disabled={true}\n                is_hj_whitelisted\n                label={label}\n                is_read_only={is_read_only}\n                name={name}\n                onChange={onChange}\n                onClick={this.handleVisibility}\n                placeholder={placeholder}\n                type={type}\n                value={value}\n            />\n        );\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='input trade-container__input datepicker__input'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker__native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <Icon icon='IconArrow' className='datepicker__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                id={this.props.id}\n                ref={node => { this.mainNode = node; }}\n                className='datepicker'\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n            >\n                { this.renderInputField() }\n                <Icon\n                    icon='IconCalendar'\n                    className={classNames('datepicker__icon datepicker__icon--calendar', {\n                        'datepicker__icon--is-hidden' : this.state.is_clear_btn_visible,\n                        'datepicker__icon--with-label': this.props.label,\n                    })}\n                    onClick={this.handleVisibility}\n                />\n                {this.props.is_clearable &&\n                    <Icon\n                        icon='IconClear'\n                        className={classNames('datepicker__icon datepicker__icon--clear', {\n                            'datepicker__icon--is-hidden': !this.state.is_clear_btn_visible,\n                        })}\n                        onClick={this.state.is_clear_btn_visible ? this.clearDatePickerInput : undefined}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_datepicker_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `datepicker__picker--enter datepicker__picker--${this.props.alignment}-enter`,\n                        enterDone: `datepicker__picker--enter-done datepicker__picker--${this.props.alignment}-enter-done`,\n                        exit     : `datepicker__picker--exit datepicker__picker--${this.props.alignment}-exit`,\n                    }}\n                    unmountOnExit\n                >\n                    <div\n                        className={classNames('datepicker__picker', {\n                            'datepicker__picker--left': this.props.alignment === 'left',\n                        })}\n                    >\n                        <Calendar\n                            ref={node => { this.calendar = node; }}\n                            onSelect={this.onSelectCalendar}\n                            onChangeCalendarMonth={this.props.disable_trading_events ?\n                                this.onChangeCalendarMonth.bind(this) : undefined}\n                            holidays={this.state.holidays}\n                            weekends={this.state.weekends}\n                            duration_date={this.state.value}\n                            date_format={this.props.date_format}\n                            has_today_btn={this.props.has_today_btn}\n                            has_range_selection={this.props.has_range_selection}\n                            footer={this.props.footer}\n                            max_date={this.props.max_date}\n                            min_date={this.props.min_date}\n                            start_date={this.props.start_date}\n                            value={this.props.mode === 'duration' ? this.state.date_value : this.props.value}\n                        />\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...Calendar.propTypes,\n    error_messages: PropTypes.array,\n    label         : PropTypes.string,\n};\n\nexport default observer(DatePicker);\n","import PropTypes                      from 'prop-types';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport React                          from 'react';\nimport DatePicker                     from 'App/Components/Form/DatePicker';\nimport { connect }                    from 'Stores/connect';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport {\n    isTimeValid,\n    setTime,\n    toMoment }                        from 'Utils/Date';\n\nconst TradingDatePicker = ({\n    duration_d,\n    duration_min_max,\n    duration_units_list,\n    expiry_date,\n    expiry_type,\n    is_24_hours_contract,\n    mode,\n    name,\n    onChange,\n    server_time,\n    start_time,\n    start_date,\n    symbol,\n    validation_errors,\n}) => {\n    let max_date_duration,\n        min_date_expiry,\n        has_today_btn,\n        is_read_only;\n    const has_intraday_unit = hasIntradayDurationUnit(duration_units_list);\n    const min_duration = has_intraday_unit ? toMoment(server_time).clone() : toMoment(server_time).clone().add(duration_min_max.daily.min, 'second');\n    const moment_contract_start_date_time =\n        setTime(toMoment(min_duration), (isTimeValid(start_time) ? start_time : server_time.format('HH:mm:ss')));\n\n    const max_daily_duration   = duration_min_max.daily ? duration_min_max.daily.max : 365 * 24 * 3600;\n    const is_duration_contract = expiry_type === 'duration';\n\n    if (is_24_hours_contract) {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(\n            start_date ? 24 * 3600 : (max_daily_duration), 'second');\n    } else {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(max_daily_duration, 'second');\n    }\n    if (is_duration_contract) {\n        if (has_intraday_unit) {\n            min_date_expiry.add(1, 'day');\n        }\n        has_today_btn = false;\n        is_read_only = false;\n    } else {\n        has_today_btn = true;\n        is_read_only = true;\n    }\n\n    const error_messages = is_duration_contract ? validation_errors.duration : validation_errors.expiry_date;\n    const date_value = is_duration_contract ? (duration_d || '').toString() : expiry_date;\n\n    return (\n        <DatePicker\n            alignment='left'\n            disable_year_selector\n            disable_trading_events\n            error_messages={error_messages || []}\n            has_today_btn={has_today_btn}\n            has_range_selection={mode === 'duration'}\n            is_nativepicker={false}\n            is_read_only={is_read_only}\n            label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n            mode={mode}\n            name={name}\n            onChange={onChange}\n            min_date={min_date_expiry}\n            max_date={max_date_duration}\n            start_date={start_date}\n            underlying={symbol}\n            value={date_value}\n        />\n    );\n};\n\nTradingDatePicker.propTypes = {\n    duration: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_type         : PropTypes.string,\n    is_24_hours_contract: PropTypes.bool,\n    mode                : PropTypes.string,\n    name                : PropTypes.string,\n    onChange            : PropTypes.func,\n    server_time         : PropTypes.object,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common, ui }) => ({\n        duration_min_max   : modules.trade.duration_min_max,\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_date        : modules.trade.expiry_date,\n        expiry_type        : modules.trade.expiry_type,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n        start_date         : modules.trade.start_date,\n        start_time         : modules.trade.start_time,\n        symbol             : modules.trade.symbol,\n        validation_errors  : modules.trade.validation_errors,\n        duration_d         : ui.duration_d,\n    })\n)(TradingDatePicker);\n","import PropTypes    from 'prop-types';\nimport classNames   from 'classnames';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport { toMoment } from 'Utils/Date';\n\nconst Dialog = ({\n    preClass,\n    selected_time,\n    end_time,\n    start_time,\n    onChange,\n    className,\n}) => {\n    const start_time_moment     = start_time\n        ? toMoment(start_time)\n        : toMoment();\n    const end_time_moment       = end_time\n        ? toMoment(end_time)\n        : toMoment().hour('23').minute('59').seconds('59').milliseconds('999');\n    const to_compare_moment     = toMoment();\n    const [ hour, minute ]      = selected_time.split(':');\n    const hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const selectOption = (type, current_value, prev_value, is_enabled = true) => {\n        if (is_enabled && prev_value) {\n            const [ prev_hour, prev_minute ] = prev_value.split(':');\n            if ((type === 'h' && current_value !== prev_hour) || (type === 'm' && current_value !== prev_minute)) {\n                onChange(`${type === 'h' ? current_value : prev_hour}:${type === 'm' ? current_value : prev_minute}`);\n            }\n        }\n    };\n\n    return (\n        <div className={classNames(`${preClass}__dialog`, `${className}`)}>\n            <div className={`${preClass}__selector`}>\n                <div className={`${preClass}__selector--hours`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Hour')}</strong></div>\n                    <div>\n                        {hours.map((h, key) => {\n                            to_compare_moment.hour(h);\n                            const start_time_reset_minute = start_time_moment.clone().minute(0);\n                            const is_hour_enabled = to_compare_moment.isBetween(\n                                start_time_reset_minute,\n                                end_time_moment);\n                            const is_minute_enabled = to_compare_moment.isBetween(\n                                start_time_moment,\n                                end_time_moment,\n                                'minute');\n                            // The minute number after which the last block/interval of `Minutes` selection will be disabled\n                            const last_interval_of_hour = 52;\n                            const is_enabled = to_compare_moment.minutes() > last_interval_of_hour\n                                ? is_hour_enabled && is_minute_enabled\n                                : is_hour_enabled;\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (hour === h) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('h', h, selected_time, is_enabled); }}\n                                >\n                                    {h}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                <div className={`${preClass}__selector--minutes`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Minute')}</strong></div>\n                    <div>\n                        {minutes.map((mm, key) => {\n                            to_compare_moment.hour(hour).minute(mm);\n                            const is_enabled = to_compare_moment.isBetween(start_time_moment, end_time_moment, 'minute');\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (minute === mm) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('m', mm, selected_time, is_enabled); }}\n                                >\n                                    {mm}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDialog.propTypes = {\n    className: PropTypes.string,\n    end_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    onChange     : PropTypes.func,\n    preClass     : PropTypes.string,\n    selected_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    start_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default Dialog;\n","import classNames        from 'classnames';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport Icon              from 'Assets/icon.jsx';\nimport Dialog            from './dialog.jsx';\nimport InputField        from '../InputField';\n\nclass TimePicker extends React.Component {\n    state = { is_open: false };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState((state) => ({ is_open: !state.is_open }));\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.selected_time : arg;\n\n        if (value !== this.props.selected_time) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            selected_time,\n            name,\n            is_nativepicker,\n            placeholder,\n            end_time,\n            start_time,\n            validation_errors,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={classNames(prefix_class,\n                    { [`${prefix_class}--padding`]: this.props.padding })}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={selected_time}\n                            onChange={this.handleChange}\n                            name={name}\n                            min={start_time}\n                            max={end_time}\n                        />\n                        : (\n                            <React.Fragment>\n                                <InputField\n                                    error_messages={validation_errors}\n                                    type='text'\n                                    is_hj_whitelisted\n                                    is_read_only\n                                    id={`${prefix_class}-input`}\n                                    className={classNames(`${prefix_class}-input`)}\n                                    value={`${selected_time} GMT`}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <Icon icon='IconClock' className={`${prefix_class}__icon`} />\n                                <CSSTransition\n                                    in={ this.state.is_open }\n                                    classNames={{\n                                        enter    : 'time-picker__dialog--enter',\n                                        enterDone: 'time-picker__dialog--enter-done',\n                                        exit     : 'time-picker__dialog--exit',\n                                    }}\n                                    timeout={100}\n                                    unmountOnExit\n                                >\n                                    <Dialog\n                                        end_time={end_time}\n                                        start_time={start_time}\n                                        className={'from-left'}\n                                        onChange={this.handleChange}\n                                        preClass={prefix_class}\n                                        selected_time={selected_time}\n                                    />\n                                </CSSTransition>\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    selected_time  : PropTypes.string,\n    start_time     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default observer(TimePicker);\n","const getClosestTime = (\n    time,\n    interval,\n) => time.minute((Math.ceil(time.minute() / interval) * interval));\n\nexport const getSelectedTime = (\n    server_time,\n    selected_time,\n    market_open_time,\n) => {\n    if (selected_time.isAfter(market_open_time)) {\n        return getClosestTime(selected_time, 5).format('HH:mm');\n    }\n    if (market_open_time.isAfter(server_time)) {\n        return getClosestTime(market_open_time, 5).format('HH:mm');\n    }\n\n    return getClosestTime(server_time, 5).format('HH:mm');\n};\n\nexport const getBoundaries = (\n    server_time,\n    market_open_time,\n    market_close_time,\n) => {\n    const boundaries = {\n        start: server_time.isBefore(market_open_time)\n            ? market_open_time\n            : server_time,\n        end: market_close_time,\n    };\n\n    boundaries.start = getClosestTime(boundaries.start, 5);\n    return boundaries;\n};\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport {\n    setTime,\n    toMoment }     from 'Utils/Date';\nimport TimePicker  from 'App/Components/Form/TimePicker';\nimport {\n    getSelectedTime,\n    getBoundaries } from 'Stores/Modules/Trading/Helpers/end-time';\n\nconst TradingTimePicker = ({\n    expiry_date,\n    expiry_time,\n    market_close_times,\n    market_open_times,\n    onChange,\n    server_time,\n}) => {\n    const moment_expiry_date = toMoment(expiry_date);\n    const market_open_datetime = setTime(moment_expiry_date.clone(), market_open_times.slice(-1)[0]);\n    const market_close_datetime = setTime(moment_expiry_date.clone(), market_close_times.slice(-1)[0]);\n    const expiry_datetime = setTime(moment_expiry_date.clone(), expiry_time);\n    const server_datetime = toMoment(server_time);\n\n    const boundaries = getBoundaries(\n        server_datetime.clone(),\n        market_open_datetime.clone(),\n        market_close_datetime);\n    const selected_time = getSelectedTime(\n        server_datetime.clone(),\n        expiry_datetime,\n        market_open_datetime);\n    return (\n        <TimePicker\n            end_time={boundaries.end}\n            onChange={onChange}\n            name='expiry_time'\n            placeholder='12:00'\n            start_time={boundaries.start}\n            selected_time={selected_time}\n        />\n    );\n};\n\nTradingTimePicker.propTypes = {\n    expiry_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time       : PropTypes.string,\n    market_close_times: PropTypes.array,\n    name              : PropTypes.string,\n    onChange          : PropTypes.func,\n    server_time       : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_time        : modules.trade.expiry_time,\n        expiry_date        : modules.trade.expiry_date,\n        market_close_times : modules.trade.market_close_times,\n        market_open_times  : modules.trade.market_open_times,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n    })\n)(TradingTimePicker);\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport Dropdown                       from 'App/Components/Form/DropDown';\nimport ButtonToggleMenu               from 'App/Components/Form/ButtonToggleMenu';\nimport InputField                     from 'App/Components/Form/InputField';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { connect }                    from 'Stores/connect';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport TradingDatePicker              from '../../DatePicker';\nimport TradingTimePicker              from '../../TimePicker';\n\nconst AdvancedDuration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    duration_units_list,\n    duration_t,\n    changeDurationUnit,\n    getDurationFromUnit,\n    expiry_date,\n    expiry_list,\n    expiry_type,\n    number_input_props,\n    onChange,\n    onChangeUiStore,\n    server_time,\n    shared_input_props,\n    start_date,\n    validation_errors,\n}) => {\n    let is_24_hours_contract = false;\n\n    if (expiry_type === 'endtime') {\n        const has_intraday_duration_unit = hasIntradayDurationUnit(duration_units_list);\n        is_24_hours_contract = (!!start_date || toMoment(expiry_date || server_time).isSame(toMoment(server_time), 'day')) && has_intraday_duration_unit;\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_24_hours_contract,\n    });\n\n    const changeExpiry = ({ target }) => {\n        const { name, value } = target;\n\n        onChange({ target: { name: 'expiry_type', value } });\n        onChangeUiStore({ name, value });\n    };\n\n    return (\n        <Fragment>\n            { expiry_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={expiry_list}\n                    name='advanced_expiry_type'\n                    is_animated={true}\n                    onChange={changeExpiry}\n                    value={advanced_expiry_type}\n                />\n            }\n            { expiry_type === 'duration' ?\n                <Fragment>\n                    <div className='duration-container'>\n                        { duration_units_list.length > 1 &&\n                            <Dropdown\n                                is_alignment_left\n                                is_nativepicker={false}\n                                list={duration_units_list}\n                                name='advanced_duration_unit'\n                                onChange={changeDurationUnit}\n                                value={advanced_duration_unit}\n                            />\n                        }\n                        { advanced_duration_unit === 't' &&\n                            <RangeSlider\n                                name='duration'\n                                ticks={10}\n                                value={duration_t}\n                                {...shared_input_props}\n                            />\n                        }\n                        { advanced_duration_unit === 'd' &&\n                            <TradingDatePicker\n                                mode='duration'\n                                name='duration'\n                                is_24_hours_contract={is_24_hours_contract}\n                            />\n                        }\n                        { (advanced_duration_unit !== 't' && advanced_duration_unit !== 'd') &&\n                            <InputField\n                                classNameInput='trade-container__input'\n                                error_messages={validation_errors.duration}\n                                label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n                                name='duration'\n                                value={getDurationFromUnit(advanced_duration_unit)}\n                                {...number_input_props}\n                                {...shared_input_props}\n                            />\n                        }\n                    </div>\n                </Fragment> :\n                <Fragment>\n                    <div className={endtime_container_class}>\n                        <TradingDatePicker\n                            name='expiry_date'\n                            is_24_hours_contract={is_24_hours_contract}\n                        />\n                        {is_24_hours_contract &&\n                            <TradingTimePicker />\n                            // validation_errors={validation_errors.end_time} TODO: add validation_errors for end time\n                        }\n                    </div>\n                </Fragment>\n            }\n        </Fragment>\n    );\n};\n\nAdvancedDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    changeDurationUnit    : PropTypes.func,\n    duration_t            : PropTypes.number,\n    duration_units_list   : MobxPropTypes.arrayOrObservableArray,\n    expiry_date           : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_list        : PropTypes.array,\n    expiry_type        : PropTypes.string,\n    getDurationFromUnit: PropTypes.func,\n    number_input_props : PropTypes.object,\n    onChange           : PropTypes.func,\n    onChangeUiStore    : PropTypes.func,\n    server_time        : PropTypes.object,\n    shared_input_props : PropTypes.object,\n    start_date         : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        validation_errors: modules.trade.validation_errors,\n    })\n)(AdvancedDuration);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport ButtonToggleMenu               from 'App/Components/Form/ButtonToggleMenu';\nimport InputField                     from 'App/Components/Form/InputField';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { connect }                    from 'Stores/connect';\nimport TradingDatePicker              from '../../DatePicker';\n\nconst SimpleDuration = ({\n    changeDurationUnit,\n    duration_t,\n    duration_units_list,\n    getDurationFromUnit,\n    number_input_props,\n    shared_input_props,\n    simple_duration_unit,\n    validation_errors,\n}) => {\n    const filterMinutesAndTicks = (arr) => {\n        const filtered_arr = arr.filter(du => du.value === 't' || du.value === 'm');\n        if (filtered_arr.length <= 1) return [];\n\n        return filtered_arr;\n    };\n    const has_label = !duration_units_list.some(du => du.value === 't');\n\n    return (\n        <Fragment>\n            { duration_units_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={filterMinutesAndTicks(duration_units_list)}\n                    is_animated={true}\n                    name='simple_duration_unit'\n                    onChange={changeDurationUnit}\n                    value={simple_duration_unit}\n                />\n            }\n            { simple_duration_unit === 't' &&\n                <RangeSlider\n                    name='duration'\n                    value={duration_t}\n                    ticks={10}\n                    {...shared_input_props}\n                />\n            }\n            { simple_duration_unit === 'd' &&\n                <TradingDatePicker\n                    alignment='left'\n                    mode='duration'\n                    name='duration'\n                />\n            }\n            { (simple_duration_unit !== 't' && simple_duration_unit !== 'd') &&\n                <InputField\n                    classNameInput='trade-container__input'\n                    error_messages={validation_errors.duration}\n                    name='duration'\n                    label={has_label ? duration_units_list[0].text : null}\n                    value={getDurationFromUnit(simple_duration_unit)}\n                    {...number_input_props}\n                    {...shared_input_props}\n                />\n            }\n        </Fragment>\n    );\n};\n\nSimpleDuration.propTypes = {\n    changeDurationUnit  : PropTypes.func,\n    duration_t          : PropTypes.number,\n    duration_units_list : MobxPropTypes.arrayOrObservableArray,\n    getDurationFromUnit : PropTypes.func,\n    number_input_props  : PropTypes.object,\n    shared_input_props  : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n    validation_errors   : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        validation_errors: modules.trade.validation_errors,\n    })\n)(SimpleDuration);\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport { localize }                   from 'App/i18n';\nimport Fieldset                       from 'App/Components/Form/fieldset.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { toMoment }                   from 'Utils/Date';\nimport DurationToggle                 from './duration-toggle.jsx';\nimport AdvancedDuration               from './advanced-duration.jsx';\nimport SimpleDuration                 from './simple-duration.jsx';\n\nconst Duration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_t,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    getDurationFromUnit,\n    hasDurationUnit,\n    is_advanced_duration,\n    is_minimized,\n    min_value,\n    max_value,\n    onChange,\n    onChangeUiStore,\n    onChangeMultiple,\n    simple_duration_unit,\n    server_time,\n    start_date,\n    market_open_times,\n}) => {\n    const expiry_list = [\n        { text: localize('Duration'), value: 'duration' },\n    ];\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End time'), value: 'endtime' });\n    }\n\n    if (is_minimized) {\n        const moment_expiry = toMoment(expiry_date);\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized fieldset-minimized__duration'>\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n\n    const changeDurationUnit = ({ target }) => {\n        const { name, value } = target;\n        const duration_value  = getDurationFromUnit(value);\n\n        onChangeUiStore({ name, value });\n        onChangeMultiple({\n            duration_unit: value,\n            duration     : duration_value,\n        });\n    };\n\n    const changeDurationValue = ({ target }) => {\n        const { name, value } = target;\n        const duration_name   = `duration_${is_advanced_duration ? advanced_duration_unit : simple_duration_unit}`;\n\n        // e.target.value returns string, we need to convert them to number\n        onChangeUiStore({ name: duration_name, value: +value });\n        onChange({ target: { name, value: +value } });\n    };\n\n    const onToggleDurationType = ({ target }) => {\n        const { name, value } = target;\n        onChangeUiStore({ name, value });\n\n        // replace selected duration unit and duration if the contract doesn't have that duration unit\n        let current_duration_unit = value ? advanced_duration_unit : simple_duration_unit;\n        if (!hasDurationUnit(current_duration_unit)) {\n            current_duration_unit = duration_units_list[0].value;\n            onChangeUiStore({ name: `${value ? 'advanced' : 'simple'}_duration_unit`, value: current_duration_unit });\n        }\n\n        const duration_value         = getDurationFromUnit(current_duration_unit);\n        const new_trade_store_values = {\n            duration_unit: current_duration_unit,\n            duration     : duration_value,\n        };\n\n        // simple only has expiry type of duration\n        if (!value && expiry_type !== 'duration') {\n            new_trade_store_values.expiry_type = 'duration';\n        }\n\n        if (value && expiry_type !== advanced_expiry_type) {\n            new_trade_store_values.expiry_type = advanced_expiry_type;\n        }\n\n        onChangeMultiple({ ...new_trade_store_values });\n    };\n\n    const props = {\n        shared_input: {\n            is_hj_whitelisted: true,\n            onChange         : changeDurationValue,\n            max_value,\n            min_value,\n        },\n        number_input: {\n            type            : 'number',\n            is_incrementable: true,\n        },\n    };\n\n    // e.g. digit contracts only has range slider - does not have toggle between advanced / simple\n    const has_toggle = expiry_list.length > 1 || duration_units_list.length > 1;\n\n    return (\n        <Fieldset className={classNames('trade-container__fieldset', {\n            'trade-container__fieldset--advanced': is_advanced_duration,\n        })}\n        >\n            { !has_toggle &&\n                <RangeSlider\n                    name='duration'\n                    value={duration_t}\n                    {...props.shared_input}\n                />\n            }\n            { has_toggle &&\n                <Fragment>\n                    { is_advanced_duration &&\n                        <AdvancedDuration\n                            advanced_expiry_type={advanced_expiry_type}\n                            advanced_duration_unit={advanced_duration_unit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            expiry_date={expiry_date}\n                            expiry_list={expiry_list}\n                            expiry_type={expiry_type}\n                            getDurationFromUnit={getDurationFromUnit}\n                            market_open_times={market_open_times}\n                            number_input_props={props.number_input}\n                            onChange={onChange}\n                            onChangeUiStore={onChangeUiStore}\n                            server_time={server_time}\n                            shared_input_props={props.shared_input}\n                            start_date={start_date}\n                        /> }\n                    { !is_advanced_duration &&\n                        <SimpleDuration\n                            getDurationFromUnit={getDurationFromUnit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            number_input_props={props.number_input}\n                            shared_input_props={props.shared_input}\n                            simple_duration_unit={simple_duration_unit}\n                        /> }\n                    <DurationToggle\n                        name={'is_advanced_duration'}\n                        onChange={onToggleDurationType}\n                        value={is_advanced_duration}\n                    />\n                </Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    duration              : PropTypes.number,\n    duration_t            : PropTypes.number,\n    duration_unit         : PropTypes.string,\n    duration_units_list   : MobxPropTypes.arrayOrObservableArray,\n    expiry_date           : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    hasDurationUnit     : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    max_value           : PropTypes.number,\n    min_value           : PropTypes.number,\n    onChange            : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    validation_errors: PropTypes.object,\n};\n\nexport default Duration;\n","import PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport { connect }                    from 'Stores/connect';\nimport { convertDurationLimit }       from 'Stores/Modules/Trading/Helpers/duration';\nimport Duration                       from './duration.jsx';\n\nclass DurationWrapper extends React.Component {\n    hasDurationUnit = (duration_unit) => {\n        let duration_list = [...this.props.duration_units_list];\n\n        if (this.props.duration_units_list.length > 1 && !this.props.is_advanced_duration) {\n            duration_list = duration_list.filter(du => du.value === 'm' || du.value === 't');\n        }\n        return duration_list.some(du => du.value === duration_unit);\n    };\n\n    setDurationUnit() {\n        const new_duration_unit  = this.props.duration_units_list[0].value;\n        const new_duration_value = this.props.getDurationFromUnit(new_duration_unit);\n\n        this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: new_duration_unit });\n        this.props.onChangeMultiple({\n            duration_unit: new_duration_unit,\n            duration     : +new_duration_value,\n        });\n    }\n\n    advancedHasWrongExpiry = () => (this.props.is_advanced_duration\n        && this.props.expiry_type !== this.props.advanced_expiry_type);\n\n    handleEndTime = () => {\n        const symbol_has_endtime = this.props.duration_units_list.length > 1  || this.props.is_advanced_duration;\n\n        if (symbol_has_endtime) {\n            // simple duration does not have endtime\n            if (!this.props.is_advanced_duration) this.props.onChangeUiStore({ name: 'is_advanced_duration', value: true });\n\n            this.props.onChangeUiStore({ name: 'advanced_expiry_type', value: 'endtime' });\n        } else {\n            // If query string contains endtime but contract type does not e.g. digits (only ticks contracts)\n            this.props.onChange({ target: { name: 'expiry_type', value: 'duration' } });\n        }\n    };\n\n    getDurationMinMaxValues = (duration_min_max, contract_expiry_type, duration_unit) => {\n        const max_value = convertDurationLimit(+duration_min_max[contract_expiry_type].max, duration_unit);\n        const min_value = convertDurationLimit(+duration_min_max[contract_expiry_type].min, duration_unit);\n\n        return [min_value, max_value];\n    };\n\n    componentDidMount() {\n        const {\n            advanced_duration_unit,\n            advanced_expiry_type,\n            contract_expiry_type,\n            duration,\n            duration_min_max,\n            duration_unit,\n            expiry_type,\n            getDurationFromUnit,\n            is_advanced_duration,\n            onChange,\n            onChangeUiStore,\n            simple_duration_unit,\n        } = this.props;\n\n        const current_unit = is_advanced_duration ? advanced_duration_unit : simple_duration_unit;\n        const current_duration = getDurationFromUnit(current_unit);\n        const [min_value, max_value] =\n            this.getDurationMinMaxValues(duration_min_max, contract_expiry_type, duration_unit);\n\n        if (duration_unit !== current_unit) {\n            onChangeUiStore({ name: `${is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: duration_unit });\n        }\n\n        if (+duration !== +current_duration) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: duration });\n        }\n\n        if (expiry_type === 'endtime') this.handleEndTime();\n\n        if (this.advancedHasWrongExpiry()) {\n            onChange({ target: { name: 'expiry_type', value: advanced_expiry_type } });\n        }\n\n        if (current_duration < min_value) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: min_value });\n            onChange({ target: { name: 'duration', value: min_value } });\n        } else if (current_duration > max_value) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: max_value });\n            onChange({ target: { name: 'duration', value: max_value } });\n        }\n    }\n\n    // intercept changes to contract duration and check that trade_store and ui_store are aligned.\n    componentWillReact() {\n        const {\n            advanced_expiry_type,\n            duration,\n            duration_unit,\n            expiry_type,\n            getDurationFromUnit,\n            is_advanced_duration,\n            onChange,\n            onChangeUiStore,\n        } = this.props;\n\n        const current_duration            = getDurationFromUnit(duration_unit);\n        const simple_is_not_type_duration = (!is_advanced_duration && expiry_type !== 'duration');\n\n        // simple only has expiry type duration\n        if (simple_is_not_type_duration) {\n            onChange({ target: { name: 'expiry_type', value: 'duration' } });\n        }\n\n        if (this.advancedHasWrongExpiry()) {\n            onChange({ target: { name: 'expiry_type', value: advanced_expiry_type } });\n        }\n\n        if (duration !== current_duration) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: duration });\n        }\n    }\n\n    render() {\n        const {\n            advanced_duration_unit,\n            contract_expiry_type,\n            duration_min_max,\n            duration_unit,\n            duration_units_list,\n            is_advanced_duration,\n            simple_duration_unit,\n        } = this.props;\n\n        const current_duration_unit           = (is_advanced_duration ? advanced_duration_unit : simple_duration_unit);\n        const has_missing_duration_unit       = !this.hasDurationUnit(current_duration_unit);\n        const simple_is_missing_duration_unit =\n            (!is_advanced_duration && simple_duration_unit === 'd' && duration_units_list.length === 4);\n        const [min_value, max_value]          =\n            this.getDurationMinMaxValues(duration_min_max, contract_expiry_type, duration_unit);\n\n        if (has_missing_duration_unit || simple_is_missing_duration_unit) {\n            this.setDurationUnit();\n        }\n\n        return (\n            <Duration\n                hasDurationUnit={this.hasDurationUnit}\n                max_value={max_value}\n                min_value={min_value}\n                {...this.props}\n            />\n        );\n    }\n}\n\nDurationWrapper.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.number,\n    duration_d            : PropTypes.number,\n    duration_h            : PropTypes.number,\n    duration_m            : PropTypes.number,\n    duration_min_max      : PropTypes.object,\n    duration_s            : PropTypes.number,\n    duration_t            : PropTypes.number,\n    duration_unit         : PropTypes.string,\n    duration_units_list   : MobxPropTypes.arrayOrObservableArray,\n    expiry_date           : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    onChange            : PropTypes.func,\n    onChangeMultiple    : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    sessions            : MobxPropTypes.arrayOrObservableArray,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time: PropTypes.string,\n    symbol    : PropTypes.string,\n};\n\nexport default connect(({ modules, ui }) => ({\n    advanced_duration_unit: ui.advanced_duration_unit,\n    advanced_expiry_type  : ui.advanced_expiry_type,\n    contract_expiry_type  : modules.trade.contract_expiry_type,\n    duration              : modules.trade.duration,\n    duration_unit         : modules.trade.duration_unit,\n    duration_units_list   : modules.trade.duration_units_list,\n    duration_min_max      : modules.trade.duration_min_max,\n    duration_t            : ui.duration_t,\n    expiry_date           : modules.trade.expiry_date,\n    expiry_time           : modules.trade.expiry_time,\n    expiry_type           : modules.trade.expiry_type,\n    getDurationFromUnit   : ui.getDurationFromUnit,\n    is_advanced_duration  : ui.is_advanced_duration,\n    onChange              : modules.trade.onChange,\n    onChangeUiStore       : ui.onChangeUiStore,\n    onChangeMultiple      : modules.trade.onChangeMultiple,\n    simple_duration_unit  : ui.simple_duration_unit,\n    start_date            : modules.trade.start_date,\n    market_open_times     : modules.trade.market_open_times,\n}))(DurationWrapper);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n}) => {\n    const handleSelect = (item) => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) =>\n                <div className='number-selector__row' key={idx}>\n                    {arr_numbers.map(i =>\n                        <span\n                            key={i}\n                            className={classNames('number-selector__selection', { 'number-selector__selection--selected': selected_number === i })}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {i}\n                        </span>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    selected_number: PropTypes.number,\n};\n\nexport default NumberSelector;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from 'App/i18n';\nimport NumberSelector from 'App/Components/Form/number-selector.jsx';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\nimport { connect }    from 'Stores/connect';\n\nconst LastDigit = ({\n    is_minimized,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            className='trade-container__fieldset'\n            header={localize('Last Digit Prediction')}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default connect(({ modules }) => ({\n    last_digit: modules.trade.last_digit,\n    onChange  : modules.trade.onChange,\n}))(LastDigit);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport Amount                         from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier                        from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration                       from 'Modules/Trading/Components/Form/TradeParams/Duration';\nimport LastDigit                      from 'Modules/Trading/Components/Form/TradeParams/last-digit.jsx';\nimport { connect }                    from 'Stores/connect';\n\nclass TradeParams extends React.Component {\n    isVisible(component_key) {\n        return this.props.form_components.includes(component_key);\n    }\n\n    render () {\n        const { is_minimized } = this.props;\n        return (\n            <React.Fragment>\n                {\n                    this.isVisible('duration') &&\n                    <Duration key={'duration'} is_minimized={is_minimized} />\n                }\n                {\n                    this.isVisible('barrier') &&\n                    <Barrier key={'barrier'} is_minimized={is_minimized} />\n                }\n                {\n                    this.isVisible('last_digit') &&\n                    <LastDigit key={'last_digit'} is_minimized={is_minimized} />\n                }\n                {\n                    this.isVisible('amount') &&\n                    <Amount key={'amount'} is_minimized={is_minimized} />\n                }\n            </React.Fragment>\n        );\n    }\n}\nTradeParams.propTypes = {\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n};\n\nexport default connect(({ modules }) => ({\n    form_components: modules.trade.form_components,\n}))(TradeParams);\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='contract-type-widget__select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames={{\n                enter    : 'contracts-type-dialog--enter',\n                enterDone: 'contracts-type-dialog--enterDone',\n                exit     : 'contracts-type-dialog--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='contracts-type-dialog'>\n                <div className='contracts-type-dialog__list-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport classNames                     from 'classnames';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport Icon                           from 'Assets/icon.jsx';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    is_equal,\n    handleInfoClick,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        <div\n            key={idx}\n            className={classNames('contract-type-item', {\n                'contract-type-item--selected' : value === contract.value,\n                'contract-type-item--invisible': (contract.value === 'rise_fall' && is_equal) || (contract.value === 'rise_fall_equal' && !is_equal),\n            })}\n            name={name}\n            value={contract.value}\n            onClick={(e) => handleSelect(contract, e)}\n        >\n            <Icon icon='IconTradeCategory' category={contract.value} className='contract-type-item__icon-wrapper' />\n            <span className='contract-type-item__title'>\n                {contract.text}\n            </span>\n            <div id='info-icon' className='contract-type-item__icon' onClick={() => handleInfoClick(contract)}>\n                <Icon icon='IconInfoOutline' />\n            </div>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts      : MobxPropTypes.arrayOrObservableArray,\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    is_equal       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    name : PropTypes.string,\n    value: PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract-type-item.jsx';\n\nconst ContractTypeList = ({\n    handleInfoClick,\n    handleSelect,\n    is_equal,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            // TODO: Remove this line after other contracts are ready to be served\n            !['In/Out', 'Asians'].includes(key) &&\n            <React.Fragment key={key}>\n                <div className='contract-type-list'>\n                    <div className='contract-type-list__label'><span>{key}</span></div>\n                    <div className='contract-type-list__contracts-wrapper'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                            handleInfoClick={handleInfoClick}\n                            is_equal={is_equal}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    is_equal       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    list : MobxPropTypes.objectOrObservableObject,\n    name : PropTypes.string,\n    value: PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst TradeTypeInfoDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n    title,\n}) => (\n    is_mobile ?\n        <FullScreenDialog\n            visible={open}\n            onClose={onClose}\n            title={title}\n            wrapperClassName='trade-type-info-modal'\n        >\n            {children}\n        </FullScreenDialog>\n        :\n        <CSSTransition\n            classNames={{\n                enter    : 'trade-type-info-dialog--enter',\n                enterDone: 'trade-type-info-dialog--enterDone',\n                exit     : 'trade-type-info-dialog--exit',\n            }}\n            in={open}\n            timeout={100}\n            unmountOnExit\n        >\n            <div className='trade-type-info-dialog'>\n                <div className='trade-type-info-dialog__info-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nTradeTypeInfoDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n    title    : PropTypes.string,\n};\n\nexport default TradeTypeInfoDialog;\n","import classNames         from 'classnames';\nimport PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { Scrollbars }     from 'tt-react-custom-scrollbars';\nimport Icon               from 'Assets/icon.jsx';\nimport Button             from 'App/Components/Form/button.jsx';\nimport { localize }       from 'App/i18n';\n\nconst TradeTypeInfoItem = ({\n    handleNavigationClick,\n    handleNextClick,\n    handlePrevClick,\n    is_dark_theme,\n    is_mobile,\n    item,\n    item_index,\n    itemList,\n    onBackButtonClick,\n    onSubmitButtonClick,\n}) => (\n    <React.Fragment>\n        {!is_mobile &&\n        <div className='trade-type-info-dialog__header'>\n            <span onClick={() => onBackButtonClick()}>\n                <Icon icon='IconBack' />\n            </span>\n            <span className='title'>{item.text}</span>\n        </div>\n        }\n        <div className='trade-type-info-dialog__body'>\n            <div\n                className='trade-type-info-dialog__card-wrapper'\n                // total calculated below is from 258px and 16px horizontal margin set in trade-info-dialog css\n                style={{ 'transform': `translate3d(-${(274 * item_index)}px, 0, 0)`  }}\n            >\n                {\n                    itemList.map((type, idx) => (\n                        <div className='trade-type-info-dialog__card' key={idx}>\n                            <div className='trade-type-info-dialog__gif'>\n                                <Icon\n                                    icon='TradeCategoriesGIF'\n                                    category={type.value}\n                                    className='trade-type-info-dialog__gif-image'\n                                    is_dark_theme={is_dark_theme}\n                                />\n                            </div>\n                            <div className='trade-type-info-dialog__content'>\n                                <Scrollbars\n                                    autoHide\n                                    style={{ height: '100%' }}\n                                >\n                                    <Icon icon='TradeCategories' category={type.value} />\n                                </Scrollbars>\n                            </div>\n                            <div>\n                                <Button\n                                    className='btn--primary--orange trade-type-info-dialog__choose-button'\n                                    onClick={() => onSubmitButtonClick(type)}\n                                    text={localize('Choose')}\n                                />\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n        <div className='trade-type-info-navigation'>\n            <div className='trade-type-info-navigation__icon' onClick={() => handlePrevClick(itemList)} >\n                <Icon icon='IconChevronLeft' />\n            </div>\n            <div className='trade-type-info-navigation__list'>\n                <i\n                    className={classNames(\n                        'trade-type-info-navigation__circle-button',\n                        'trade-type-info-navigation__circle-button--active')}\n                    style={{ 'transform': `translate3d(${16 * item_index}px, 0, 0)` }}\n                />\n                {\n                    itemList.map((contract, idx) => (\n                        <React.Fragment key={idx}>\n                            <div\n                                className='trade-type-info-navigation__circle-button'\n                                onClick={() => handleNavigationClick(contract)}\n                            />\n                        </React.Fragment>\n                    ))\n                }\n            </div>\n            <div className='trade-type-info-navigation__icon' onClick={() => handleNextClick(itemList)} >\n                <Icon icon='IconChevronRight' />\n            </div>\n        </div>\n    </React.Fragment>\n);\n\nTradeTypeInfoItem.propTypes = {\n    handleNavigationClick: PropTypes.func,\n    handleNextClick      : PropTypes.func,\n    handlePrevClick      : PropTypes.func,\n    is_dark_theme        : PropTypes.bool,\n    is_mobile            : PropTypes.bool,\n    item                 : PropTypes.object,\n    item_index           : PropTypes.number,\n    itemList             : PropTypes.array,\n    onBackButtonClick    : PropTypes.func,\n    onSubmitButtonClick  : PropTypes.func,\n};\n\nexport default TradeTypeInfoItem;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport Icon                from 'Assets/icon.jsx';\nimport ContractTypeDialog  from './contract-type-dialog.jsx';\nimport ContractTypeList    from './contract-type-list.jsx';\nimport TradeTypeInfoDialog from '../TradeTypeInfo/trade-type-info-dialog.jsx';\nimport TradeTypeInfoItem   from '../TradeTypeInfo/trade-type-info-item.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    state = {\n        is_dialog_open     : false,\n        is_info_dialog_open: false,\n        item               : {},\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item, e) => {\n        if (item.value !== this.props.value && e.target.id !== 'info-icon') {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    onSubmitButtonClick = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleInfoVisibility();\n    };\n\n    handleInfoClick = (item) => {\n        this.setState({ item });\n        this.handleInfoVisibility();\n        this.handleVisibility();\n    };\n\n    handleNavigationClick = (item) => {\n        this.setState({ item });\n    };\n\n    handleNextClick = (itemList) => {\n        const navigationLength = itemList.length;\n        const item = this.state.item;\n        const currentIndex = itemList.findIndex((list_item) => list_item.value === item.value);\n        const nextIndex = currentIndex + 1;\n        if (nextIndex < navigationLength) {\n            this.handleNavigationClick(itemList[nextIndex]);\n        } else {\n            this.handleNavigationClick(itemList[0]);\n        }\n    };\n\n    handlePrevClick = (itemList) => {\n        const navigationLength = itemList.length;\n        const item = this.state.item;\n        const currentIndex = itemList.findIndex((list_item) => list_item.value === item.value);\n        const prevIndex = currentIndex - 1;\n        if (prevIndex > -1) {\n            this.handleNavigationClick(itemList[prevIndex]);\n        } else {\n            this.handleNavigationClick(itemList[navigationLength - 1]);\n        }\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        } else if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_info_dialog_open) {\n            this.setState({\n                is_dialog_open     : false,\n                is_info_dialog_open: false,\n            });\n        }\n    };\n\n    handleInfoVisibility = () => {\n        this.setState((state) => ({\n            is_info_dialog_open: !state.is_info_dialog_open,\n        }));\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    onWidgetClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    onBackButtonClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getItemIndex = (curr_item, itemList) => itemList.findIndex((list_item) => list_item.value === curr_item.value);\n\n    getItemList = () => {\n        const itemList = [];\n        const list = this.props.list;\n        /* eslint-disable */\n        Object.keys(list).map(key => {\n            !['In/Out', 'Asians'].includes(key) && list[key].map(contract => {\n                (contract.value !== 'rise_fall_equal') && itemList.push(contract);\n            });\n        });\n        /* eslint-disable */\n        return itemList;\n    };\n\n    render() {\n        const { is_dark_theme, is_equal, is_mobile, list, name, value } = this.props;\n        const { is_dialog_open, is_info_dialog_open, item }             = this.state;\n        const item_index = this.getItemIndex(item, this.getItemList());\n        return (\n            <div\n                className='contract-type-widget dropdown--left'\n                ref={this.setWrapperRef}\n                tabIndex='0'\n            >\n                <div\n                    className={classNames('contract-type-widget__display', {\n                        'contract-type-widget__display--clicked': (is_dialog_open || is_info_dialog_open),\n                    })}\n                    onClick={this.onWidgetClick}\n                >\n                    <Icon\n                        icon='IconTradeCategory'\n                        category={value}\n                        className='contract-type-widget__icon-wrapper'\n                    />\n                    <span name={name} value={value}>\n                        {this.getDisplayText()}\n                    </span>\n                    <Icon\n                        icon='IconArrow'\n                        className={classNames(\n                          'contract-type-widget__select-arrow',\n                          'contract-type-widget__select-arrow--left')}\n                    />\n                </div>\n\n                <ContractTypeDialog\n                    is_mobile={is_mobile}\n                    onClose={this.handleVisibility}\n                    open={is_dialog_open}\n                >\n                    <ContractTypeList\n                        handleInfoClick={this.handleInfoClick}\n                        handleSelect={this.handleSelect}\n                        is_equal={is_equal}\n                        list={list}\n                        name={name}\n                        value={value}\n                    />\n                </ContractTypeDialog>\n                <TradeTypeInfoDialog\n                    is_mobile={is_mobile}\n                    onClose={this.handleInfoClick}\n                    open={is_info_dialog_open}\n                    title={item.text}\n                >\n                    <TradeTypeInfoItem\n                        handleNavigationClick={this.handleNavigationClick}\n                        handleNextClick={this.handleNextClick}\n                        handlePrevClick={this.handlePrevClick}\n                        is_dark_theme={is_dark_theme}\n                        is_mobile={is_mobile}\n                        item={item}\n                        item_index={item_index < 0 ? undefined : item_index}\n                        itemList={this.getItemList()}\n                        onBackButtonClick={this.onBackButtonClick}\n                        onSubmitButtonClick={this.onSubmitButtonClick}\n                    />\n                </TradeTypeInfoDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_dark_theme: PropTypes.bool,\n    is_equal           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract-type-widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    is_dark_theme,\n    is_equal,\n    is_mobile,\n    onChange,\n}) => (\n    <ContractTypeWidget\n        is_dark_theme={is_dark_theme}\n        is_equal={is_equal}\n        is_mobile={is_mobile}\n        list={contract_types_list}\n        name='contract_type'\n        onChange={onChange}\n        value={contract_type}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_equal           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_mobile: PropTypes.bool,\n    onChange : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        is_equal           : modules.trade.is_equal,\n        onChange           : modules.trade.onChange,\n        is_dark_theme      : ui.is_dark_mode_on,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","import PropTypes from 'prop-types';\n\nexport const CommonPropTypes = {\n    calendar_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    isPeriodDisabled: PropTypes.func,\n    selected_date   : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    updateSelected: PropTypes.func,\n};\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { padLeft }         from '_common/string_util';\nimport { localize }        from 'App/i18n';\nimport { Popover }         from 'App/Components/Elements/Popover';\nimport {\n    getDaysOfTheWeek,\n    week_headers_abbr }    from 'Constants/date-time';\nimport {\n    addDays,\n    addMonths,\n    daysFromTodayTo,\n    epochToMoment,\n    subDays,\n    subMonths,\n    toMoment }             from 'Utils/Date';\nimport { CommonPropTypes } from './types';\n\nconst getDays = ({\n    calendar_date,\n    date_format,\n    has_range_selection,\n    hide_others,\n    holidays,\n    hovered_date,\n    isPeriodDisabled,\n    start_date,\n    selected_date,\n    updateSelected,\n    weekends,\n    onMouseOver,\n    onMouseLeave,\n}) => {\n    // adjust Calendar week by 1 day so that Calendar week starts on Monday\n    // change to zero to set Calendar week to start on Sunday\n    const day_offset = 1;\n\n    const dates = [];\n    const days  = [];\n    const moment_today       = toMoment().startOf('day');\n    const moment_cur_date    = toMoment(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const moment_selected    = typeof selected_date === 'number' ? epochToMoment(selected_date).startOf('day') : toMoment(selected_date).startOf('day');\n\n    // populate previous months' dates\n    const end_of_prev_month = subMonths(moment_cur_date, 1).endOf('month').day();\n    for (let i = end_of_prev_month; i > 0; i--) {\n        dates.push(subDays(moment_month_start, i).format(date_format));\n    }\n    // populate current months' dates\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    // populate next months' dates\n    const start_of_next_month = addMonths(moment_cur_date, 1).startOf('month').day();\n    if (start_of_next_month - day_offset > 0 || dates.length <= 28) {\n        // if start_of_next_month doesn't falls on Monday, append rest of the week\n        for (let i = 1; i <= 7 - start_of_next_month + day_offset; i++) {\n            dates.push(addDays(moment_month_end, i, 'day').format(date_format));\n        }\n    } else if (!start_of_next_month) {\n        // if start_of_next_month falls on Sunday, append 1 day\n        dates.push(addDays(moment_month_end, 1).format(date_format));\n    }\n\n    const moment_start_date = toMoment(start_date).startOf('day');\n\n    dates.map((date) => {\n        const moment_date    = toMoment(date).startOf('day');\n        const moment_hovered = toMoment(hovered_date).startOf('day');\n        const is_active      = selected_date && moment_date.isSame(moment_selected);\n        const is_today       = moment_date.isSame(moment_today, 'day');\n\n        const events          = holidays.filter(event =>\n            // filter by date or day of the week\n            event.dates.find(d => d === date || getDaysOfTheWeek(d) === toMoment(date).day()));\n        const has_events           = !!events.length;\n        const is_closes_early      = events.map(event => !!event.descrip.match(/Closes early|Opens late/))[0];\n        const message              = events.map(event => event.descrip)[0] || '';\n        const duration_from_today  = daysFromTodayTo(date);\n        const is_between           = moment_date.isBetween(moment_today, moment_selected);\n        const is_between_hover     = moment_date.isBetween(moment_today, moment_hovered);\n        const is_before_min_or_after_max_date = isPeriodDisabled(moment_date, 'day');\n        const is_disabled =\n            // check if date is before min_date or after_max_date\n            is_before_min_or_after_max_date\n            // for forward starting accounts, only show same day as start date and the day after\n            || ((start_date && (moment_date.isBefore(moment_start_date))))\n            // check if weekends are disabled\n            || weekends.some(day => toMoment(date).day() === day)\n            // check if date falls on holidays, and doesn't close early or opens late\n            || has_events && !is_closes_early;\n\n        // show 'disabled' style for dates that is not in the same calendar month, it should still be clickable\n        const is_other_month = moment_date.month() !== moment_cur_date.month();\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar__cell', {\n                    'calendar__cell--active'         : is_active,\n                    'calendar__cell--today'          : is_today,\n                    'calendar__cell--active-duration': is_active && has_range_selection && !is_today,\n                    'calendar__cell--today-duration' : is_today && has_range_selection,\n                    'calendar__cell--disabled'       : is_disabled,\n                    'calendar__cell--is-hidden'      : is_other_month && hide_others,\n                    'calendar__cell--other'          : is_other_month,\n                    'calendar__cell--between-hover'  : is_between_hover && has_range_selection,\n                    'calendar__cell--between'        : is_between && has_range_selection,\n                })}\n                onClick={is_disabled ? undefined : (e) => updateSelected(e, 'day')}\n                data-date={date}\n                data-duration={`${duration_from_today} ${ duration_from_today === 1 ? localize('Day') : localize('Days') }`}\n                onMouseOver={onMouseOver}\n                onMouseLeave={onMouseLeave}\n            >\n                {((has_events || is_closes_early) && !is_other_month && !is_before_min_or_after_max_date) &&\n                    <Popover\n                        alignment='top'\n                        classNameTarget='calendar__cell-tooltip'\n                        classNameTargetIcon='calendar__cell-tooltip-icon'\n                        icon='dot'\n                        message={message}\n                    />\n                }\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar__body calendar__body--date'>\n            { Object.keys(week_headers_abbr)\n                .map((item, idx) => (\n                    <span key={idx} className='calendar__text calendar__text--bold'>{week_headers_abbr[item]}</span>\n                ))\n            }\n            { days }\n        </div>\n    );\n};\n\nCalendarDays.defaultProps = {\n    holidays: [],\n    weekends: [],\n};\n\nCalendarDays.propTypes = {\n    ...CommonPropTypes,\n    date_format        : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    hovered_date: PropTypes.string,\n    onMouseLeave: PropTypes.func,\n    onMouseOver : PropTypes.func,\n    start_date  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n","import classNames        from 'classnames';\nimport React             from 'react';\nimport { month_headers } from 'Constants/date-time';\nimport { toMoment }      from 'Utils/Date';\nimport { CommonPropTypes }   from './types';\n\nexport const CalendarMonths = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_date          = toMoment(calendar_date);\n    const moment_selected_date = toMoment(selected_date);\n\n    return (\n        <div className='calendar__body calendar__body--month'>\n            { Object.keys(month_headers).map((month, idx) => {\n                const is_active   = month === moment_selected_date.clone().format('MMM') && moment_selected_date.isSame(moment_date, 'year');\n                const is_disabled = isPeriodDisabled(moment_date.clone().month(month), 'month');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'month')}\n                        data-month={month}\n                    >\n                        {month_headers[month]}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport { CommonPropTypes } from './types';\nimport { getDecade }   from '../helper';\n\nexport const CalendarYears = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const [start_of_decade, end_of_decade] = getDecade(moment_date).split('-');\n\n    const years = [];\n    for (let year = +start_of_decade - 1; year <= +end_of_decade + 1; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar__body calendar__body--year'>\n            { years.map((year, idx) => {\n                const is_other_decade = idx === 0 || idx === 11;\n                const is_disabled     = isPeriodDisabled(moment_date.clone().year(year), 'year');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : year === moment_selected.year(),\n                            'calendar__cell--other'   : is_other_decade,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'year')}\n                        data-year={year}\n                    >\n                        {year}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport { CommonPropTypes } from './types';\nimport {\n    getCentury,\n    getDecade }        from '../helper';\n\nexport const CalendarDecades = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const start_year      = getCentury(moment_date).split('-')[0];\n\n    const decades = [];\n    let min_year = +start_year - 10;\n    for (let i = 0; i < 12; i++) {\n        const decade = getDecade(toMoment().year(min_year));\n        decades.push(decade);\n        min_year = +decade.split('-')[1] + 1;\n    }\n    return (\n        <div className='calendar__body calendar__body--decade'>\n            { decades.map((decade, idx) => {\n                const [start_of_decade, end_of_decade] = decade.split('-');\n                const is_active    = +start_of_decade === moment_selected.year();\n                const is_disabled  = isPeriodDisabled(moment_date.clone().year(start_of_decade), 'year') &&\n                    isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year');\n                const is_other_century = idx === 0 || idx === 11;\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                            'calendar__cell--other'   : is_other_century,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'decade')}\n                        data-decade={decade}\n                    >\n                        {decade}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CommonPropTypes };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nconst CalendarBody = (props) => {\n    const calendar_body = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <React.Fragment>\n            { calendar_body[props.calendar_view] }\n        </React.Fragment>\n    );\n};\n\nCalendarBody.propTypes = {\n    calendar_view: PropTypes.string,\n};\n\nexport default CalendarBody;\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { getLocalizedBasis } from 'Stores/Modules/Trading/Constants/contract';\nimport { localize }          from 'App/i18n';\nimport Money                 from 'App/Components/Elements/money.jsx';\nimport { Popover }           from 'App/Components/Elements/Popover';\nimport Icon                  from 'Assets/icon.jsx';\n\nconst ContractInfo = ({\n    basis,\n    currency,\n    has_increased,\n    is_loading,\n    should_fade,\n    is_visible,\n    proposal_info,\n}) => {\n    const localized_basis = getLocalizedBasis();\n    const stakeOrPayout = () => {\n        switch (basis) {\n            case 'stake':\n                return localized_basis.payout;\n            case 'payout':\n                return localized_basis.stake;\n            default:\n                return basis;\n        }\n    };\n\n    const has_error_or_not_loaded = proposal_info.has_error || !proposal_info.id;\n    return (\n        <div className='trade-container__price'>\n            <div className={classNames(\n                'trade-container__price-info',\n                {\n                    'trade-container__price-info--disabled': has_error_or_not_loaded,\n                    'trade-container__price-info--slide'   : is_loading && !should_fade,\n                    'trade-container__price-info--fade'    : is_loading && should_fade,\n                })}\n            >\n                <div className='trade-container__price-info-basis'>\n                    {has_error_or_not_loaded\n                        ? stakeOrPayout()\n                        : localize('{{value}}', { value: proposal_info.obj_contract_basis.text })\n                    }\n                </div>\n                <div className='trade-container__price-info-value'>\n                    {!has_error_or_not_loaded &&\n                    <Money amount={proposal_info.obj_contract_basis.value} className='trade-container__price-info-currency' currency={currency} />\n                    }\n                </div>\n                {is_visible &&\n                <div className='trade-container__price-info-movement'>\n                    {(!has_error_or_not_loaded && has_increased !== null) &&\n                        <Icon icon='IconPriceMove' type={has_increased ? 'profit' : 'loss'} />\n                    }\n                </div>\n                }\n            </div>\n            <Popover\n                alignment='left'\n                icon='info'\n                margin={210}\n                message={has_error_or_not_loaded ? '' : proposal_info.message }\n            />\n        </div>\n    );\n};\nContractInfo.propTypes = {\n    basis        : PropTypes.string,\n    currency     : PropTypes.string,\n    has_increased: PropTypes.bool,\n    is_loading   : PropTypes.bool,\n    is_visible   : PropTypes.bool,\n    proposal_info: PropTypes.object,\n};\n\nexport default ContractInfo;\n","import classNames                 from 'classnames';\nimport PropTypes                  from 'prop-types';\nimport React                      from 'react';\nimport { localize }               from 'App/i18n';\nimport Button                     from 'App/Components/Form/button.jsx';\nimport Icon                       from 'Assets/icon.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\n\nconst PurchaseButton = ({\n    buy_info,\n    index,\n    info,\n    is_contract_mode,\n    is_disabled,\n    is_high_low,\n    is_loading,\n    is_proposal_empty,\n    purchased_states_arr,\n    setPurchaseState,\n    should_fade,\n    onClickPurchase,\n    type,\n}) => {\n    const getIconType = () => {\n        if (!should_fade && is_loading) return '';\n        return (is_high_low) ? `${type.toLowerCase()}_barrier` : type.toLowerCase();\n    };\n    const is_button_disabled = ((is_contract_mode || is_disabled) && !is_loading) || is_proposal_empty;\n\n    return (\n        <Button\n            is_disabled={is_contract_mode || is_disabled}\n            id={`purchase_${type}`}\n            className={classNames(\n                'btn-purchase',\n                {\n                    'btn-purchase--disabled'       : is_button_disabled || !!(buy_info.error),\n                    'btn-purchase--animated--slide': is_loading && !should_fade,\n                    'btn-purchase--animated--fade' : is_loading && should_fade,\n                    'btn-purchase--swoosh'         : !!(purchased_states_arr[index]),\n                })}\n            onClick={() => {\n                setPurchaseState(index);\n                onClickPurchase(info.id, info.stake, type);\n            }}\n        >\n            <React.Fragment>\n                <div className='btn-purchase__info btn-purchase__info--left'>\n                    <div className='btn-purchase__type-wrapper'>\n                        <div className='btn-purchase__icon_wrapper'>\n                            <Icon\n                                icon='IconTradeType'\n                                className='btn-purchase__icon'\n                                type={getIconType()}\n                            />\n                        </div>\n                        <div className='btn-purchase__text_wrapper'>\n                            <span className='btn-purchase__text'>\n                                {(!should_fade && is_loading) ? '' : localize('{{value}}', { value: getContractTypeDisplay(type, is_high_low) })}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div className='btn-purchase__effect-detail' />\n                <div className='btn-purchase__effect-detail--arrow' />\n                <div className='btn-purchase__info btn-purchase__info--right'>\n                    <div className='btn-purchase__text_wrapper'>\n                        <span className='btn-purchase__text'>{!(is_loading || is_disabled) ? info.returns : ''}</span>\n                    </div>\n                </div>\n            </React.Fragment>\n        </Button>\n    );\n};\n\nPurchaseButton.propTypes = {\n    buy_info            : PropTypes.object,\n    currency            : PropTypes.string,\n    index               : PropTypes.number,\n    info                : PropTypes.object,\n    is_contract_mode    : PropTypes.bool,\n    is_disabled         : PropTypes.bool,\n    is_high_low         : PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_proposal_empty   : PropTypes.bool,\n    onClickPurchase     : PropTypes.func,\n    purchased_states_arr: PropTypes.array,\n    setPurchaseState    : PropTypes.func,\n    type                : PropTypes.string,\n};\n\nexport default PurchaseButton;\n","import classNames     from 'classnames';\nimport React          from 'react';\nimport PropTypes      from 'prop-types';\n// import { localize }   from 'App/i18n';\n// import { PopConfirm } from 'App/Components/Elements/PopConfirm';\nimport { Popover }    from 'App/Components/Elements/Popover';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\nimport ContractInfo   from 'Modules/Trading/Components/Form/Purchase/contract-info.jsx';\n// import PurchaseLock   from 'Modules/Trading/Components/Form/Purchase/PurchaseLock';\nimport PurchaseButton from 'Modules/Trading/Components/Elements/purchase-button.jsx';\n\nclass PurchaseFieldset extends React.PureComponent {\n    state = { should_fade: false };\n\n    componentDidMount() {\n        this.setState({ should_fade: true });\n    }\n\n    render() {\n        const {\n            basis,\n            buy_info,\n            currency,\n            // index,\n            info,\n            index,\n            is_contract_mode,\n            is_disabled,\n            is_high_low,\n            is_loading,\n            is_proposal_empty,\n            is_proposal_error,\n            purchased_states_arr,\n            // is_purchase_confirm_on,\n            // is_purchase_locked,\n            onClickPurchase,\n            onHoverPurchase,\n            // togglePurchaseLock,\n            setPurchaseState,\n            type,\n        } = this.props;\n\n        const purchase_button = (\n            <PurchaseButton\n                buy_info={buy_info}\n                currency={currency}\n                info={info}\n                index={index}\n                is_contract_mode={is_contract_mode}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={is_loading}\n                is_proposal_empty={is_proposal_empty}\n                purchased_states_arr={purchased_states_arr}\n                onClickPurchase={onClickPurchase}\n                setPurchaseState={setPurchaseState}\n                should_fade={this.state.should_fade}\n                type={type}\n            />\n        );\n\n        return (\n            <Fieldset\n                className='trade-container__fieldset purchase-container__option'\n            >\n                {/* {(is_purchase_locked && index === 0) && */}\n                {/* <PurchaseLock onClick={togglePurchaseLock} /> */}\n                {/* } */}\n                <React.Fragment>\n                    <ContractInfo\n                        basis={basis}\n                        currency={currency}\n                        proposal_info={info}\n                        has_increased={info.has_increased}\n                        is_loading={is_loading}\n                        should_fade={this.state.should_fade}\n                        is_visible={!is_contract_mode}\n                    />\n                    <div\n                        className={classNames(\n                            'btn-purchase__shadow-wrapper', {\n                                'btn-purchase__shadow-wrapper--disabled': (is_proposal_error || is_disabled),\n                            },\n                        )}\n                        onMouseEnter={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(true, type);\n                            }\n                        }}\n                        onMouseLeave={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(false);\n                            }\n                        }}\n                    >\n                        <div className='btn-purchase__box-shadow' />\n                        {(is_proposal_error) ?\n                            <Popover\n                                alignment='left'\n                                classNameBubble='purchase-container__popover-bubble'\n                                message={info.message}\n                            >\n                                { purchase_button }\n                            </Popover>\n                            :\n                            purchase_button\n                        }\n                        {\n                            // is_purchase_confirm_on ?\n                            //     <PopConfirm\n                            //         alignment='left'\n                            //         cancel_text={localize('Cancel')}\n                            //         confirm_text={localize('Purchase')}\n                            //         message={localize('Are you sure you want to purchase this contract?')}\n                            //     >\n                            //         {purchase_button}\n                            //     </PopConfirm>\n                            //     :\n                            //     purchase_button\n                        }\n                    </div>\n                </React.Fragment>\n            </Fieldset>\n        );\n    }\n}\n\nPurchaseFieldset.propTypes = {\n    basis               : PropTypes.string,\n    buy_info            : PropTypes.object,\n    currency            : PropTypes.string,\n    index               : PropTypes.number,\n    info                : PropTypes.object,\n    is_contract_mode    : PropTypes.bool,\n    is_disabled         : PropTypes.bool,\n    is_high_low         : PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_proposal_empty   : PropTypes.bool,\n    is_proposal_error   : PropTypes.bool,\n    onClickPurchase     : PropTypes.func,\n    // is_purchase_confirm_on: PropTypes.bool,\n    // is_purchase_locked    : PropTypes.bool,\n    onHoverPurchase     : PropTypes.func,\n    purchased_states_arr: PropTypes.array,\n    // togglePurchaseLock    : PropTypes.func,\n    setPurchaseState    : PropTypes.func,\n    type                : PropTypes.string,\n};\n\nexport default PurchaseFieldset;\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { isEmptyObject }           from '_common/utility';\nimport PurchaseFieldset            from 'Modules/Trading/Components/Elements/purchase-fieldset.jsx';\nimport { getContractTypePosition } from 'Constants/contract';\nimport { connect }                 from 'Stores/connect';\n\nconst Purchase = ({\n    basis,\n    contract_type,\n    currency,\n    is_contract_mode,\n    is_client_allowed_to_visit,\n    // is_purchase_confirm_on,\n    purchased_states_arr,\n    // is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    // togglePurchaseLock,\n    purchase_info,\n    proposal_info,\n    setPurchaseState,\n    trade_types,\n    validation_errors,\n}) => {\n    const is_high_low = /high_low/.test(contract_type.toLowerCase());\n    const isLoading = info => {\n        const has_validation_error = Object.values(validation_errors).some(e => e.length);\n        return !has_validation_error && !info.has_error && !info.id;\n    };\n    const is_proposal_empty = isEmptyObject(proposal_info);\n\n    const components = [];\n    Object.keys(trade_types).map((type, index) => {\n        const getSortedIndex = () => {\n            if (getContractTypePosition(type) === 'top') return 0;\n            if (getContractTypePosition(type) === 'bottom') return 1;\n            return index;\n        };\n        const info              = proposal_info[type] || {};\n        const is_disabled       = is_contract_mode\n            || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n        const is_proposal_error = info.has_error && !info.has_error_details;\n        const purchase_fieldset = (\n            <PurchaseFieldset\n                basis={basis}\n                buy_info={purchase_info}\n                currency={currency}\n                info={info}\n                key={index}\n                index={getSortedIndex()}\n                is_contract_mode={is_contract_mode}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={isLoading(info)}\n                // is_purchase_confirm_on={is_purchase_confirm_on}\n                is_proposal_empty={is_proposal_empty}\n                is_proposal_error={is_proposal_error}\n                purchased_states_arr={purchased_states_arr}\n                // is_purchase_locked={is_purchase_locked}\n                // togglePurchaseLock={togglePurchaseLock}\n                onHoverPurchase={onHoverPurchase}\n                onClickPurchase={onClickPurchase}\n                setPurchaseState={setPurchaseState}\n                type={type}\n            />\n        );\n\n        switch (getContractTypePosition(type)) {\n            case 'top':\n                components.unshift(purchase_fieldset);\n                break;\n            case 'bottom':\n                components.push(purchase_fieldset);\n                break;\n            default:\n                components.push(purchase_fieldset);\n                break;\n        }\n    });\n\n    return components;\n};\n\nPurchase.propTypes = {\n    basis                     : PropTypes.string,\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_contract_mode          : PropTypes.bool,\n    // is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    purchased_states_arr      : PropTypes.array,\n    setPurchaseState          : PropTypes.func,\n    // togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n    validation_errors         : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        is_contract_mode          : modules.smart_chart.is_contract_mode,\n        basis                     : modules.trade.basis,\n        contract_type             : modules.trade.contract_type,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        validation_errors         : modules.trade.validation_errors,\n        purchased_states_arr      : ui.purchase_states,\n        setPurchaseState          : ui.setPurchaseState,\n        // is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        // is_purchase_locked        : ui.is_purchase_lock_on,\n        // togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick, className }) => (\n    <button\n        className={className}\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func.isRequired,\n};\n\nexport default CloseButton;\n","export const default_delay = 3000;\n\nexport const max_display_notifications = 3;\n\nexport const types = {\n    danger       : 'notification--danger',\n    info         : 'notification--info',\n    success      : 'notification--success',\n    warning      : 'notification--warning',\n    contract_sold: 'notification--info',\n};\n\nexport const sortNotifications = (() => {\n    const notification_order = {\n        contract_sold: 1,\n        danger       : 2,\n        warning      : 3,\n        info         : 4,\n        success      : 5,\n    };\n\n    return (a, b) => notification_order[a.type] - notification_order[b.type];\n})();\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport classNames  from 'classnames';\nimport Icon        from 'Assets/icon.jsx';\nimport CloseButton from './close-button.jsx';\nimport {\n    default_delay,\n    types }        from './constants';\n\nconst Notification = ({\n    data,\n    removeNotification,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeNotification(data);\n\n        if (data.closeOnClick) {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close) {\n        setTimeout(destroy, data.delay || default_delay);\n    }\n\n    return (\n        <div className={\n            classNames('notification', types[data.type], {\n                'notification--small': (data.size === 'small'),\n            })}\n        >\n            <div className='notification__icon'>\n                { data.type === 'danger'  && <Icon icon='IconDanger' className='notification__icon-type' /> }\n                { (data.type === 'info' || data.type === 'contract_sold')\n                    && <Icon icon='IconInformation' className='notification__icon-type' /> }\n                { data.type === 'success' && <Icon icon='IconSuccess' className='notification__icon-type' /> }\n                { data.type === 'warning' && <Icon icon='IconWarning' className='notification__icon-type' /> }\n            </div>\n            <div className='notification__text-container'>\n                <h4 className='notification__header'>{data.header}</h4>\n                <p className='notification__text-body'> {data.message}</p>\n            </div>\n            { data.should_hide_close_btn ? undefined : <CloseButton onClick={onClick} className='notification__close-button' />}\n        </div>\n    );\n};\n\nNotification.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick         : PropTypes.func,\n        delay                : PropTypes.number,\n        header               : PropTypes.string,\n        is_auto_close        : PropTypes.bool,\n        message              : PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n        should_hide_close_btn: PropTypes.bool,\n        size                 : PropTypes.oneOf(['small']),\n        type                 : PropTypes.oneOf(['warning', 'info', 'success', 'danger', 'contract_sold']).isRequired,\n    }),\n    removeNotification: PropTypes.func,\n};\n\nexport default Notification;\n","import moment       from 'moment';\nimport { localize } from 'App/i18n';\n\nexport const addCommaToNumber = (num, decimal_places) => {\n    if (!num || isNaN(num)) {\n        return num;\n    }\n    const n = String(decimal_places ? (+num).toFixed(decimal_places) : num);\n    const p = n.indexOf('.');\n    return n.replace(\n        /\\d(?=(?:\\d{3})+(?:\\.|$))/g,\n        (m, i) => p <= 0 || i < p ? `${m},` : m\n    );\n};\n\nexport const getTimePercentage = (server_time, start_time, expiry_time) => {\n    const duration_from_purchase = moment.duration(moment.unix(expiry_time).diff(moment.unix(start_time)));\n    const duration_from_now = moment.duration(moment.unix(expiry_time).diff(server_time));\n    let percentage = (duration_from_now.asMilliseconds() / duration_from_purchase.asMilliseconds()) * 100;\n\n    if (percentage < 0.5) {\n        percentage = 0;\n    } else if (percentage > 100) {\n        percentage = 100;\n    }\n\n    return Math.round(percentage);\n};\n\nexport const getBarrierLabel = (contract_info) => {\n    if (isDigitType(contract_info.contract_type)) {\n        return localize('Target');\n    }\n    return localize('Barrier');\n};\n\nexport const getBarrierValue = (contract_info) => {\n    if (isDigitType(contract_info.contract_type)) {\n        return digitTypeMap(contract_info)[contract_info.contract_type];\n    }\n    return addCommaToNumber(contract_info.barrier);\n};\n\nexport const isDigitType = (contract_type) => (/digit/.test(contract_type.toLowerCase()));\n\nconst digitTypeMap = (contract_info) => ({\n    DIGITDIFF : localize('Not {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITEVEN : localize('Even'),\n    DIGITMATCH: localize('Equals {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITODD  : localize('Odd'),\n    DIGITOVER : localize('Over {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITUNDER: localize('Under {{barrier}}', { barrier: contract_info.barrier }),\n});\n","export * from './positions-helper';\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport PageError     from 'Modules/PageError';\nimport { routes }    from 'Constants/index';\nimport Localize      from '../localize.jsx';\n\nconst ErrorComponent = ({\n    header,\n    message,\n    redirect_label,\n    redirectOnClick,\n    should_show_refresh = true,\n}) => {\n    const refresh_message = should_show_refresh ? <Localize i18n_default_text='Please refresh this page to continue.' /> : '';\n\n    return (\n        <PageError\n            header={header || <Localize i18n_default_text='Oops, something went wrong.' />}\n            messages={\n                message\n                    ? [\n                        message,\n                        refresh_message,\n                    ]\n                    : [\n                        <Localize key={0} i18n_default_text='Sorry, an error occured while processing your request.' />,\n                        refresh_message,\n                    ]}\n            redirect_url={routes.trade}\n            redirect_label={redirect_label || <Localize i18n_default_text='Refresh' />}\n            buttonOnClick={redirectOnClick || (() => location.reload())}\n        />\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport ReactDOM          from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport Icon              from 'Assets/icon.jsx';\nimport VerticalTab       from 'App/Components/Elements/VerticalTabs';\n\nclass ModalElement extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.el = document.createElement('div');\n        this.state = {\n            modal_root: document.getElementById('modal_root'),\n        };\n    }\n\n    componentDidMount = () => {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        this.el.classList.add('modal');\n        this.props.showFullBlur();\n        this.state.modal_root.appendChild(this.el);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n        this.state.modal_root.removeChild(this.el);\n        this.props.hideFullBlur();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open) {\n            this.props.hideFullBlur();\n            this.props.toggleModal();\n        }\n    };\n\n    render() {\n        return ReactDOM.createPortal(\n            <div ref={this.setWrapperRef} className={classNames('modal__container', this.props.className && `modal__${this.props.className}`)}>\n                <div className='modal-header'>\n                    <h3 className='modal-header__sidebar'>{this.props.title}</h3>\n                    <div className='modal-header__main'>\n                        { this.props.header &&\n                            <div className='modal-header__section'>\n                                {this.props.header}\n                            </div>\n                        }\n                        <div className='modal-header__close' onClick={this.props.toggleModal}>\n                            <Icon icon='ModalIconClose' />\n                        </div>\n                    </div>\n                </div>\n                <VerticalTab\n                    alignment='center'\n                    classNameHeader='modal__tab-header'\n                    list={this.props.modal_content}\n                    selected_index={this.props.selected_index}\n                />\n            </div>,\n            this.el\n        );\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n}\n\nModalElement.propTypes = {\n    className     : PropTypes.string,\n    header        : PropTypes.node,\n    hideFullBlur  : PropTypes.func,\n    is_open       : PropTypes.bool,\n    modal_content : PropTypes.array,\n    selected_index: PropTypes.number,\n    showFullBlur  : PropTypes.func,\n    title         : PropTypes.string,\n    toggleModal   : PropTypes.func,\n};\n\nconst Modal = ({\n    className,\n    header,\n    hideFullBlur,\n    is_open,\n    modal_content,\n    selected_index,\n    showFullBlur,\n    title,\n    toggleModal,\n}) => (\n    <CSSTransition\n        appear\n        in={is_open}\n        timeout={250}\n        classNames={{\n            appear   : 'modal__container--enter',\n            enter    : 'modal__container--enter',\n            enterDone: 'modal__container--enter-done',\n            exit     : 'modal__container--exit',\n        }}\n        unmountOnExit\n    >\n        <ModalElement\n            className={className}\n            header={header}\n            hideFullBlur={hideFullBlur}\n            is_open={is_open}\n            modal_content={modal_content}\n            selected_index={selected_index}\n            showFullBlur={showFullBlur}\n            title={title}\n            toggleModal={toggleModal}\n        />\n    </CSSTransition>\n);\n\nModal.propTypes = {\n    className     : PropTypes.string,\n    header        : PropTypes.node,\n    hideFullBlur  : PropTypes.func,\n    is_open       : PropTypes.bool,\n    modal_content : PropTypes.array,\n    selected_index: PropTypes.number,\n    showFullBlur  : PropTypes.func,\n    title         : PropTypes.string,\n    toggleModal   : PropTypes.func,\n};\n\nexport {\n    Modal,\n    ModalElement,\n};\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = [\n        'ACH',\n    ];\n    // TODO Change language_list to const when design is ready.\n    let language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    // TODO Remove this one line below when design is ready.\n    language_list = { EN: 'English' };\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","export * from './language';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CalendarButton = ({\n    children,\n    className,\n    is_hidden,\n    label,\n    onClick,\n}) => (\n    <React.Fragment>\n        { !is_hidden &&\n            <div\n                className={className}\n                onClick={onClick}\n            >\n                {label}\n                {children}\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport default CalendarButton;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport Icon              from 'Assets/icon.jsx';\nimport { month_headers } from 'Constants/date-time';\nimport {\n    addMonths,\n    addYears,\n    subMonths,\n    subYears,\n    toMoment }           from 'Utils/Date';\nimport CalendarButton    from './calendar-button.jsx';\nimport {\n    getCentury,\n    getDecade }          from './helper';\n\nconst CalendarHeader = ({\n    calendar_date,\n    calendar_view,\n    disable_month_selector,\n    disable_year_selector,\n    hide_disabled_periods,\n    isPeriodDisabled,\n    navigateTo,\n    switchView,\n}) => {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = toMoment(calendar_date);\n\n    let num_of_years = 1;\n    if (is_year_view)   num_of_years = 10;\n    if (is_decade_view) num_of_years = 100;\n\n    const century = getCentury(moment_date.clone());\n    const decade  = getDecade(moment_date.clone());\n    const end_of_decade = (is_year_view ? decade : century).split('-')[1];\n\n    const is_prev_month_disabled  = isPeriodDisabled(subMonths(moment_date, 1), 'month');\n    const is_prev_year_disabled   = isPeriodDisabled(subYears(moment_date, num_of_years), 'month');\n    const is_next_month_disabled  = isPeriodDisabled(addMonths(moment_date, 1), 'month');\n    const is_next_year_disabled   = isPeriodDisabled(addYears(moment_date, num_of_years), 'month');\n    const is_select_year_disabled = isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year') || disable_year_selector;\n    const should_hide_next_month  = is_next_month_disabled && hide_disabled_periods;\n    const should_hide_prev_month  = is_prev_month_disabled && hide_disabled_periods;\n    const should_hide_prev_year   = is_prev_year_disabled && hide_disabled_periods;\n    const should_hide_next_year   = is_next_year_disabled && hide_disabled_periods;\n\n    const onClickPrevYear = !(is_prev_year_disabled || should_hide_prev_year) ?\n        () => navigateTo(subYears(calendar_date, num_of_years)) :\n        undefined;\n\n    const onClickNextYear = !(is_next_year_disabled || should_hide_next_year) ?\n        () => navigateTo(addYears(calendar_date, num_of_years)) :\n        undefined;\n\n    const onClickPrevMonth = !(is_prev_month_disabled || should_hide_prev_month) ?\n        () => navigateTo(subMonths(calendar_date, 1)) :\n        undefined;\n\n    const onClickNextMonth = !(is_next_month_disabled || should_hide_next_month) ?\n        () => navigateTo(addMonths(calendar_date, 1)) :\n        undefined;\n\n    return (\n        <div className='calendar__header'>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-year', {\n                    'calendar__nav--disabled' : is_prev_year_disabled,\n                    'calendar__nav--is-hidden': should_hide_prev_year,\n                })}\n                onClick={onClickPrevYear}\n            >\n                <Icon icon='IconChevronDoubleLeft' className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-month', {\n                    'calendar__nav--disabled' : is_prev_month_disabled,\n                    'calendar__nav--is-hidden': should_hide_prev_month,\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClickPrevMonth}\n            >\n                <Icon icon='IconChevronLeft' className='calendar__icon' />\n            </CalendarButton>\n\n            <React.Fragment>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar__btn calendar__btn--select'\n                        is_hidden={!is_date_view}\n                        label={month_headers[moment_date.format('MMM')]}\n                        onClick={() => disable_month_selector ? undefined : switchView('month')}\n                    />\n                }\n                { (is_date_view || is_month_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        label={moment_date.format('YYYY')}\n                        onClick={() => is_select_year_disabled ? undefined : switchView('year')}\n                    />\n                }\n                { (is_year_view || is_decade_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        onClick={is_select_year_disabled ? undefined : () => switchView('decade')}\n                    >\n                        { is_year_view   && `${decade}`  }\n                        { is_decade_view && `${century}` }\n                    </CalendarButton>\n                }\n            </React.Fragment>\n\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-month', {\n                    'calendar__nav--disabled' : is_next_month_disabled,\n                    'calendar__nav--is-hidden': should_hide_next_month,\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClickNextMonth}\n            >\n                <Icon icon='IconChevronRight' className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-year', {\n                    'calendar__nav--disabled' : is_next_year_disabled,\n                    'calendar__nav--is-hidden': should_hide_next_year,\n                })}\n                onClick={onClickNextYear}\n            >\n                <Icon icon='IconChevronDoubleRight' className='calendar__icon' />\n            </CalendarButton>\n        </div>\n    );\n};\n\nCalendarHeader.propTypes = {\n    calendar_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object,\n        PropTypes.number,\n    ]),\n    calendar_view         : PropTypes.string,\n    disable_month_selector: PropTypes.bool,\n    disable_year_selector : PropTypes.bool,\n    hide_disabled_periods : PropTypes.bool,\n    isPeriodDisabled      : PropTypes.func,\n    navigateTo            : PropTypes.func,\n    switchView            : PropTypes.func,\n};\n\nexport default CalendarHeader;\n","import ContentLoader from 'react-content-loader';\nimport React         from 'react';\nimport PropTypes     from 'prop-types';\n\nconst PositionsCardLoader = ({ is_dark_theme, speed }) => (\n    <ContentLoader\n        height={173}\n        width={218}\n        speed={speed}\n        primaryColor={is_dark_theme ? 'rgba(127, 131, 151, 0.16)' : '#f4f4f6'}\n        secondaryColor={is_dark_theme ? '#303342' : '#eaeaec'}\n    >\n        <rect x='43'  y='19'  rx='0' ry='0' width='56'  height='8' />\n        <rect x='147' y='19'  rx='0' ry='0' width='56'  height='8' />\n        <rect x='12'  y='50'  rx='0' ry='0' width='44'  height='8' />\n        <rect x='13'  y='68'  rx='0' ry='0' width='192' height='8' />\n        <rect x='5'   y='89'  rx='0' ry='0' width='208' height='1' />\n        <rect x='12'  y='104' rx='0' ry='0' width='44'  height='8' />\n        <rect x='12'  y='9'   rx='0' ry='0' width='24'  height='24' />\n        <rect x='116' y='11'  rx='0' ry='0' width='24'  height='24' />\n        <rect x='12'  y='118' rx='0' ry='0' width='88'  height='8' />\n        <rect x='116' y='104' rx='0' ry='0' width='44'  height='8' />\n        <rect x='116' y='118' rx='0' ry='0' width='88'  height='8' />\n        <rect x='12'  y='139' rx='0' ry='0' width='44'  height='8' />\n        <rect x='12'  y='153' rx='0' ry='0' width='88'  height='8' />\n        <rect x='116' y='139' rx='0' ry='0' width='44'  height='8' />\n        <rect x='116' y='153' rx='0' ry='0' width='88'  height='8' />\n    </ContentLoader>\n);\n\nPositionsCardLoader.propTypes = {\n    is_dark_theme: PropTypes.bool,\n    speed        : PropTypes.number,\n};\n\nexport { PositionsCardLoader };\n","export * from './positions-card.jsx';\n","const Cookies          = require('js-cookie');\nconst moment           = require('moment');\nconst ClientBase       = require('./client_base');\nconst Login            = require('./login');\nconst ServerTime       = require('./server_time');\nconst BinarySocket     = require('./socket_base');\nconst getLanguage      = require('../language').get;\nconst LocalStore       = require('../storage').LocalStore;\nconst State            = require('../storage').State;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst getAppId         = require('../../config').getAppId;\n\nconst GTM = (() => {\n    const isGtmApplicable = () => (/^(16303|16929)$/.test(getAppId()));\n\n    const getCommonVariables = () => ({\n        language: getLanguage(),\n        ...ClientBase.isLoggedIn() && {\n            visitorId: ClientBase.get('loginid'),\n            currency : ClientBase.get('currency'),\n        },\n        ...('is_dark_mode_on' in LocalStore.getObject('ui_store')) && {\n            theme: LocalStore.getObject('ui_store').is_dark_mode_on ? 'dark' : 'light',\n        },\n    });\n\n    const pushDataLayer = (data) => {\n        if (isGtmApplicable() && !Login.isLoginPages()) {\n            dataLayer.push({\n                ...getCommonVariables(),\n                ...data,\n            });\n        }\n    };\n\n    const eventHandler = (get_settings) => {\n        if (!isGtmApplicable()) return;\n        const login_event       = localStorage.getItem('GTM_login');\n        const is_new_account    = localStorage.getItem('GTM_new_account') === '1';\n\n        localStorage.removeItem('GTM_login');\n        localStorage.removeItem('GTM_new_account');\n\n        const affiliate_token = Cookies.getJSON('affiliate_tracking');\n        if (affiliate_token) {\n            pushDataLayer({ bom_affiliate_token: affiliate_token.t });\n        }\n\n        // Get current time (moment, set by server), else fallback to client time\n        const moment_now = window.time || moment().utc();\n        const data = {\n            visitorId         : ClientBase.get('loginid'),\n            bom_account_type  : ClientBase.getAccountType(),\n            bom_currency      : ClientBase.get('currency'),\n            bom_country       : get_settings.country,\n            bom_country_abbrev: get_settings.country_code,\n            bom_email         : get_settings.email,\n            url               : window.location.href,\n            bom_today         : moment_now.unix(),\n        };\n\n        if (is_new_account) {\n            data.event = 'new_account';\n            data.bom_date_joined = data.bom_today;\n        }\n\n        if (!ClientBase.get('is_virtual')) {\n            data.bom_age       = moment_now.diff(moment.unix(get_settings.date_of_birth).utc(), 'year');\n            data.bom_firstname = get_settings.first_name;\n            data.bom_lastname  = get_settings.last_name;\n            data.bom_phone     = get_settings.phone;\n        }\n\n        if (login_event) {\n            data.event = login_event;\n            BinarySocket.wait('mt5_login_list').then((response) => {\n                (response.mt5_login_list || []).forEach((obj) => {\n                    const acc_type = (ClientBase.getMT5AccountType(obj.group) || '')\n                        .replace('real_vanuatu', 'financial').replace('vanuatu_', '').replace(/svg/, 'gaming'); // i.e. financial_cent, demo_cent, demo_gaming, real_gaming\n                    if (acc_type) {\n                        data[`mt5_${acc_type}_id`] = obj.login;\n                    }\n                });\n                pushDataLayer(data);\n            });\n        } else {\n            pushDataLayer(data);\n        }\n\n        // check if there are any transactions in the last 30 days for UX interview selection\n        BinarySocket.send({ statement: 1, limit: 1 }).then((response) => {\n            const last_transaction_timestamp = getPropertyValue(response, ['statement', 'transactions', '0', 'transaction_time']);\n            pushDataLayer({\n                bom_transaction_in_last_30d: !!last_transaction_timestamp && moment(last_transaction_timestamp * 1000).isAfter(ServerTime.get().subtract(30, 'days')),\n            });\n        });\n    };\n\n    const mt5NewAccount = (response) => {\n        const acc_type = response.mt5_new_account.mt5_account_type ?\n            `${response.mt5_new_account.account_type}_${response.mt5_new_account.mt5_account_type}` : // financial_cent, demo_cent, ...\n            `${response.mt5_new_account.account_type === 'demo' ? 'demo' : 'real'}_gaming`;           // demo_gaming, real_gaming\n\n        const gtm_data = {\n            event          : 'mt5_new_account',\n            bom_email      : ClientBase.get('email'),\n            bom_country    : State.getResponse('get_settings.country'),\n            mt5_last_signup: acc_type,\n        };\n\n        gtm_data[`mt5_${acc_type}_id`] = response.mt5_new_account.login;\n\n        if (/demo/.test(acc_type) && !ClientBase.get('is_virtual')) {\n            gtm_data.visitorId = ClientBase.getAccountOfType('virtual').loginid;\n        }\n\n        pushDataLayer(gtm_data);\n    };\n\n    // Pushes deposit & withdrawal data from transaction-stream to GTM\n    const pushTransactionData = (response, extra_data = {}) => {\n        if (!isGtmApplicable() || ClientBase.get('is_virtual')) return;\n        if (!response.transaction || !response.transaction.action) return;\n        if (!['deposit', 'withdrawal'].includes(response.transaction.action)) return;\n\n        const moment_now  = window.time || moment().utc();\n        const storage_key = 'GTM_transactions';\n\n        // Remove values from prev days so localStorage doesn't grow to infinity\n        let gtm_transactions = JSON.parse(localStorage.getItem(storage_key)) || {};\n        if (Object.prototype.hasOwnProperty.call(gtm_transactions, 'timestamp')) {\n            if (moment_now.isAfter(moment.unix(gtm_transactions.timestamp).utc(), 'day')) {\n                localStorage.removeItem(storage_key);\n                gtm_transactions = { timestamp: moment_now.unix() };\n            }\n        }\n        const transactions_arr = gtm_transactions.transactions || [];\n        if (!transactions_arr.includes(response.transaction.transaction_id)) {\n            const data = {\n                event           : 'transaction',\n                bom_account_type: ClientBase.getAccountType(),\n                bom_today       : moment_now.unix(),\n                transaction     : {\n                    id     : response.transaction.transaction_id,\n                    type   : response.transaction.action,\n                    time   : response.transaction.transaction_time,\n                    amount : response.transaction.amount,\n                    balance: response.transaction.balance,\n                },\n            };\n            Object.assign(data, extra_data);\n            pushDataLayer(data);\n\n            transactions_arr.push(response.transaction.transaction_id);\n            gtm_transactions.transactions = transactions_arr;\n            gtm_transactions.timestamp    = gtm_transactions.timestamp || moment_now.unix();\n\n            localStorage.setItem(storage_key, JSON.stringify(gtm_transactions));\n        }\n    };\n\n    return {\n        pushDataLayer,\n        eventHandler,\n        pushTransactionData,\n        mt5NewAccount,\n    };\n})();\n\nmodule.exports = GTM;\n","const BinarySocket = require('./socket_base');\nconst localize     = require('../../App/i18n').localize;\n\n/*\n * Monitors the network status and initialises the WebSocket connection\n * 1. online : check the WS status (init/send: blink after timeout, open/message: online)\n * 2. offline: it is offline\n */\nconst NetworkMonitorBase = (() => {\n    const StatusConfig = (() => {\n        let status_config;\n\n        const initStatusConfig = () => ({\n            online  : { class: 'online',  tooltip: localize('Online') },\n            offline : { class: 'offline', tooltip: localize('Offline') },\n            blinking: { class: 'blinker', tooltip: localize('Connecting to server') },\n        });\n\n        return {\n            get: (status) => {\n                if (!status_config) {\n                    status_config = initStatusConfig();\n                }\n                return status_config[status];\n            },\n        };\n    })();\n\n    const pendings = {};\n    const pending_keys = {\n        ws_init   : 'ws_init',\n        ws_request: 'ws_request',\n    };\n    const pending_timeouts = {\n        [pending_keys.ws_init]   : 5000,\n        [pending_keys.ws_request]: 10000,\n    };\n\n    let ws_config,\n        network_status,\n        updateUI;\n\n    const init = (socket_general_functions, fncUpdateUI) => {\n        updateUI  = fncUpdateUI;\n        ws_config = Object.assign({ wsEvent, isOnline }, socket_general_functions);\n\n        if ('onLine' in navigator) {\n            window.addEventListener('online',  setStatus);\n            window.addEventListener('offline', setStatus);\n        } else { // if not supported, default to online and fallback to WS checks\n            navigator.onLine = true;\n        }\n\n        if (isOnline()) {\n            BinarySocket.init(ws_config);\n        }\n\n        setStatus(isOnline() ? 'online' : 'offline');\n    };\n\n    const isOnline = () => navigator.onLine;\n\n    const wsReconnect = () => {\n        if (isOnline() && BinarySocket.hasReadyState(2, 3)) { // CLOSING or CLOSED\n            BinarySocket.init(ws_config);\n        } else {\n            BinarySocket.send({ ping: 1 }); // trigger a request to get stable status sooner\n        }\n    };\n\n    const setStatus = (status) => {\n        if (!isOnline()) {\n            network_status = 'offline';\n        } else if (pending_keys[status] || network_status === 'offline') {\n            network_status = 'blinking';\n            wsReconnect();\n        } else {\n            network_status = 'online';\n        }\n\n        if (typeof updateUI === 'function') {\n            updateUI(StatusConfig.get(network_status), isOnline());\n        }\n    };\n\n    const ws_events_map = {\n        init   : () => setPending(pending_keys.ws_init),\n        open   : () => clearPendings(pending_keys.ws_init),\n        send   : () => setPending(pending_keys.ws_request),\n        message: () => clearPendings(),\n        close  : () => setPending(pending_keys.ws_init),\n    };\n\n    const wsEvent = (event) => {\n        if (typeof ws_events_map[event] === 'function') {\n            ws_events_map[event]();\n        }\n    };\n\n    const setPending = (key) => {\n        if (!pendings[key]) {\n            pendings[key] = setTimeout(() => {\n                pendings[key] = undefined;\n                setStatus(key);\n            }, pending_timeouts[key]);\n        }\n    };\n\n    const clearPendings = (key) => {\n        const clear = (k) => {\n            clearTimeout(pendings[k]);\n            pendings[k] = undefined;\n            if (k === pending_keys.ws_request) {\n                setStatus('online');\n            }\n        };\n\n        if (key) {\n            clear(key);\n        } else {\n            Object.keys(pendings).forEach(clear);\n        }\n    };\n\n    return {\n        init,\n        wsEvent,\n    };\n})();\n\nmodule.exports = NetworkMonitorBase;\n","const urlForLanguage             = require('./language').urlFor;\nconst getLanguage                = require('./language').get;\nconst getCurrentProductionDomain = require('../config').getCurrentProductionDomain;\nrequire('url-polyfill');\n\nconst Url = (() => {\n    let location_url,\n        static_host;\n\n    const reset = () => {\n        location_url = window ? window.location : location_url;\n    };\n\n    const params = (href) => {\n        const arr_params = [];\n        const parsed     = ((href ? new URL(href) : location_url).search || '').substr(1).split('&');\n        let p_l          = parsed.length;\n        while (p_l--) {\n            const param = parsed[p_l].split('=');\n            arr_params.push(param);\n        }\n        return arr_params;\n    };\n\n    const paramsHash = (href) => {\n        const param_hash = {};\n        const arr_params = params(href);\n        let param        = arr_params.length;\n        while (param--) {\n            if (arr_params[param][0]) {\n                param_hash[arr_params[param][0]] = arr_params[param][1] || '';\n            }\n        }\n        return param_hash;\n    };\n\n    const normalizePath = path => (path ? path.replace(/(^\\/|\\/$|[^a-zA-Z0-9-_/])/g, '') : '');\n\n    const urlFor = (path, pars, language, should_change_to_legacy = false) => {\n        const lang = (language || getLanguage()).toLowerCase();\n        let domain = `https://${window.location.hostname}/`;\n        if (should_change_to_legacy) {\n            if (/localhost|binary\\.sx/.test(domain)) {\n                domain = `https://binary.com/${lang || 'en'}/`;\n            } else {\n                domain = domain.replace(/deriv\\.app/, `binary.com/${lang || 'en'}`);\n            }\n        }\n        const new_url = `${domain}${(normalizePath(path) || 'home')}.html${(pars ? `?${pars}` : '')}`;\n        // replace old lang with new lang\n        return urlForLanguage(lang, new_url);\n    };\n\n    const default_domain = 'binary.com';\n    const host_map = { // the exceptions regarding updating the URLs\n        'bot.binary.com'       : 'www.binary.bot',\n        'developers.binary.com': 'developers.binary.com', // same, shouldn't change\n        'academy.binary.com'   : 'academy.binary.com',\n        'tech.binary.com'      : 'tech.binary.com',\n        'blog.binary.com'      : 'blog.binary.com',\n    };\n\n    const urlForCurrentDomain = (href) => {\n        const current_domain = getCurrentProductionDomain();\n\n        if (!current_domain) {\n            return href; // don't change when domain is not supported\n        }\n\n        const url_object = new URL(href);\n        if (Object.keys(host_map).includes(url_object.hostname)) {\n            url_object.hostname = host_map[url_object.hostname];\n        } else if (url_object.hostname.indexOf(default_domain) !== -1) {\n            // to keep all non-Binary links unchanged, we use default domain for all Binary links in the codebase (javascript and templates)\n            url_object.hostname = url_object.hostname.replace(new RegExp(`\\\\.${default_domain}`, 'i'), `.${current_domain}`);\n        } else {\n            return href;\n        }\n\n        return url_object.href;\n    };\n\n    const urlForStatic = (path = '') => {\n        if (!static_host || static_host.length === 0) {\n            static_host = document.querySelector('script[src*=\"vendor.min.js\"]');\n            if (static_host) {\n                static_host = static_host.getAttribute('src');\n            }\n\n            if (static_host && static_host.length > 0) {\n                static_host = static_host.substr(0, static_host.indexOf('/js/') + 1);\n            } else {\n                static_host = Url.websiteUrl();\n            }\n        }\n\n        return static_host + path.replace(/(^\\/)/g, '');\n    };\n\n    const getUrlBase = (path = '') => {\n        const l = window.location;\n\n        if (!/^\\/br_/.test(l.pathname)) return path;\n\n        return `/${l.pathname.split('/')[1]}${/^\\//.test(path) ? path : `/${path}`}`;\n    };\n\n    return {\n        getUrlBase,\n        reset,\n        paramsHash,\n        urlFor,\n        urlForCurrentDomain,\n        urlForStatic,\n\n        param          : name => paramsHash()[name],\n        websiteUrl     : () => `${location.protocol}//${location.hostname}/`,\n        getHostMap     : () => host_map,\n        resetStaticHost: () => { static_host = undefined; },\n    };\n})();\n\nmodule.exports = Url;\n","const moment           = require('moment');\nconst isCryptocurrency = require('./currency_base').isCryptocurrency;\nconst SocketCache      = require('./socket_cache');\nconst localize         = require('../../App/i18n').localize;\nconst LocalStore       = require('../storage').LocalStore;\nconst State            = require('../storage').State;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst isEmptyObject    = require('../utility').isEmptyObject;\n\nconst ClientBase = (() => {\n    const storage_key = 'client.accounts';\n    let client_object = {};\n    let current_loginid;\n\n    const init = () => {\n        current_loginid = LocalStore.get('active_loginid');\n        client_object   = getAllAccountsObject();\n    };\n\n    const isLoggedIn = () => (\n        !isEmptyObject(getAllAccountsObject()) &&\n        get('loginid') &&\n        get('token')\n    );\n\n    const isValidLoginid = () => {\n        if (!isLoggedIn()) return true;\n        const valid_login_ids = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return getAllLoginids().every(loginid => valid_login_ids.test(loginid));\n    };\n\n    /**\n     * Stores the client information in local variable and localStorage\n     *\n     * @param {String} key                 The property name to set\n     * @param {String|Number|Object} value The regarding value\n     * @param {String|null} loginid        The account to set the value for\n     */\n    const set = (key, value, loginid = current_loginid) => {\n        if (key === 'loginid' && value !== current_loginid) {\n            LocalStore.set('active_loginid', value);\n            current_loginid = value;\n        } else {\n            if (!(loginid in client_object)) {\n                client_object[loginid] = {};\n            }\n            client_object[loginid][key] = value;\n            LocalStore.setObject(storage_key, client_object);\n        }\n    };\n\n    /**\n     * Returns the client information\n     *\n     * @param {String|null} key     The property name to return the value from, if missing returns the account object\n     * @param {String|null} loginid The account to return the value from\n     */\n    const get = (key, loginid = current_loginid) => {\n        let value;\n        if (key === 'loginid') {\n            value = loginid || LocalStore.get('active_loginid');\n        } else {\n            const current_client = client_object[loginid] || getAllAccountsObject()[loginid] || client_object;\n\n            value = key ? current_client[key] : current_client;\n        }\n        if (!Array.isArray(value) && (+value === 1 || +value === 0 || value === 'true' || value === 'false')) {\n            value = JSON.parse(value || false);\n        }\n        return value;\n    };\n\n    const getAllAccountsObject = () => LocalStore.getObject(storage_key);\n\n    const getAllLoginids = () => Object.keys(getAllAccountsObject());\n\n    const getAccountType = (loginid = current_loginid) => {\n        let account_type;\n        if (/^VR/.test(loginid))          account_type = 'virtual';\n        else if (/^MF/.test(loginid))     account_type = 'financial';\n        else if (/^MLT|MX/.test(loginid)) account_type = 'gaming';\n        return account_type;\n    };\n\n    const isAccountOfType = (type, loginid = current_loginid, only_enabled = false) => {\n        const this_type   = getAccountType(loginid);\n        return ((\n            (type === 'virtual' && this_type === 'virtual') ||\n            (type === 'real'    && this_type !== 'virtual') ||\n            type === this_type) &&\n            (only_enabled ? !get('is_disabled', loginid) : true));\n    };\n\n    const getAccountOfType = (type, only_enabled) => {\n        const id = getAllLoginids().find(loginid => isAccountOfType(type, loginid, only_enabled));\n        return id ? Object.assign({ loginid: id }, get(null, id)) : {};\n    };\n\n    const hasAccountType = (type, only_enabled) => !isEmptyObject(getAccountOfType(type, only_enabled));\n\n    // only considers currency of real money accounts\n    // @param {String} type = crypto|fiat\n    const hasCurrencyType = (type) => {\n        const loginids = getAllLoginids();\n        if (type === 'crypto') {\n            // find if has crypto currency account\n            return loginids.find(loginid =>\n                !get('is_virtual', loginid) && isCryptocurrency(get('currency', loginid)));\n        }\n        // else find if have fiat currency account\n        return loginids.find(loginid =>\n            !get('is_virtual', loginid) && !isCryptocurrency(get('currency', loginid)));\n    };\n\n    const TypesMapConfig = (() => {\n        let types_map_config;\n\n        const initTypesMap = () => ({\n            default  : localize('Real'),\n            financial: localize('Investment'),\n            gaming   : localize('Gaming'),\n            virtual  : localize('Virtual'),\n        });\n\n        return {\n            get: () => {\n                if (!types_map_config) {\n                    types_map_config = initTypesMap();\n                }\n                return types_map_config;\n            },\n        };\n    })();\n\n    const getAccountTitle = loginid => {\n        const types_map = TypesMapConfig.get();\n        return (types_map[getAccountType(loginid)] || types_map.default);\n    };\n\n    const responseAuthorize = (response) => {\n        const authorize = response.authorize;\n        set('email',      authorize.email);\n        set('currency',   authorize.currency);\n        set('is_virtual', +authorize.is_virtual);\n        set('session_start', parseInt(moment().valueOf() / 1000));\n        set('landing_company_shortcode', authorize.landing_company_name);\n        updateAccountList(authorize.account_list);\n    };\n\n    const updateAccountList = (account_list) => {\n        account_list.forEach((account) => {\n            set('excluded_until', account.excluded_until || '', account.loginid);\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    set(param_to_set, value_to_set, account.loginid);\n                }\n            });\n        });\n    };\n\n    const shouldAcceptTnc = () => {\n        if (get('is_virtual')) return false;\n        const website_tnc_version = State.getResponse('website_status.terms_conditions_version');\n        const client_tnc_status   = State.getResponse('get_settings.client_tnc_status');\n        return typeof client_tnc_status !== 'undefined' && client_tnc_status !== website_tnc_version;\n    };\n\n    const clearAllAccounts = () => {\n        current_loginid = undefined;\n        client_object   = {};\n        LocalStore.setObject(storage_key, client_object);\n    };\n\n    const setNewAccount = (options) => {\n        if (!options.email || !options.loginid || !options.token) {\n            return false;\n        }\n\n        SocketCache.clear();\n        localStorage.setItem('GTM_new_account', '1');\n\n        set('token',      options.token,       options.loginid);\n        set('email',      options.email,       options.loginid);\n        set('is_virtual', +options.is_virtual, options.loginid);\n        set('loginid',    options.loginid);\n\n        return true;\n    };\n\n    const currentLandingCompany = () => {\n        const landing_company_response = State.getResponse('landing_company') || {};\n        const this_shortcode           = get('landing_company_shortcode');\n        const landing_company_prop     = Object.keys(landing_company_response).find((key) => (\n            this_shortcode === landing_company_response[key].shortcode\n        ));\n        return landing_company_response[landing_company_prop] || {};\n    };\n\n    const shouldCompleteTax = () => isAccountOfType('financial') &&\n        !/crs_tin_information/.test((State.getResponse('get_account_status') || {}).status);\n\n    // remove manager id or master distinction from group\n    // remove EUR or GBP distinction from group\n    const getMT5AccountType = group => (group ? group.replace('\\\\', '_').replace(/_(\\d+|master|EUR|GBP)/, '') : '');\n\n    const getBasicUpgradeInfo = () => {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n\n        let can_open_multi = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            const current_landing_company = get('landing_company_shortcode');\n\n            can_open_multi = upgradeable_landing_companies.indexOf(current_landing_company) !== -1;\n\n            // only show upgrade message to landing companies other than current\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== current_landing_company &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n\n            can_upgrade_to = canUpgrade('svg', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    };\n\n    const getLandingCompanyValue = (loginid, landing_company, key) => {\n        let landing_company_object;\n        if (loginid.financial || isAccountOfType('financial', loginid)) {\n            landing_company_object = getPropertyValue(landing_company, 'financial_company');\n        } else if (loginid.real || isAccountOfType('real', loginid)) {\n            landing_company_object = getPropertyValue(landing_company, 'gaming_company');\n\n            // handle accounts that don't have gaming company\n            if (!landing_company_object) {\n                landing_company_object = getPropertyValue(landing_company, 'financial_company');\n            }\n        } else {\n            const financial_company = (getPropertyValue(landing_company, 'financial_company') || {})[key] || [];\n            const gaming_company    = (getPropertyValue(landing_company, 'gaming_company') || {})[key] || [];\n            landing_company_object  = financial_company.concat(gaming_company);\n            return landing_company_object;\n        }\n        return (landing_company_object || {})[key];\n    };\n\n    const getRiskAssessment = () => {\n        const status       = State.getResponse('get_account_status.status');\n        const is_high_risk = /high/.test(State.getResponse('get_account_status.risk_classification'));\n\n        return (\n            isAccountOfType('financial') ?\n                /(financial_assessment|trading_experience)_not_complete/.test(status) :\n                (is_high_risk && /financial_assessment_not_complete/.test(status))\n        );\n    };\n\n    // API_V3: send a list of accounts the client can transfer to\n    const canTransferFunds = (account) => {\n        if (account) {\n            // this specific account can be used to transfer funds to\n            return canTransferFundsTo(account.loginid);\n        }\n        // at least one account can be used to transfer funds to\n        return Object.keys(client_object).some(loginid => canTransferFundsTo(loginid));\n    };\n\n    const canTransferFundsTo = (to_loginid) => {\n        if (to_loginid === current_loginid || get('is_virtual', to_loginid) || get('is_virtual') ||\n            get('is_disabled', to_loginid)) {\n            return false;\n        }\n        const from_currency = get('currency');\n        const to_currency   = get('currency', to_loginid);\n        if (!from_currency || !to_currency) {\n            return false;\n        }\n        // only transfer to other accounts that have the same currency as current account if one is maltainvest and one is malta\n        if (from_currency === to_currency) {\n            // these landing companies are allowed to transfer funds to each other if they have the same currency\n            const same_cur_allowed = {\n                maltainvest: 'malta',\n                malta      : 'maltainvest',\n            };\n            const from_landing_company = get('landing_company_shortcode');\n            const to_landing_company   = get('landing_company_shortcode', to_loginid);\n            // if same_cur_allowed[from_landing_company] is undefined and to_landing_company is also undefined, it will return true\n            // so we should compare '' === undefined instead\n            return (same_cur_allowed[from_landing_company] || '') === to_landing_company;\n        }\n        // or for other clients if current account is cryptocurrency it should only transfer to fiat currencies and vice versa\n        const is_from_crypto = isCryptocurrency(from_currency);\n        const is_to_crypto   = isCryptocurrency(to_currency);\n        return (is_from_crypto ? !is_to_crypto : is_to_crypto);\n    };\n\n    const hasSvgAccount = () => !!(getAllLoginids().find(loginid => /^CR/.test(loginid)));\n\n    const canChangeCurrency = (statement, mt5_login_list, is_current = true) => {\n        const currency             = get('currency');\n        const has_no_mt5           = mt5_login_list.length === 0;\n        const has_no_transaction   = (statement.count === 0 && statement.transactions.length === 0);\n        const has_account_criteria = has_no_transaction && has_no_mt5;\n\n        // Current API requirements for currently logged-in user successfully changing their account's currency:\n        // 1. User must not have made any transactions\n        // 2. User must not have any MT5 account\n        // 3. Not be a crypto account\n        // 4. Not be a virtual account\n        return is_current ? currency && !get('is_virtual') && has_account_criteria && !isCryptocurrency(currency) : has_account_criteria;\n    };\n\n    return {\n        init,\n        isLoggedIn,\n        isValidLoginid,\n        set,\n        get,\n        getAllLoginids,\n        getAccountType,\n        isAccountOfType,\n        getAccountOfType,\n        hasAccountType,\n        hasCurrencyType,\n        getAccountTitle,\n        responseAuthorize,\n        shouldAcceptTnc,\n        clearAllAccounts,\n        setNewAccount,\n        currentLandingCompany,\n        shouldCompleteTax,\n        getAllAccountsObject,\n        getMT5AccountType,\n        getBasicUpgradeInfo,\n        getLandingCompanyValue,\n        getRiskAssessment,\n        canTransferFunds,\n        hasSvgAccount,\n        canChangeCurrency,\n    };\n})();\n\nmodule.exports = ClientBase;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    classNameSpan,\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    tabIndex,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = classNames('btn', { effect: has_effect }, className);\n    const button = (\n        <button\n            id={id}\n            className={classes}\n            onClick={onClick || undefined}\n            disabled={is_disabled}\n            tabIndex={tabIndex || '0'}\n        >\n            { text &&\n                <span className={classNames('btn__text', classNameSpan)}>\n                    {text}\n                </span>\n            }\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.node,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","import { str as crc32 }     from 'crc-32';\nimport i18n                 from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport * as messages        from 'Translations/messages.json';\n\nconst i18n_config = {\n    resources: {\n        EN: {\n            translation: {\n                ...messages,\n            },\n        },\n    },\n    react: {\n        hashTransKey(defaultValue) {\n            return crc32(defaultValue);\n        },\n    },\n    lng: window.location.search ?\n        window.location.search.includes('lang=') ?\n            window.location.search\n                .substr(1).split('&')\n                .find(query => query.includes('lang='))\n                .split('=')[1]\n                .toUpperCase()\n            : undefined\n        : undefined,\n    fallbackLng: 'EN',\n};\n\ni18n\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init(i18n_config);\n\nexport const localize = (string, values) => i18n.t(crc32(string), { defaultValue: string, ...values });\n\nexport default i18n;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport UILoader  from 'App/Components/Elements/ui-loader.jsx';\n\nconst Lazy = ({\n    should_load = true,\n    ctor,\n    has_progress,\n    ...component_props\n}) => {\n    if (!should_load) {\n        return null;\n    }\n    const LazyLoadedComponent = React.lazy(ctor);\n\n    return (\n        <React.Suspense fallback={has_progress ? <UILoader /> : <div />}>\n            <LazyLoadedComponent {...component_props} />\n        </React.Suspense>\n    );\n};\n\n// Lazy Load the component by default.\nLazy.defaultProps = {\n    should_load : true,\n    has_progress: false,\n};\n\nLazy.propTypes = {\n    ctor        : PropTypes.func.isRequired,\n    has_progress: PropTypes.bool,\n    should_load : PropTypes.bool,\n};\n\nexport default Lazy;\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    positions       : '/reports/positions',\n    profit          : '/reports/profit',\n    reports         : '/reports',\n    root            : '/',\n    redirect        : '/redirect',\n    settings        : '/settings',\n    statement       : '/reports/statement',\n    token           : '/settings/token',\n    trade           : '/',\n};\n\nexport default routes;\n","const moment       = require('moment');\nconst BinarySocket = require('./socket_base');\nconst PromiseClass = require('../utility').PromiseClass;\n\nconst ServerTime = (() => {\n    let clock_started = false;\n    const pending = new PromiseClass();\n    let server_time,\n        performance_request_time,\n        get_time_interval,\n        update_time_interval,\n        onTimeUpdated;\n\n    const init = (fncTimeUpdated) => {\n        if (!clock_started) {\n            onTimeUpdated = fncTimeUpdated;\n            requestTime();\n            clearInterval(get_time_interval);\n            get_time_interval = setInterval(requestTime, 30000);\n            clock_started = true;\n        }\n    };\n\n    const requestTime = () => {\n        performance_request_time = performance.now();\n        BinarySocket.send({ time: 1 }).then(timeCounter);\n    };\n\n    const timeCounter = (response) => {\n        if (response.error) return;\n\n        if (!clock_started) {\n            init();\n            return;\n        }\n\n        clearInterval(update_time_interval);\n\n        const start_timestamp = response.time;\n        const performance_response_time = performance.now();\n        const time_taken = performance_response_time - performance_request_time;\n        const server_time_at_response = ((start_timestamp * 1000) + time_taken);\n\n        const updateTime = () => {\n            const time_since_response = performance.now() - performance_response_time;\n            server_time = moment(server_time_at_response + time_since_response).utc();\n\n            if (typeof onTimeUpdated === 'function') {\n                onTimeUpdated();\n            }\n        };\n        updateTime();\n        pending.resolve();\n        update_time_interval = setInterval(updateTime, 1000);\n    };\n\n    const get = () => server_time ? server_time.clone() : undefined;\n\n    return {\n        init,\n        get,\n        timePromise: pending.promise,\n    };\n})();\n\nmodule.exports = ServerTime;\n","const Cookies       = require('js-cookie');\nconst CookieStorage = require('./storage').CookieStorage;\n\nconst Language = (() => {\n    const all_languages = {\n        ACH  : 'Translations',\n        EN   : 'English',\n        DE   : 'Deutsch',\n        ES   : 'Español',\n        FR   : 'Français',\n        ID   : 'Indonesia',\n        IT   : 'Italiano',\n        PL   : 'Polish',\n        PT   : 'Português',\n        RU   : 'Русский',\n        TH   : 'Thai',\n        VI   : 'Tiếng Việt',\n        ZH_CN: '简体中文',\n        ZH_TW: '繁體中文',\n    };\n    const default_language = 'EN';\n\n    const setCookieLanguage = (lang) => {\n        if (!Cookies.get('language') || lang) {\n            const cookie = new CookieStorage('language');\n            cookie.write((lang || getLanguage()).toUpperCase());\n        }\n    };\n\n    let url_lang = null;\n\n    const lang_regex = new RegExp(`^(${Object.keys(all_languages).join('|')})$`, 'i');\n\n    const languageFromUrl = (custom_url) => {\n        if (url_lang && !custom_url) return url_lang;\n        const url_params = (custom_url || window.location.href).split('/').slice(3);\n        const language   = (url_params.find(lang => lang_regex.test(lang)) || '');\n        if (!custom_url) {\n            url_lang = language;\n        }\n        return language;\n    };\n\n    let current_lang = null;\n\n    const getLanguage = () => {\n        if (/ach/i.test(current_lang) || /ach/i.test(languageFromUrl())) {\n            const crowdin_lang_key = 'jipt_language_code_binary-static';\n            const crowdin_lang     = localStorage.getItem(crowdin_lang_key) || Cookies.get(crowdin_lang_key); // selected language for in-context translation\n            if (crowdin_lang) {\n                current_lang = crowdin_lang.toUpperCase().replace('-', '_').toUpperCase();\n                if (document.body) {\n                    document.body.classList.add(current_lang); // set the body class removed by crowdin code\n                }\n            }\n        }\n        current_lang = (current_lang || (languageFromUrl() || Cookies.get('language') || default_language).toUpperCase());\n        return current_lang;\n    };\n\n    const urlForLanguage = (lang, url = window.location.href) =>\n        url.replace(new RegExp(`/${getLanguage()}/`, 'i'), `/${(lang || default_language).trim().toLowerCase()}/`);\n\n    return {\n        getAll   : () => all_languages,\n        setCookie: setCookieLanguage,\n        get      : getLanguage,\n        urlFor   : urlForLanguage,\n        urlLang  : languageFromUrl,\n        reset    : () => { url_lang = null; current_lang = null; },\n    };\n})();\n\nmodule.exports = Language;\n","import { localize } from 'App/i18n';\nimport { toMoment } from 'Utils/Date';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: +duration[0], // converts string to numbers\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type, duration_units_list } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && (toMoment(expiry_date).isAfter(toMoment(server_time), 'day') ||\n        !hasIntradayDurationUnit(duration_units_list));\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n\nexport const hasIntradayDurationUnit = (duration_units_list) => (\n    duration_units_list.some(unit => ['m', 'h'].indexOf(unit.value) !== -1)\n);\n\n/**\n * On switching symbols, end_time value of volatility indices should be set to today\n *\n * @param {String} symbol\n * @param {String} expiry_type\n * @returns {*}\n */\nexport const resetEndTimeOnVolatilityIndices = (symbol, expiry_type) => (\n    (/^R_/.test(symbol) && expiry_type === 'endtime') ? toMoment(null).format('DD MMM YYYY') : null\n);\n","if (window.NodeList && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = function (callback, thisArg) {\n        thisArg = thisArg || window;\n        for (var i = 0; i < this.length; i++) {\n            callback.call(thisArg, this[i], i, this);\n        }\n    };\n}\n","if (!Element.prototype.closest) {\n    Element.prototype.closest = function(s) {\n        var el = this;\n        if (!document.documentElement.contains(el)) return null;\n        do {\n            if (el.matches(s)) return el;\n            el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1); \n        return null;\n    };\n}\n","Element.prototype.hide = function() {\n    this.style.display = 'none';\n    return this;\n};\n\nElement.prototype.show = function() {\n    this.style.display = '';\n    return this;\n};\n\nif (!('remove' in Element.prototype)) {\n    Element.prototype.remove = function() {\n        if (this.parentNode) {\n            this.parentNode.removeChild(this);\n        }\n        return this;\n    };\n}\n\nElement.prototype.toggleClass = function(class_name, should_add) {\n    if (typeof should_add === 'undefined') { // toggle\n        should_add = !this.classList.contains(class_name);\n    }\n    this.classList[should_add ? 'add' : 'remove'](class_name);\n    return this;\n};\n\nElement.prototype.setVisibility = function(make_visible) {\n    this.toggleClass('invisible', !make_visible);\n    return this;\n};\n\n\nElement.prototype.html = function(content) {\n    if (typeof content === 'object') {\n        this.innerHTML = '';\n        this.appendChild(content);\n    } else {\n        this.innerHTML = content;\n    }\n    return this;\n};\n","import BinarySocket   from './socket_base';\nimport {\n    cloneObject,\n    getPropertyValue,\n    isDeepEqual,\n    isEmptyObject }   from '../utility';\n\n/**\n * A layer over BinarySocket to handle subscribing to streaming calls\n * in order to keep track of subscriptions, manage forget, prevent multiple subscription at the same time, ...\n *\n * structure of the the subscription object is:\n * {\n *     1: { msg_type: 'proposal', request: { ... }, stream_id: '...', subscribers: [ ... ] },\n *     2: ...\n * }\n * object keys: subscription_id that assigned to each subscription\n * msg_type   : msg_type of the request for faster filtering\n * request    : the request object, used to subscribe to the same stream when there is a new subscribe request with exactly the same values\n * stream_id  : id of the stream which stored from its response and used to forget the stream when needed\n * subscribers: an array of callbacks to dispatch the response to\n */\nconst SubscriptionManager = (() => {\n    const subscriptions    = {};\n    const forget_requested = {};\n\n    let subscription_id = 0;\n\n    /**\n     * To submit request for a new subscription\n     *\n     * @param {String}   msg_type             msg_type of the request\n     * @param {Object}   request_obj          the whole object of the request to be made\n     * @param {Function} fncCallback          callback function to pass the responses to\n     * @param {Boolean}  should_forget_first  when it's true: forgets the previous subscription, then subscribes after receiving the forget response (if any)\n     */\n    const subscribe = (msg_type, request_obj, fncCallback, should_forget_first = false) => {\n        if (should_forget_first) {\n            forget(msg_type, fncCallback).then(() => {\n                subscribe(msg_type, request_obj, fncCallback);\n            });\n            return;\n        }\n\n        let sub_id = Object.keys(subscriptions).find(id => isDeepEqual(request_obj, subscriptions[id].request));\n\n        if (!sub_id) {\n            sub_id = ++subscription_id;\n\n            subscriptions[sub_id] = {\n                msg_type,\n                request    : cloneObject(request_obj),\n                stream_id  : '',             // stream_id will be updated after receiving the response\n                subscribers: [fncCallback],\n            };\n\n            BinarySocket.send(request_obj, {\n                callback: (response) => dispatch(response, sub_id),\n            });\n        } else if (!hasCallbackFunction(sub_id, fncCallback)) {\n            // there is already an active subscription for the very same request which fncCallback is not subscribed to it yet\n            subscriptions[sub_id].subscribers.push(fncCallback);\n        }\n    };\n\n    /**\n     * Add subscription without subscribers from request\n     * E.g. open subscription to proposal_open_contract on buy request\n     * @param {String}   msg_type               msg_type of the subscription\n     * @param {Object}   send_request           the object of the request to be made\n     * @param {Object}   subscribe_request      the object of the subscription request\n     * @param {Array}    subscription_props     Array of prop strings to add to subscribe_request from initial request, e.g. contract_id\n     */\n    const addSubscriptionFromRequest = (msg_type, send_request, subscribe_request, subscription_props) =>\n        new Promise((resolve) => {\n            let sub_id;\n            let is_stream = false;\n\n            BinarySocket.send(send_request, {\n                callback: (response) => {\n                    if (response.error) {\n                        return resolve(response);\n                    }\n                    if (!is_stream) {\n                        is_stream = true;\n                        sub_id    = ++subscription_id;\n\n                        if (subscription_props && Array.isArray(subscription_props)) {\n                            subscription_props.forEach((prop) => {\n                                if (response[response.msg_type][prop]) {\n                                    subscribe_request[prop] = response[response.msg_type][prop];\n                                }\n                            });\n                        }\n\n                        subscriptions[sub_id] = {\n                            msg_type,\n                            request    : cloneObject(subscribe_request),\n                            stream_id  : '',             // stream_id will be updated after receiving the response\n                            subscribers: [],\n                        };\n                        return resolve(response);\n                    }\n                    return dispatch(response, sub_id);\n                },\n            });\n        });\n\n    // dispatches the response to subscribers of the specific subscription id (internal use only)\n    const dispatch = (response, sub_id) => {\n        const stream_id = getPropertyValue(response, [response.msg_type, 'id']) || getPropertyValue(response.subscription, ['id']);\n\n        if (!subscriptions[sub_id]) {\n            if (!forget_requested[stream_id]) {\n                forgetStream(stream_id);\n            }\n            return;\n        }\n\n        const sub_info = subscriptions[sub_id];\n        // set the stream_id\n        if (!sub_info.stream_id && stream_id) {\n            sub_info.stream_id = stream_id;\n        }\n\n        // callback subscribers\n        const subscribers = sub_info.subscribers;\n        if (subscribers.length) {\n            if (\n                // it is the first response\n                !sub_info.stream_id &&\n                    (\n                        // the first response returned error\n                        response.error\n                        || (\n                            // not a subscription (i.e. subscribed proposal_open_contract for an expired contract)\n                            // also to filter out streams with no stream id but later it will continue streaming (i.e. proposal_open_contract without contract id)\n                            !isEmptyObject(response[response.msg_type]) &&\n                            // check msg_type to filter out those calls which don't return stream `id` on first response (tick_history, ...)\n                            response.msg_type === sub_info.msg_type\n                        )\n                    )\n                ||\n                // remove when response isn't first and response has no stream_id\n                !stream_id && sub_info.stream_id\n            ) {\n                delete subscriptions[sub_id];\n            }\n            sub_info.subscribers.forEach((fnc) => {\n                fnc(response);\n            });\n        } else {\n            delete subscriptions[sub_id];\n            forgetStream(sub_info.stream_id);\n        }\n    };\n\n    /**\n     * To forget a subscription which submitted for a specific callback function\n     *\n     * @param  {String}   msg_type      msg_type to forget\n     * @param  {Function} fncCallback   the same function passed to subscribe()\n     *     (this is the way to distinguish between different subscribers of the same stream at the same time)\n     * @param  {Object}   match_values  optional, to only forget subscriptions having request that \"contains\" provided values\n     * @return {Promise}  the promise object of all possible forget requests\n     */\n    const forget = (msg_type, fncCallback, match_values) => {\n        if (typeof fncCallback !== 'function') {\n            throw new Error(`Missing callback function. To forget all subscriptions of msg_type: ${msg_type}, please call forgetAll().`);\n        }\n\n        const forgets_list = [];\n        Object.keys(subscriptions).forEach((id) => {\n            if (subscriptions[id].msg_type === msg_type) { // it's the msg_type we are looking for\n                if (!match_values || hasValues(subscriptions[id].request, match_values)) { // the value matches as well\n                    const stream_id = subscriptions[id].stream_id;\n                    if (stream_id && subscriptions[id].subscribers.length === 1) { // there is only one subscriber, so we can forget the call\n                        delete subscriptions[id];\n                        forgets_list.push(forgetStream(stream_id));\n                    } else if (hasCallbackFunction(id, fncCallback)) {\n                        // there are other subscribers, or for some reason there is no stream_id:\n                        // (i.e. returned an error, or forget() being called before the first response)\n                        subscriptions[id].subscribers.splice(subscriptions[id].subscribers.indexOf(fncCallback), 1);\n                    }\n                }\n            }\n        });\n        return Promise.all(forgets_list);\n    };\n\n    /**\n     * To forget all active subscriptions of a list of msg_types\n     *\n     * @param  {String}  msg_types  list of msg_types to forget\n     * @return {Promise} the promise object of all possible forget_all requests\n     */\n    const forgetAll = (...msg_types) => {\n        const types_to_forget = {};\n\n        msg_types.forEach((msg_type) => {\n            const sub_ids = Object.keys(subscriptions).filter(id => subscriptions[id].msg_type === msg_type);\n            if (sub_ids.length) {\n                sub_ids.forEach((id) => {\n                    delete subscriptions[id];\n                });\n                types_to_forget[msg_type] = true;\n            }\n        });\n\n        return Promise.resolve(\n            !isEmptyObject(types_to_forget) ?\n                BinarySocket.send({ forget_all: Object.keys(types_to_forget) }) :\n                {}\n        );\n    };\n\n    const forgetStream = (stream_id) => {\n        forget_requested[stream_id] = true; // to prevent forgetting multiple times\n        return Promise.resolve(\n            stream_id ?\n                BinarySocket.send({ forget: stream_id }).then(() => { delete forget_requested[stream_id]; }) :\n                {}\n        );\n    };\n\n    const hasCallbackFunction = (sub_id, fncCallback) =>\n        (subscriptions[sub_id] && subscriptions[sub_id].subscribers.indexOf(fncCallback) !== -1);\n\n    const hasValues = (request_obj, values_obj) => (\n        typeof request_obj === 'object' &&\n        typeof values_obj  === 'object' &&\n        Object.keys(values_obj).every(key => request_obj[key] === values_obj[key])\n    );\n\n    return {\n        addSubscriptionFromRequest,\n        subscribe,\n        forget,\n        forgetAll,\n        forgetStream,\n    };\n})();\n\nexport default SubscriptionManager;\n","/*\n Responses that should be ignored upon receiving errors.\n We still log them, but having an error inside of these\n will not break the queue and send them to trackjs.\n This will look for predefined `ignored_responses_in_trackjs` from GTM, if\n there is none, then it just does not filter out any response.\n*/\nconst ignored_responses_in_trackjs = window.ignored_responses_in_trackjs || [];\n\nclass ResponseQueue {\n    constructor() {\n        this.list = [];\n        this.size = 3;\n    }\n\n    add (response) {\n        this.list.unshift(response);\n    }\n\n    remove () {\n        this.list.pop();\n    }\n\n    push (response) {\n        if (this.list.length >= this.size) {\n            this.remove();\n        }\n        this.add(response);\n    }\n\n    fresh () {\n        this.list = [];\n    }\n}\n\nconst queue = new ResponseQueue();\n\n/**\n * Listen on method calls and inspect the response to see if error is thrown.\n * Handling the response status is NOT this function's responsibility\n */\nexport const ApiCallProxyHandler = {\n    get(target, prop_key, receiver) {\n        try {\n            const target_value = Reflect.get(target, prop_key, receiver);\n            if (typeof target_value === 'function') {\n                return function(...args) {\n                    const result = target_value.apply(this, args);\n                    if (result instanceof Promise) {\n                        return new Promise((resolve) => {\n                            let return_value;\n                            result.then(response => {\n                                if (response.error) {\n                                    queue.push(response);\n                                    if (window.TrackJS) window.TrackJS.console.log(queue.list);\n                                    queue.fresh();\n                                    if (\n                                        window.TrackJS &&\n                                        !ignored_responses_in_trackjs.some(item => item === response.error.code)\n                                    ) {\n                                        window.TrackJS.track(response.error.code);\n                                    }\n                                }\n                                queue.push(response);\n                                return_value = response;\n                            }).catch(error => {\n                                if (window.TrackJS) {\n                                    window.TrackJS.console.log(queue.list);\n                                    window.TrackJS.track(error.getMessage());\n                                }\n                            }).finally(() => {\n                                resolve(return_value);\n                            });\n                        });\n                    }\n                    return result;\n                }.bind(this);\n            }\n            return target_value;\n        } catch (error) {\n            throw new Error(error.getMessage());\n        }\n    },\n};\n\nexport const trackJSNetworkMonitor = (obj) => new Proxy(obj, ApiCallProxyHandler);\n","import BinarySocket              from '_common/base/socket_base';\nimport SubscriptionManager       from '_common/base/subscription_manager';\nimport { isEmptyObject }         from '_common/utility';\nimport { trackJSNetworkMonitor } from './trackjs';\n\nconst WS = (() => {\n    const activeSymbols = (options) =>\n        BinarySocket.send({ active_symbols: 'brief' }, { msg_type: 'active_symbols', ...(options && options) });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const cashier = (action, verification_code) =>\n        BinarySocket.send({ cashier: action, ...(verification_code && { verification_code }) });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const getTradingTimes = (date) =>\n        BinarySocket.send({ trading_times: date });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const newAccountVirtual = (verification_code, client_password, residence) =>\n        BinarySocket.send({\n            new_account_virtual: 1,\n            verification_code,\n            client_password,\n            residence,\n        });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const profitTable = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ profit_table: 1, description: 1, limit, offset, ...date_boundaries });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const residenceList = () =>\n        BinarySocket.send({ residence_list: 1 });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object, force_request) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object, force_request) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    const verifyEmail = (email, type) =>\n        BinarySocket.send({ verify_email: email, type });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const forgetStream = (stream_id) =>\n        SubscriptionManager.forgetStream(stream_id);\n\n    const subscribeBalance = (cb, is_forced) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb, is_forced);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeProposalOpenContractOnBuy = (buy_request) =>\n        SubscriptionManager.addSubscriptionFromRequest(\n            'proposal_open_contract',\n            { ...buy_request, subscribe: 1 },\n            { proposal_open_contract: 1, subscribe: 1 },\n            ['contract_id'],\n        );\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        cashier,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        getTradingTimes,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        newAccountVirtual,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        profitTable,\n        proposalOpenContract,\n        residenceList,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n        verifyEmail,\n\n        // streams\n        forget,\n        forgetAll,\n        forgetStream,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeProposalOpenContractOnBuy,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default trackJSNetworkMonitor(WS);\n","if (!Element.prototype.matches) {\n    Element.prototype.matches =\n        Element.prototype.matchesSelector ||\n        Element.prototype.mozMatchesSelector ||\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.oMatchesSelector ||\n        Element.prototype.webkitMatchesSelector ||\n        function(s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n}\n","import moment       from 'moment';\nimport { localize } from 'App/i18n';\nimport ServerTime   from '_common/base/server_time';\n\n// Disables moment's fallback to native Date object\n// moment will return `Invalid Date` if date cannot be parsed\nmoment.createFromInputFallback = function (config) {\n    config._d = new Date(NaN); // eslint-disable-line no-underscore-dangle\n};\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return ServerTime.get() || moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    if (typeof value === 'number') return epochToMoment(value); // returns epochToMoment() if not a date\n\n    if (/invalid/i.test(moment(value))) {\n        const today_moment = moment();\n        return value > today_moment.utc().daysInMonth() ? moment.utc(today_moment.add(value, 'd'), 'DD MMM YYYY') : moment.utc(value, 'DD MMM YYYY'); // returns target date\n    }\n    return moment.utc(value);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nexport const setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time ? time.split(':') : [0, 0, 0];\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => toMoment(date).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = toMoment(date).startOf('day').diff(toMoment().startOf('day'), 'days');\n    return (!date || diff < 0) ? '' : diff;\n};\n\n/**\n * return the number of months between two specified dates\n */\nexport const diffInMonths = (now, then) => then.diff(now, 'month');\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str => /^([0-9]|[0-1][0-9]|2[0-3]):([0-9]|[0-5][0-9])(:([0-9]|[0-5][0-9]))?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String|moment} date date\n */\nexport const isDateValid = date => moment(date, 'DD MMM YYYY').isValid();\n\n/**\n * add the specified number of days to the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to add\n */\nexport const addDays = (date, num_of_days) => toMoment(date).clone().add(num_of_days, 'day');\n\n/**\n * add the specified number of months to the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to add\n */\nexport const addMonths = (date, num_of_months) => toMoment(date).clone().add(num_of_months, 'month');\n\n/**\n * add the specified number of years to the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to add\n */\nexport const addYears = (date, num_of_years) => toMoment(date).clone().add(num_of_years, 'year');\n\n/**\n * subtract the specified number of days from the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to subtract\n */\nexport const subDays = (date, num_of_days) => toMoment(date).clone().subtract(num_of_days, 'day');\n\n/**\n * subtract the specified number of months from the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to subtract\n */\nexport const subMonths = (date, num_of_months) => toMoment(date).clone().subtract(num_of_months, 'month');\n\n/**\n * subtract the specified number of years from the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to subtract\n */\nexport const subYears = (date, num_of_years) => toMoment(date).clone().subtract(num_of_years, 'year');\n\n/**\n * returns the minimum moment between the two passing parameters\n * @param {moment|string|epoch} first datetime parameter\n * @param {moment|string|epoch} second datetime parameter\n */\nexport const minDate = (date_1, date_2) => moment.min(toMoment(date_1), toMoment(date_2));\n\n/**\n * returns a new date\n * @param {moment|string|epoch} date date\n */\nexport const getStartOfMonth = (date) => toMoment(date).clone().startOf('month').format('YYYY-MM-DD');\n\n/**\n * returns miliseconds into UTC formatted string\n * @param {Number} miliseconds miliseconds\n * @param {String} str_format formatting using moment e.g - YYYY-MM-DD HH:mm\n */\nexport const formatMiliseconds = (miliseconds, str_format) => moment.utc(miliseconds).format(str_format);\n","export * from './date-time';\n","const isMobile = () => /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\nmodule.exports = {\n    isMobile,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ErrorComponent from './index';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        if (window.TrackJS) window.TrackJS.console.log(this.props.root_store);\n\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    };\n\n    render = () => this.state.hasError ? (\n        <ErrorComponent should_show_refresh={true} />\n    ) : this.props.children;\n}\n\nErrorBoundary.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default connect((store) => (\n    {\n        root_store: store,\n    }\n))(ErrorBoundary);\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst Loading = ({ id, is_slow_loading, status, theme }) => (\n    <div className='initial-loader'>\n        <div id={id} className={`initial-loader__barspinner barspinner barspinner-${ theme || 'light'}`}>\n            { Array.from(new Array(5)).map((x, inx) => (\n                <div key={inx} className={`initial-loader__barspinner--rect barspinner__rect barspinner__rect--${inx + 1} rect${inx + 1}`} />\n            ))}\n        </div>\n        { is_slow_loading && status.map((text, inx) => (\n            <h3 className='initial-loader__text' key={inx}>{text}</h3>\n        ))\n        }\n    </div>\n);\n\nLoading.propTypes = {\n    id: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    is_slow_loading: PropTypes.bool,\n    status         : PropTypes.array,\n    theme          : PropTypes.string,\n};\nexport default Loading;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { Scrollbars } from 'tt-react-custom-scrollbars';\nimport { connect }    from 'Stores/connect';\nimport routes         from 'Constants/routes';\n// import InstallPWA     from './install-pwa.jsx';\nimport Loading        from '../../../templates/app/components/loading.jsx';\n\nconst AppContents = ({\n    // addNotificationBar,\n    children,\n    is_app_blurred,\n    is_contract_mode,\n    is_dark_mode,\n    is_fully_blurred,\n    is_loading,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_slow_loading,\n    location,\n    slow_loading_status,\n    // setPWAPromptEvent,\n}) => {\n    if (is_logged_in) {\n        // TODO: uncomment these after the issues with showing the prompt too often and in the app are fixed\n        // window.addEventListener('beforeinstallprompt', e => {\n        //     console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n        //\n        //     e.preventDefault();\n        //\n        //     setPWAPromptEvent(e);\n        //     addNotificationBar({\n        //         content : <InstallPWA />,\n        //         autoShow: 10000, // show after 10 secs\n        //         msg_type: 'pwa',\n        //     });\n        // });\n    }\n\n    return (\n        <React.Fragment>\n            { is_loading && location.pathname === routes.trade &&\n                <Loading status={slow_loading_status} is_slow_loading={is_slow_loading} theme={is_dark_mode ? 'dark' : 'light'} />\n            }\n            <div\n                id='app_contents'\n                className={classNames('app-contents', {\n                    'app-contents--show-positions-drawer': is_positions_drawer_on,\n                    'app-contents--contract-mode'        : is_contract_mode,\n                    'app-contents--is-blurred'           : (is_fully_blurred || is_app_blurred),\n                })}\n            >\n                {/* Calculate height of user screen and offset height of header and footer */}\n                <Scrollbars\n                    autoHide\n                    style={{ height: 'calc(100vh - 83px)' }}\n                >\n                    {children}\n                </Scrollbars>\n            </div>\n        </React.Fragment>\n    );\n};\n\nAppContents.propTypes = {\n    addNotificationBar    : PropTypes.func,\n    children              : PropTypes.any,\n    is_app_blurred        : PropTypes.bool,\n    is_contract_mode      : PropTypes.bool,\n    is_dark_mode          : PropTypes.bool,\n    is_fully_blurred      : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_slow_loading       : PropTypes.bool,\n    pwa_prompt_event      : PropTypes.object,\n    setPWAPromptEvent     : PropTypes.func,\n    slow_loading_status   : PropTypes.array,\n};\n\nexport default withRouter(connect(\n    ({ client, modules, ui }) => ({\n        // addNotificationBar    : ui.addNotificationBar,\n        is_app_blurred        : ui.is_app_blurred,\n        is_contract_mode      : modules.smart_chart.is_contract_mode,\n        is_dark_mode          : ui.is_dark_mode_on,\n        is_fully_blurred      : ui.is_fully_blurred,\n        is_loading            : ui.is_loading,\n        is_logged_in          : client.is_logged_in,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_slow_loading       : ui.is_slow_loading,\n        pwa_prompt_event      : ui.pwa_prompt_event,\n        slow_loading_status   : ui.slow_loading_status,\n        // setPWAPromptEvent     : ui.setPWAPromptEvent,\n    })\n)(AppContents));\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport { connect }  from 'Stores/connect';\nimport { Popover }  from 'App/Components/Elements/Popover';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status__wrapper'>\n        <Popover\n            classNameBubble='network-status__tooltip'\n            alignment='top'\n            message={localize('Network status: {{status}}', { status: (status.tooltip || localize('Connecting to server')) })}\n        >\n            <div className={classNames(\n                'network-status__circle', {\n                    'network-status__circle--offline': (status.class === 'offline'),\n                    'network-status__circle--online' : (status.class === 'online'),\n                    'network-status__circle--blinker': (status.class === 'blinker'),\n                })}\n            />\n        </Popover>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n\nexport default connect(\n    ({ common }) => ({\n        status: common.network_status,\n    })\n)(NetworkStatus);\n","import classNames from 'classnames';\nimport React      from 'react';\nimport Icon       from 'Assets/icon.jsx';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', 'footer__link', {\n            'ic-fullscreen--active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <Icon icon='IconMaximize' className='footer__icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Icon       from 'Assets/icon.jsx';\n\nconst TogglePositions = ({\n    positions_count,\n    is_positions_drawer_on,\n    togglePositionsDrawer,\n}) => {\n    const toggle_positions_class = classNames(\n        'ic-positions',\n        'footer__link', {\n            'ic-positions--active'   : is_positions_drawer_on,\n            'ic-positions--has-count': (positions_count > 0),\n        }\n    );\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_positions_class}\n            onClick={togglePositionsDrawer}\n            data-count={positions_count}\n        >\n            <Icon icon='IconPositions' className='footer__icon ic-positions__icon' />\n        </a>\n    );\n};\n\nTogglePositions.propTypes = {\n    is_positions_drawer_on: PropTypes.bool,\n    positions_count       : PropTypes.number,\n    togglePositionsDrawer : PropTypes.func,\n};\n\nexport { TogglePositions };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { Modal }    from 'App/Components/Elements/modal.jsx';\nimport UILoader     from 'App/Components/Elements/ui-loader.jsx';\nimport { localize } from 'App/i18n';\nimport Icon         from 'Assets/icon.jsx';\nimport 'Sass/app/modules/settings.scss';\n\nconst modal_content = [\n    {\n        icon : 'IconTheme',\n        label: localize('Themes'),\n        value: React.lazy(() => import(/* webpackChunkName: \"settings-theme\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-theme.jsx')),\n    }, {\n        icon : 'IconLanguage',\n        label: localize('Language'),\n        value: React.lazy(() => import(/* webpackChunkName: \"settings-language\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-language.jsx')),\n    }, {\n        icon : 'IconCharts',\n        label: localize('Charts'),\n        value: React.lazy(() => import(/* webpackChunkName: \"settings-chart\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-chart.jsx')), // uncomment below lines to bring back purchase lock and purchase confirmation\n        // }, {\n        //     icon : IconPurchase,\n        //     label: localize('Purchase'),\n        //     value: PurchaseSettings,\n    },\n];\n\nconst ToggleSettings = ({\n    hideFullBlur,\n    is_settings_visible,\n    showFullBlur,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', 'footer__link', {\n        'ic-settings--active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <Icon icon='IconSettings' className='footer__icon ic-settings__icon' />\n            </a>\n            <React.Suspense fallback={<UILoader />}>\n                <Modal\n                    modal_content={modal_content}\n                    hideFullBlur={hideFullBlur}\n                    is_open={is_settings_visible}\n                    showFullBlur={showFullBlur}\n                    title={localize('Platform settings')}\n                    toggleModal={toggleSettings}\n                />\n            </React.Suspense>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    hideFullBlur       : PropTypes.func,\n    is_settings_visible: PropTypes.bool,\n    showFullBlur       : PropTypes.func,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport { withRouter }                 from 'react-router';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport routes                         from 'Constants/routes';\nimport { connect }                    from 'Stores/connect';\nimport ServerTime                     from '../server-time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePositions,\n    ToggleSettings }                  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    active_positions,\n    hideFullBlur,\n    is_fully_blurred,\n    is_loading,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_route_blurred,\n    is_settings_modal_on,\n    location,\n    showFullBlur,\n    show_positions_toggle,\n    togglePositionsDrawer,\n    toggleSettingsModal,\n}) => (\n    <React.Fragment>\n        { (!is_loading || location.pathname !== routes.trade) &&\n            <footer className={classNames('footer', {\n                'footer--is-blurred': (is_fully_blurred || is_route_blurred),\n            })}\n            >\n                <div className='footer__links footer__links--left'>\n                    {\n                        (is_logged_in && show_positions_toggle) &&\n                        <TogglePositions\n                            is_positions_drawer_on={is_positions_drawer_on}\n                            togglePositionsDrawer={togglePositionsDrawer}\n                            positions_count={active_positions.length || 0}\n                        />\n                    }\n                </div>\n                <NetworkStatus />\n                <ServerTime />\n                <div className='footer__links'>\n                    <ToggleSettings\n                        is_settings_visible={is_settings_modal_on}\n                        toggleSettings={toggleSettingsModal}\n                        showFullBlur={showFullBlur}\n                        hideFullBlur={hideFullBlur}\n                    />\n                    <ToggleFullScreen />\n                </div>\n            </footer>\n        }\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    is_fully_blurred      : PropTypes.bool,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_route_blurred      : PropTypes.bool,\n    is_settings_modal_on  : PropTypes.bool,\n    location              : PropTypes.object,\n    show_positions_toggle : PropTypes.bool,\n    togglePositionsDrawer : PropTypes.func,\n    toggleSettingsModal   : PropTypes.func,\n};\n\nexport default withRouter(connect(\n    ({ client, modules, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        hideFullBlur          : ui.hideFullBlur,\n        is_fully_blurred      : ui.is_fully_blurred,\n        is_route_blurred      : ui.is_route_blurred,\n        is_logged_in          : client.is_logged_in,\n        is_loading            : ui.is_loading,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_settings_modal_on  : ui.is_settings_modal_on,\n        showFullBlur          : ui.showFullBlur,\n        show_positions_toggle : ui.show_positions_toggle,\n        togglePositionsDrawer : ui.togglePositionsDrawer,\n        toggleSettingsModal   : ui.toggleSettingsModal,\n    })\n)(Footer));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ is_logged_in, items }) => (\n    <React.Fragment>\n        {!!items.length &&\n        <div className='header__menu-links'>\n            {\n                items.map((item, idx) => (\n                    (item.login_only && (item.login_only !== is_logged_in)) ?\n                        null\n                        :\n                        <BinaryLink key={idx} to={item.link_to} className='header__menu-link' active_class='header__menu-link--active'>\n                            <React.Fragment>\n                                {item.text &&\n                                    <span title={item.text} className='header__menu-link-text'>{item.icon}{item.text}{item.logo}</span>\n                                }\n                                {item.image &&\n                                    <span className='header__menu-link-text'>{item.image}{item.logo}</span>\n                                }\n                            </React.Fragment>\n                        </BinaryLink>\n                ))\n            }\n        </div>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        is_logged_in: PropTypes.bool,\n        link_to     : PropTypes.string,\n        text        : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from 'App/i18n';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--secondary btn--secondary--orange')}\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nLoginButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { LoginButton };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from 'App/i18n';\nimport { urlFor }          from '_common/url';\nimport Button              from '../../Form/button.jsx';\n\nconst SignupButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Sign up')}\n        onClick={() => { window.open(urlFor('new-account', undefined, undefined, true)); }}\n    />\n);\n\nSignupButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { SignupButton };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ className, onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import * as PropTypes       from 'prop-types';\nimport React, { Component } from 'react';\nimport { formatMoney }      from '_common/base/currency_base';\nimport { urlFor }           from '_common/url';\nimport Button               from 'App/Components/Form/button.jsx';\nimport Lazy                 from 'App/Containers/Lazy';\nimport { localize }         from 'App/i18n';\nimport { LoginButton }      from './login-button.jsx';\nimport { SignupButton }     from './signup-button.jsx';\nimport { UpgradeButton }    from './upgrade-button.jsx';\nimport 'Sass/app/_common/components/account-switcher.scss';\n\nconst should_show_deposit = false; // TODO remove this and all commented props when Deposit is ready\n\nexport class AccountActions extends Component {\n    shouldComponentUpdate(nextProps) {\n        return (\n            // nextProps.active_cashier_tab !== this.props.active_cashier_tab ||\n            nextProps.balance !== this.props.balance ||\n            nextProps.can_upgrade !== this.props.can_upgrade ||\n            nextProps.can_upgrade_to !== this.props.can_upgrade_to ||\n            nextProps.currency !== this.props.currency ||\n            nextProps.is_acc_switcher_on !== this.props.is_acc_switcher_on ||\n            // nextProps.is_cashier_modal_on !== this.props.is_cashier_modal_on ||\n            nextProps.is_logged_in !== this.props.is_logged_in ||\n            nextProps.is_virtual !== this.props.is_virtual ||\n            nextProps.loginid !== this.props.loginid\n        );\n    }\n\n    render() {\n        const {\n            // active_cashier_tab,\n            balance,\n            can_upgrade,\n            can_upgrade_to,\n            currency,\n            // hideFullBlur,\n            is_acc_switcher_on,\n            // is_cashier_modal_on,\n            is_logged_in,\n            is_virtual,\n            loginid,\n            onClickUpgrade,\n            toggleAccountsDialog,\n            // toggleCashierModal,\n            // showFullBlur,\n        } = this.props;\n        if (is_logged_in) {\n            return (\n                <React.Fragment>\n                    <Lazy\n                        ctor={() => import(/* webpackChunkName: \"account-info\", webpackPreload: true */'App/Components/Layout/Header/account-info.jsx')}\n                        should_load={true}\n                        has_progress={false}\n                        balance={formatMoney(currency, balance, true)}\n                        is_upgrade_enabled={can_upgrade}\n                        is_virtual={is_virtual}\n                        onClickUpgrade={onClickUpgrade}\n                        currency={currency}\n                        loginid={loginid}\n                        is_dialog_on={is_acc_switcher_on}\n                        toggleDialog={toggleAccountsDialog}\n                    />\n                    {!!(\n                        can_upgrade_to && is_virtual\n                    ) && <UpgradeButton\n                        className='acc-info__button'\n                        onClick={() => {\n                            window.open(urlFor('user/accounts', undefined, undefined, true));\n                        }}\n                    />}\n                    { should_show_deposit &&\n                    <Lazy\n                        ctor={() => import(/* webpackChunkName: \"toggle-cashier\", webpackPrefetch: true */'App/Components/Layout/Header/toggle-cashier.jsx')}\n                        should_load={!is_virtual} // remove false when cashier is ready.\n                        // active_tab={active_cashier_tab}\n                        className='acc-info__button'\n                        // toggleCashier={toggleCashierModal}\n                        // is_cashier_visible={is_cashier_modal_on}\n                        // showFullBlur={showFullBlur}\n                        // hideFullBlur={hideFullBlur}\n                    />\n                    }\n                    {!(\n                        is_virtual\n                    ) && // TODO: remove this when cashier pop up is ready\n                    <Button\n                        className='btn--primary btn--primary--orange acc-info__button'\n                        has_effect\n                        text={localize('Deposit')}\n                        onClick={() => {\n                            window.open(urlFor('cashier', undefined, undefined, true),\n                                '_blank',\n                                'noopener',\n                                'noreferrer',\n                            );\n                        }}\n                    />}\n                </React.Fragment>\n            );\n        }\n        return (\n            <React.Fragment>\n                <LoginButton className='acc-info__button' />\n                <SignupButton className='acc-info__button' />\n            </React.Fragment>\n        );\n    }\n}\n\nAccountActions.propTypes = {\n    active_cashier_tab  : PropTypes.any,\n    balance             : PropTypes.any,\n    can_upgrade         : PropTypes.any,\n    can_upgrade_to      : PropTypes.any,\n    currency            : PropTypes.any,\n    hideFullBlur        : PropTypes.any,\n    is_acc_switcher_on  : PropTypes.any,\n    is_cashier_modal_on : PropTypes.any,\n    is_logged_in        : PropTypes.any,\n    is_virtual          : PropTypes.any,\n    loginid             : PropTypes.any,\n    onClickUpgrade      : PropTypes.any,\n    showFullBlur        : PropTypes.any,\n    toggleAccountsDialog: PropTypes.any,\n    toggleCashierModal  : PropTypes.any,\n};\n","import React           from 'react';\nimport { localize }    from 'App/i18n';\nimport Icon            from 'Assets/icon.jsx';\nimport { routes }      from 'Constants/index';\n\nconst header_links = [\n    {\n        logo   : <div className='header__logo'>{localize('BETA')}</div>,\n        image  : <Icon icon='IconDeriv' className='header__icon' />,\n        link_to: routes.trade,\n    },\n    {\n        icon      : <Icon icon='IconReports' className='header__icon' />,\n        text      : localize('Reports'),\n        link_to   : routes.reports,\n        login_only: true,\n    },\n];\n\nexport default header_links;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport {\n    AccountActions,\n    MenuLinks,\n    // ToggleCashier,\n}                     from 'App/Components/Layout/Header';\nimport header_links   from 'App/Constants/header-links';\nimport Lazy           from 'App/Containers/Lazy';\nimport routes         from 'Constants/routes';\nimport { connect }    from 'Stores/connect';\n\nconst Header = ({\n    // active_cashier_tab,\n    balance,\n    can_upgrade,\n    can_upgrade_to,\n    currency,\n    // hideFullBlur,\n    is_acc_switcher_on,\n    // is_cashier_modal_on,\n    is_fully_blurred,\n    is_loading,\n    is_logged_in,\n    is_mobile,\n    is_route_blurred,\n    is_virtual,\n    location,\n    loginid,\n    onClickUpgrade,\n    // showFullBlur,\n    toggleAccountsDialog,\n    // toggleCashierModal,\n}) => (\n    <React.Fragment>\n        {(!is_loading || location.pathname !== routes.trade) &&\n            <header className={classNames('header', {\n                'header--is-blurred': (is_fully_blurred || is_route_blurred),\n            })}\n            >\n                <div className='header__menu-items'>\n                    <div className='header__menu-left'>\n                        <Lazy\n                            has_progress={false}\n                            ctor={() => import(/* webpackChunkName: \"toggle-menu-drawer\", webpackPreload: true */'App/Components/Layout/Header/toggle-menu-drawer.jsx')}\n                            should_load={is_mobile}\n                        />\n                        <MenuLinks\n                            is_logged_in={is_logged_in}\n                            items={header_links}\n                        />\n                    </div>\n                    <div className='header__menu-right'>\n                        <div className='acc-info__container'>\n                            <AccountActions\n                                // active_cashier_tab={active_cashier_tab}\n                                balance={balance}\n                                can_upgrade_to={can_upgrade_to}\n                                currency={currency}\n                                can_upgrade={can_upgrade}\n                                // hideFullBlur={hideFullBlur}\n                                is_acc_switcher_on={is_acc_switcher_on}\n                                // is_cashier_modal_on={is_cashier_modal_on}\n                                is_logged_in={is_logged_in}\n                                is_virtual={is_virtual}\n                                loginid={loginid}\n                                onClickUpgrade={onClickUpgrade}\n                                toggleAccountsDialog={toggleAccountsDialog}\n                                // toggleCashierModal={toggleCashierModal}\n                                // showFullBlur={showFullBlur}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </header>\n        }\n    </React.Fragment>\n);\n\nHeader.propTypes = {\n    // active_cashier_tab  : PropTypes.string,\n    balance             : PropTypes.string,\n    can_upgrade         : PropTypes.bool,\n    can_upgrade_to      : PropTypes.string,\n    currency            : PropTypes.string,\n    // hideFullBlur        : PropTypes.func,\n    is_acc_switcher_on  : PropTypes.bool,\n    // is_cashier_modal_on : PropTypes.bool,\n    is_dark_mode        : PropTypes.bool,\n    is_fully_blurred    : PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_logged_in        : PropTypes.bool,\n    is_mobile           : PropTypes.bool,\n    is_route_blurred    : PropTypes.bool,\n    is_virtual          : PropTypes.bool,\n    location            : PropTypes.object,\n    loginid             : PropTypes.string,\n    onClickUpgrade      : PropTypes.func,\n    // showFullBlur        : PropTypes.func,\n    toggleAccountsDialog: PropTypes.func,\n    // toggleCashierModal  : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        // active_cashier_tab  : ui.active_cashier_tab,\n        balance             : client.balance,\n        can_upgrade         : client.can_upgrade,\n        can_upgrade_to      : client.can_upgrade_to,\n        currency            : client.currency,\n        // hideFullBlur        : ui.hideFullBlur,\n        is_loading          : ui.is_loading,\n        is_logged_in        : client.is_logged_in,\n        is_virtual          : client.is_virtual,\n        loginid             : client.loginid,\n        is_acc_switcher_on  : ui.is_accounts_switcher_on,\n        // is_cashier_modal_on : ui.is_cashier_modal_on,\n        is_dark_mode        : ui.is_dark_mode_on,\n        is_fully_blurred    : ui.is_fully_blurred,\n        is_route_blurred    : ui.is_route_blurred,\n        is_mobile           : ui.is_mobile,\n        // showFullBlur        : ui.showFullBlur,\n        toggleAccountsDialog: ui.toggleAccountsDialog,\n        // toggleCashierModal  : ui.toggleCashierModal,\n    })\n)(Header));\n","import React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { urlFor }  from '_common/url';\nimport Lazy        from '../Lazy';\nimport 'Sass/app/modules/modals.scss';\n\n// const AccountSignupModal       = React.lazy(() => import(/* webpackChunkName: \"AccountSignupModal\" */'./Containers/AccountSignupModal'));\n\nconst Modals = ({\n    clearPurchaseInfo,\n    is_initial_idle,\n    is_denial_of_service_modal_visible,\n    is_unsupported_contract_modal_visible,\n    is_market_unavailable_visible,\n    is_services_error_visible,\n    toggleUnsupportedContractModal,\n    setHasOnlyForwardingContracts,\n    resetPreviousSymbol,\n    toggleServicesErrorModal,\n    resetPurchase,\n    services_error,\n    switchAccount,\n    virtual_account_loginid,\n}) => {\n    const denialOfServiceOnCancel = () => {\n        window.open(urlFor('trading', undefined, undefined, true));\n    };\n\n    const denialOfServiceOnConfirm = async () => {\n        await switchAccount(virtual_account_loginid);\n    };\n\n    const marketUnavailableOnConfirm = () => {\n        setHasOnlyForwardingContracts(false);\n        resetPreviousSymbol();\n    };\n\n    const marketUnavailableOnCancel = () => window.open(urlFor('trading', undefined, undefined, true)) &&\n        setHasOnlyForwardingContracts(false);\n\n    const servicesErrorModalOnConfirm = () => {\n        toggleServicesErrorModal(false);\n        if (services_error.type === 'buy') {\n            clearPurchaseInfo();\n            resetPurchase();\n        }\n    };\n\n    const unsupportedContractOnConfirm = () => {\n        window.open(urlFor('user/portfoliows', undefined, undefined, true), '_blank');\n        unsupportedContractOnClose();\n    };\n\n    const unsupportedContractOnClose = () => {\n        toggleUnsupportedContractModal(false);\n    };\n\n    return (\n        <React.Fragment>\n            <Lazy\n                ctor={() => import(/* webpackChunkName: \"UnsupportedContractModal\" */'App/Components/Elements/Modals/UnsupportedContractModal')}\n                should_load={is_initial_idle && is_unsupported_contract_modal_visible}\n                onConfirm={unsupportedContractOnConfirm}\n                onClose={unsupportedContractOnClose}\n                is_visible={is_unsupported_contract_modal_visible}\n            />\n            <Lazy\n                ctor={() => import(/* webpackChunkName: \"DenialOfServiceModal\" */'App/Components/Elements/Modals/DenialOfServiceModal')}\n                should_load={is_initial_idle && is_denial_of_service_modal_visible}\n                onConfirm={denialOfServiceOnConfirm}\n                onCancel={denialOfServiceOnCancel}\n                is_visible={is_denial_of_service_modal_visible}\n            />\n            <Lazy\n                ctor={() => import(/* webpackChunkName: \"MarketUnavailableModal\" */'App/Components/Elements/Modals/MarketUnavailableModal')}\n                should_load={is_initial_idle && is_market_unavailable_visible}\n                onConfirm={marketUnavailableOnConfirm}\n                onCancel={marketUnavailableOnCancel}\n                is_visible={is_market_unavailable_visible}\n            />\n            <Lazy\n                ctor={() => import(/* webpackChunkName: \"ServicesErrorModal\" */'App/Components/Elements/Modals/ServicesErrorModal')}\n                should_load={is_initial_idle && is_services_error_visible}\n                onConfirm={servicesErrorModalOnConfirm}\n                services_error={services_error}\n                is_visible={is_services_error_visible}\n            />\n            {/* TODO: Enable AccountSignupModal once its UI component is ready */}\n            {/* <AccountSignupModal /> */}\n        </React.Fragment>\n    );\n};\n\nexport default connect(({ ui, client, modules, common }) => ({\n    is_initial_idle                      : !ui.is_loading,\n    is_denial_of_service_modal_visible   : !client.is_client_allowed_to_visit,\n    is_market_unavailable_visible        : ui.has_only_forward_starting_contracts,\n    is_services_error_visible            : ui.is_services_error_visible,\n    is_unsupported_contract_modal_visible: ui.is_unsupported_contract_modal_visible,\n    proposal_info                        : modules.trade.proposal_info,\n    purchase_info                        : modules.trade.purchase_info,\n    resetPreviousSymbol                  : modules.trade.resetPreviousSymbol,\n    clearPurchaseInfo                    : modules.trade.clearPurchaseInfo,\n    resetPurchase                        : modules.trade.requestProposal,\n    services_error                       : common.services_error,\n    switchAccount                        : client.switchAccount,\n    setHasOnlyForwardingContracts        : ui.setHasOnlyForwardingContracts,\n    toggleServicesErrorModal             : ui.toggleServicesErrorModal,\n    virtual_account_loginid              : client.virtual_account_loginid,\n}))(Modals);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport Lazy                           from 'App/Containers/Lazy';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return (\n            <Lazy\n                ctor={() => import(/* webpackChunkName: \"error-component\" */'App/Components/Elements/Errors')}\n                should_load={props.has_error}\n                has_progress={true}\n                {...props.error}\n            />\n        );\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.setNetworkStatus(status, is_online);\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action }   from 'mobx';\nimport { localize } from 'App/i18n';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) { // TODO: i18n_issue\n            common_store.showError({\n                message: localize('Your web browser is out of date and may affect your trading experience. Please {{opening_tag}}update your browser{{closing_tag}}.', {\n                    opening_tag  : '<a href=\"http://outdatedbrowser.com\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"link\">',\n                    closing_tag  : '</a>',\n                    interpolation: { escapeValue: false },\n                }),\n                has_html: true,\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import React            from 'react';\nimport { formatDate }   from 'Utils/Date';\nimport { WS }           from 'Services';\nimport { getRiskAssessment,\n    isAccountOfType,\n    shouldAcceptTnc,\n    shouldCompleteTax } from '_common/base/client_base';\nimport { localize }     from 'App/i18n';\nimport {\n    LocalStore,\n    State }             from '_common/storage';\nimport { urlFor }       from '_common/url';\nimport Localize         from '../../App/Components/Elements/localize.jsx';\n\n// TODO: Update links to app_2 links when components are done.\n/* eslint-disable react/jsx-no-target-blank */\nconst client_notifications = {\n    currency: {\n        header : localize('Set Currency'),\n        message: (\n            <Localize\n                i18n_default_text='Please set the <0>currency</0> of your account to enable trading.'\n                components={[<a key={0} className='link link--white' target='_blank' href={urlFor('user/set-currency', undefined, undefined, true)} />]}\n            />\n        ),\n        type: 'danger',\n    },\n    self_exclusion: (excluded_until) => ({\n        header : localize('Self-exclusion Detected'),\n        message: (\n            <Localize\n                i18n_default_text='You have opted to be excluded from Binary.com until {{exclusion_end}}. Please <0>contact us</0> for assistance.'\n                values={{ exclusion_end: formatDate(excluded_until, 'DD/MM/YYYY'), interpolation: { escapeValue: false } }}\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('contact', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    }),\n    authenticate: {\n        header : localize('Account Authentication'),\n        message: (\n            <Localize\n                i18n_default_text='<0>Authenticate your account</0> now to take full advantage of all payment methods available.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/authenticate', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'info',\n    },\n    cashier_locked: {\n        header : localize('Cashier Disabled'),\n        message: localize('Deposits and withdrawals have been disabled on your account. Please check your email for more details.'),\n        type   : 'warning',\n    },\n    withdrawal_locked: {\n        header : localize('Withdrawal Disabled'),\n        message: localize('Withdrawals have been disabled on your account. Please check your email for more details.'),\n        type   : 'warning',\n    },\n    mt5_withdrawal_locked: {\n        header : localize('MT5 Withdrawal Disabled'),\n        message: localize('MT5 withdrawals have been disabled on your account. Please check your email for more details.'),\n        type   : 'warning',\n    },\n    document_needs_action: {\n        header : localize('Authentication Failed'),\n        message: (\n            <Localize\n                i18n_default_text='<0>Your Proof of Identity or Proof of Address</0> did not meet our requirements. Please check your email for further instructions.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/authenticate', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'warning',\n    },\n    unwelcome: {\n        header : localize('Trading and Deposits Disabled'),\n        message: (\n            <Localize\n                i18n_default_text='Trading and deposits have been disabled on your account. Kindly contact <0>customer support</0> for assistance.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('contact', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    mf_retail: {\n        header : localize('Binary Options Trading Disabled'),\n        message: (\n            <Localize\n                i18n_default_text='Binary Options Trading has been disabled on your account. Kindly contact <0>customer support</0> for assistance.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('contact', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    financial_limit: {\n        header : localize('Remove Deposit Limits'),\n        message: (\n            <Localize\n                i18n_default_text='Please set your <0>30-day turnover limit</0> to remove deposit limits.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/security/self_exclusionws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'warning',\n    },\n    risk: {\n        header : localize('Withdrawal and Trading Limits'),\n        message: (\n            <Localize\n                i18n_default_text='Please complete the <0>Financial Assessment form</0> to lift your withdrawal and trading limits.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/settings/assessmentws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'info',\n    },\n    tax: {\n        header : localize('Complete your personal details'),\n        message: (\n            <Localize\n                i18n_default_text='Please complete your <0>Personal Details</0> before you proceed.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/settings/detailsws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    tnc: {\n        header : localize('Terms & Conditions Updated'),\n        message: (\n            <Localize\n                i18n_default_text='Please <0>accept the updated Terms and Conditions</0> to enable deposit and trading.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/tnc_approvalws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    required_fields: {\n        header : localize('Complete your personal details'),\n        message: (\n            <Localize\n                i18n_default_text='Please complete your <0>Personal Details</0> before you proceed.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/settings/detailsws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n};\n\nconst hasMissingRequiredField = (response, client) => {\n    if (!response.get_settings) return false;\n\n    const { landing_company_shortcode } = client;\n    const is_svg = (landing_company_shortcode === 'svg' || landing_company_shortcode === 'costarica');\n\n    let required_fields;\n    if (is_svg) {\n        required_fields = getSVGRequiredFields();\n    } else {\n        required_fields = getRequiredFields();\n    }\n\n    const get_settings = response.get_settings;\n    return required_fields.some(field => !get_settings[field]);\n\n    function getSVGRequiredFields() {\n        const necessary_withdrawal_fields = State.getResponse('landing_company.financial_company.requirements.withdrawal');\n        const necessary_signup_fields     = State.getResponse('landing_company.financial_company.requirements.signup')\n            .map(field => (field === 'residence' ? 'country' : field));\n\n        return [...necessary_withdrawal_fields, ...necessary_signup_fields];\n    }\n\n    function getRequiredFields() {\n        if (!isAccountOfType('financial')) return [];\n        const { residence } = client;\n\n        const required_settings_fields = [\n            'account_opening_reason',\n            'address_line_1',\n            'address_city',\n            'phone',\n            'tax_identification_number',\n            'tax_residence'];\n        const address_postcode_is_required = (residence === 'gb' || landing_company_shortcode === 'iom');\n        if (address_postcode_is_required) required_settings_fields.push('address_postcode');\n\n        return [...required_settings_fields];\n    }\n};\n\nconst checkAccountStatus = (response, client, addNotification, loginid) => {\n    if (!response.get_account_status) return;\n    if (loginid !== LocalStore.get('active_loginid')) return;\n\n    const { prompt_client_to_authenticate, status } = response.get_account_status;\n\n    const {\n        document_under_review,\n        cashier_locked,\n        withdrawal_locked,\n        mt5_withdrawal_locked,\n        document_needs_action,\n        unwelcome,\n        ukrts_max_turnover_limit_not_set,\n        professional,\n    } = getStatusValidations(status);\n    const is_mf_retail = client.landing_company_shortcode === 'maltainvest' && !professional;\n\n    if (cashier_locked)        addNotification(client_notifications.cashier_locked);\n    if (withdrawal_locked)     addNotification(client_notifications.withdrawal_locked);\n    if (mt5_withdrawal_locked) addNotification(client_notifications.mt5_withdrawal_locked);\n    if (document_needs_action) addNotification(client_notifications.document_needs_action);\n    if (unwelcome)             addNotification(client_notifications.unwelcome);\n    if (is_mf_retail)          addNotification(client_notifications.mf_retail);\n    if (ukrts_max_turnover_limit_not_set) {\n        addNotification(client_notifications.financial_limit);\n    }\n    if (getRiskAssessment()) addNotification(client_notifications.risk);\n    if (shouldCompleteTax()) addNotification(client_notifications.tax);\n\n    if ((+prompt_client_to_authenticate) && !(document_under_review || document_needs_action)) {\n        addNotification(client_notifications.authenticate);\n    }\n\n    function getStatusValidations(status_arr) {\n        return status_arr.reduce((validations, account_status) => {\n            validations[account_status] = true;\n            return validations;\n        }, {});\n    }\n};\n\nexport const handleClientNotifications = (client, addNotification, loginid) => {\n    const { currency, excluded_until } = client;\n    if (!currency)         addNotification(client_notifications.currency);\n    if (excluded_until)    addNotification(client_notifications.self_exclusion(excluded_until));\n\n    WS.getAccountStatus().then((response) => checkAccountStatus(response, client, addNotification, loginid));\n\n    WS.sendRequest({ get_settings: 1 }, { forced: true }).then((response) => {\n        if (loginid !== LocalStore.get('active_loginid')) return;\n\n        if (shouldAcceptTnc()) addNotification(client_notifications.tnc);\n\n        if (hasMissingRequiredField(response, client)) {\n            addNotification(client_notifications.required_fields);\n        }\n    });\n};\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport { getElementById }        from '_common/common_functions';\nimport { localize }              from 'App/i18n';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = value => /(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value);\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === getElementById(options.to.substr(1)).value;\nconst validNotEqual = (value, options) => value !== getElementById(options.to.substr(1)).value;\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to {{decimal_count}} decimal places are allowed.', { decimal_count: options.decimals });\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be {{value}}', { value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined) });\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize(\n            'Should be between {{min_value}} and {{max_value}}',\n            {\n                min_value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined),\n                max_value: addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined),\n            }\n        );\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than {{min_value}}', { min_value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined) });\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than {{max_value}}', { max_value: addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined) });\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: {{permitted_characters}}', { permitted_characters: '- . \\' # ; : ( ) , @ /' }) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: {{permitted_characters}}', { permitted_characters: '+ - .' }) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter {{value}} characters.', { value: '{{value}}' }) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of {{value}} characters required.', { value: '{{value}}' }) },\n    not_equal    : { func: validNotEqual,     message: localize('{{value_one}} and {{value_two}} cannot be the same.', { value_one: '{{value_one}}', value_two: '{{value_two}}' }) },\n    number       : { func: validNumber,       message: '' }, // TODO: i18n_issue\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative-validation-rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport BinarySocket      from '_common/base/socket_base';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    @observable partial_fetch_time = 0;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n            store_name,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        const has_local_or_session_storage = local_storage_properties && local_storage_properties.length\n            || session_storage_properties && session_storage_properties.length;\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value     : store_name,\n                enumerable: false,\n                writable  : false,\n            });\n        }\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param [{String}] messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        const is_different = () => !!this.validation_errors[propertyName]\n            .filter(x => !messages.includes(x))\n            .concat(messages.filter(x => !this.validation_errors[propertyName].includes(x)))\n            .length;\n        if (!this.validation_errors[propertyName] || is_different()) {\n            this.validation_errors[propertyName] = messages;\n        }\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        const validation_rules  = Object.keys(this.validation_rules);\n        const validation_errors = Object.keys(this.validation_errors);\n\n        validation_rules.forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n\n        // Remove keys that are present in error, but not in rules:\n        validation_errors.forEach(error => {\n            if (!validation_rules.includes(error)) {\n                delete this.validation_errors[error];\n            }\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n\n    @action.bound\n    assertHasValidCache(loginid, ...reactions) {\n        // account was changed when this was unmounted.\n        if (this.root_store.client.loginid !== loginid) {\n            reactions.forEach(act => act());\n            this.partial_fetch_time = false;\n        }\n    }\n\n    waitFor = async (...prerequisites) => {\n        await BinarySocket.wait(...prerequisites);\n    };\n}\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from 'App/i18n';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        const isCrypto = isCryptocurrency(cur);\n        (isCrypto ? crypto : fiat).push({ text: cur, value: cur, has_tooltip: isCrypto });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import {\n    action,\n    computed,\n    observable,\n    runInAction,\n    when,\n}                                    from 'mobx';\nimport moment                        from 'moment';\nimport {\n    requestLogout,\n    WS }                             from 'Services';\nimport { getAccountTitle }           from '_common/base/client_base';\nimport BinarySocket                  from '_common/base/socket_base';\nimport * as SocketCache              from '_common/base/socket_cache';\nimport { localize }                  from 'App/i18n';\nimport {\n    LocalStore,\n    State }                          from '_common/storage';\nimport BinarySocketGeneral           from 'Services/socket-general';\nimport { handleClientNotifications } from './Helpers/client-notifications';\nimport BaseStore                     from './base-store';\nimport { buildCurrenciesList }       from './Modules/Trading/Helpers/currency';\nimport { setCurrencies }             from '../_common/base/currency_base';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable email;\n    @observable switched                   = '';\n    @observable switch_broadcast           = false;\n    @observable currencies_list            = {};\n    @observable residence_list             = [];\n    @observable selected_currency          = '';\n    @observable is_populating_account_list = false;\n    @observable website_status             = {};\n    @observable verification_code          = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual || this.accounts[this.loginid].landing_company_shortcode === 'svg'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return this.accounts && this.accounts[this.loginid] && !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi);\n    }\n\n    @computed\n    get can_upgrade_to() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade_to);\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .find(loginid => !!this.accounts[loginid].is_virtual);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].accepted_bch = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('svg', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().utc().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n        this.user_id      = response.authorize.user_id;\n    }\n\n    @action.bound\n    setWebsiteStatus(response) {\n        this.website_status = response.website_status;\n        setCurrencies(this.website_status);\n    }\n\n    @computed\n    get is_website_status_ready () {\n        return this.website_status &&\n        this.website_status.site_status === 'up';\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            if (this.accounts[account.loginid]) {\n                this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n                Object.keys(account).forEach((param) => {\n                    const param_to_set = param === 'country' ? 'residence' : param;\n                    const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                    if (param_to_set !== 'loginid') {\n                        this.accounts[account.loginid][param_to_set] = value_to_set;\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.root_store.ui.removeAllNotifications();\n        this.setSwitched(loginid);\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n        this.root_store.ui.is_app_blurred = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        const authorize_response = await this.setUserLogin();\n        this.setLoginId(LocalStore.get('active_loginid'));\n        this.setAccounts(LocalStore.getObject(storage_key));\n        this.setSwitched('');\n        const client = this.accounts[this.loginid];\n\n        // If there is an authorize_response, it means it was the first login\n        if (authorize_response) {\n            // If this fails, it means the landing company check failed\n            if (this.loginid === authorize_response.authorize.loginid) {\n                BinarySocketGeneral.authorizeAccount(authorize_response);\n            } else { // So it will send an authorize with the accepted token, to be handled by socket-general\n                await BinarySocket.send({ authorize: client.token }, { forced: true });\n            }\n        }\n\n        if (client && !client.is_virtual) {\n            BinarySocket.wait('landing_company', 'website_status').then(() => {\n                handleClientNotifications(client, this.root_store.ui.addNotification, this.loginid);\n            });\n        }\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    @action.bound\n    setLoginId(loginid) {\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    setAccounts(accounts) {\n        this.accounts = accounts;\n    }\n\n    @action.bound\n    setSwitched(switched) {\n        this.switched = switched;\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addNotification({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'danger',\n                });\n                // request a logout\n                requestLogout();\n                this.root_store.modules.trade.clearContract();\n                return;\n            }\n\n            this.root_store.modules.portfolio.clearTable();\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addNotification({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        this.root_store.gtm.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n        this.email = email;\n    }\n\n    @action.bound\n    cleanUp() {\n        this.root_store.gtm.pushDataLayer({ event: 'log_out' });\n        this.loginid = null;\n        this.upgrade_info = undefined;\n        this.accounts = [];\n        this.currencies_list  = {};\n        this.selected_currency = '';\n        this.root_store.modules.smart_chart.should_refresh_active_symbols = true;\n        return new Promise(async (resolve) => {\n            await this.root_store.modules.trade.clearContract();\n            await this.root_store.modules.trade.resetErrorServices();\n            await this.root_store.ui.removeAllNotifications();\n            await this.root_store.modules.trade.refresh();\n            return resolve(this.root_store.modules.trade.debouncedProposal());\n        });\n    }\n\n    /* eslint-disable */\n    @action.bound\n    storeClientAccounts(obj_params, account_list) {\n        // store consistent names with other API calls\n        // API_V4: send consistent names\n        const map_names = {\n            country             : 'residence',\n            landing_company_name: 'landing_company_shortcode',\n        };\n        const client_object = {};\n        let active_loginid;\n\n        let is_allowed_real = true;\n        // Performs check to avoid login of landing companies that are currently not supported in app\n        account_list.forEach(function(account) {\n            if (!/^virtual|svg$/.test(account.landing_company_name)) {\n                is_allowed_real = false;\n            }\n        });\n\n        account_list.forEach(function(account) {\n            Object.keys(account).forEach(function(param) {\n                if (param === 'loginid') {\n                    if (!active_loginid && !account.is_disabled) {\n                        if (is_allowed_real && !account.is_virtual) {\n                            active_loginid = account[param];\n                        } else if (account.is_virtual) { // TODO: [only_virtual] remove this to stop logging non-SVG clients into virtual\n                            active_loginid = account[param];\n                        }\n                    }\n                } else {\n                    const param_to_set = map_names[param] || param;\n                    const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                    if (!(account.loginid in client_object)) {\n                        client_object[account.loginid] = {};\n                    }\n                    client_object[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n\n        let i = 1;\n        while (obj_params[`acct${  i}`]) {\n            const loginid = obj_params[`acct${  i}`];\n            const token   = obj_params[`token${  i}`];\n            if (loginid && token) {\n                client_object[loginid].token = token;\n            }\n            i++;\n        }\n\n        // if didn't find any login ID that matched the above condition\n        // or the selected one doesn't have a token, set the first one\n        if (!active_loginid || !client_object[active_loginid].token) {\n            active_loginid = obj_params.acct1;\n        }\n\n        // TODO: send login flag to GTM if needed\n\n        if (active_loginid && Object.keys(client_object).length) {\n            localStorage.setItem('active_loginid', active_loginid);\n            localStorage.setItem('client.accounts', JSON.stringify(client_object));\n        }\n    }\n\n    @action.bound\n    async setUserLogin() {\n        const obj_params = {};\n        const search     = window.location.search;\n        if (search) {\n            const arr_params = window.location.search.substr(1).split('&');\n            arr_params.forEach(function(param) {\n                if (param) {\n                    const param_value = param.split('=');\n                    if (param_value) {\n                        obj_params[param_value[0]] = param_value[1];\n                    }\n                }\n            });\n        }\n        const is_client_logging_in = obj_params.token1;\n\n        if (is_client_logging_in) {\n            window.history.replaceState({}, document.title, '/');\n\n            // is_populating_account_list is used for socket general to know not to filter the first-time logins\n            this.is_populating_account_list = true;\n            const authorize_response = await BinarySocket.send({ authorize: obj_params.token1 });\n            this.is_populating_account_list = false;\n            runInAction(() => {\n                const account_list = (authorize_response.authorize || {}).account_list;\n                if (account_list && !this.accounts) {\n                    this.storeClientAccounts(obj_params, account_list);\n                }\n            });\n            return authorize_response;\n        }\n    }\n\n    @action.bound\n    setVerificationCode(code) {\n        this.verification_code = code;\n        if (code) {\n            LocalStore.set('verification_code', code);\n        } else {\n            LocalStore.remove('verification_code');\n        }\n        // TODO: add await if error handling needs to happen before AccountSignup is initialised\n        // this.fetchResidenceList(); // Prefetch for use in account signup process\n    }\n\n    @action.bound\n    onSignup({ password, residence }) {\n        if (!this.verification_code || !password || !residence) return;\n\n        // Currently the code doesn't reach here and the console log is needed for debugging.\n        // TODO: remove console log when AccountSignup component and validation are ready\n        WS.newAccountVirtual(this.verification_code, password, residence).then(response => console.log(response));\n    }\n\n    fetchResidenceList() {\n        WS.residenceList().then(response => {\n            runInAction(() => {\n                this.residence_list = response.residence_list || [];\n            })\n        });\n    }\n}\n/* eslint-enable */\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base-store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @observable services_error = {};\n\n    @observable deposit_url = '';\n    @observable withdraw_url = '';\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setNetworkStatus(status, is_online) {\n        if (this.network_status.class) {\n            this.network_status.class   = status.class;\n            this.network_status.tooltip = status.tooltip;\n        } else {\n            this.network_status = status;\n        }\n        this.is_network_online = is_online;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type: error ? error.type : 'info',\n            ...(error && {\n                header             : error.header,\n                message            : error.message,\n                redirect_label     : error.redirect_label,\n                redirectOnClick    : error.redirectOnClick,\n                should_show_refresh: error.should_show_refresh,\n            }),\n        };\n    }\n\n    @action.bound\n    showError(message, header, redirect_label, redirectOnClick, should_show_refresh) {\n        this.setError(true, {\n            header,\n            message,\n            redirect_label,\n            redirectOnClick,\n            should_show_refresh,\n            type: 'error',\n        });\n    }\n\n    @action.bound\n    setDepositURL(deposit_url) {\n        this.deposit_url = deposit_url;\n    }\n\n    @action.bound\n    setWithdrawURL(withdraw_url) {\n        this.withdraw_url = withdraw_url;\n    }\n}\n","import {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport BinarySocket           from '_common/base/socket_base';\nimport { isLoginPages }       from '_common/base/login';\nimport { get as getLanguage } from '_common/language';\nimport BaseStore              from './base-store';\nimport { getAppId }           from '../config';\n\nexport default class GTMStore extends BaseStore {\n    @observable is_gtm_applicable = /^(16303|16929)$/.test(getAppId());\n\n    constructor(root_store) {\n        super({ root_store });\n\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @computed\n    get visitorId() {\n        return this.root_store.client.loginid;\n    }\n\n    @computed\n    get currency() {\n        return this.root_store.client.currency;\n    }\n\n    /**\n     * Contains common data that will be passed to GTM on each datalayer push\n     *\n     * @returns {object}\n     */\n    @computed\n    get common_variables() {\n        return {\n            language: getLanguage(),\n            ...this.root_store.client.is_logged_in && {\n                visitorId: this.visitorId,\n                currency : this.currency,\n                userId   : this.root_store.client.user_id,\n            },\n            ...this.root_store.ui.is_dark_mode_on && {\n                theme: this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n            },\n        };\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => resolve(this.pushDataLayer({ event: 'account switch' })));\n    }\n\n    /**\n     * Pushes provided data as GTM DataLayer\n     *\n     * @param {object} data\n     */\n    @action.bound\n    async pushDataLayer(data) {\n        if (this.is_gtm_applicable && !isLoginPages()) {\n            BinarySocket.wait('authorize').then(() => {\n                dataLayer.push({\n                    ...this.common_variables,\n                    ...data,\n                });\n            });\n        }\n    }\n\n    @action.bound\n    pushPurchaseData(contract_data) {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                positions_drawer: this.root_store.ui.is_positions_drawer_on ? 'open' : 'closed',\n                // purchase_confirm: this.root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: this.root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: this.root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : this.root_store.modules.smart_chart.chart_type,\n                    granularity     : this.root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        this.pushDataLayer(data);\n    }\n\n    @action.bound\n    setLoginFlag(event_name) {\n        if (this.is_gtm_applicable) {\n            localStorage.setItem('GTM_login', event_name);\n        }\n    }\n}\n","import {\n    action,\n    observable }            from 'mobx';\nimport { isCryptocurrency } from '_common/base/currency_base';\nimport { WS }               from 'Services';\nimport BaseStore            from '../../base-store';\n\nexport default class CashierStore extends BaseStore {\n    @observable is_loading       = false;\n    @observable container_height = 0;\n    @observable error_message    = '';\n\n    @observable container_urls = {\n        deposit : '',\n        withdraw: '',\n    };\n\n    @observable is_session_timeout = {\n        deposit : false,\n        withdraw: false,\n    };\n\n    @observable is_verification_button_clicked = false;\n    @observable is_verification_email_sent     = false;\n\n    containers = {\n        deposit : 'deposit',\n        withdraw: 'withdraw',\n    };\n\n    default_cashier_height = 1200;\n\n    timeout_cashier_url = {\n        deposit : '',\n        withdraw: '',\n    };\n\n    timeout_verification_button;\n\n    constructor({ root_store }) {\n        super({ root_store });\n\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    async onMount(container, verification_code) {\n        if (!['deposit', 'withdraw'].includes(container)) {\n            throw new Error('Cahshier Store onMount requires deposit or cashier as a container name');\n        }\n        this.setErrorMessage('');\n        this.setContainerHeight(0);\n        this.setLoading(true);\n\n        if (this.container_urls[container] && !this.is_session_timeout[container]) {\n            this.checkIframeLoaded();\n            return;\n        }\n\n        this.setSessionTimeout(false, this.containers[container]);\n\n        this.setContainerUrl('', this.containers[container]);\n        const response_cashier = await WS.cashier(this.containers[container], verification_code);\n\n        // TODO: uncomment this if cross origin access is allowed\n        // const xhttp = new XMLHttpRequest();\n        // const that = this;\n        // xhttp.onreadystatechange = function() {\n        //     if (this.readyState !== 4 || this.status !== 200) {\n        //         return;\n        //     }\n        //     that.setContainerUrl(this.responseText, this.containers[container]);\n        // };\n        // xhttp.open('GET', response_cashier.cashier, true);\n        // xhttp.send();\n\n        // TODO: error handling UI & custom messages\n        if (response_cashier.error) {\n            this.setLoading(false);\n            this.setErrorMessage(response_cashier.error.message);\n            if (verification_code) {\n                // clear verification code on error\n                this.clearVerification();\n            }\n        } else {\n            await this.checkIframeLoaded();\n            this.setContainerUrl(response_cashier.cashier, this.containers[container]);\n            this.setTimeoutCashierUrl(container);\n        }\n    }\n\n    @action.bound\n    async onMountDeposit() {\n        await this.onMount('deposit');\n    }\n\n    @action.bound\n    async checkIframeLoaded() {\n        window.removeEventListener('message', this.onIframeLoaded);\n        if (isCryptocurrency(this.root_store.client.currency)) {\n            this.setLoading(false);\n            this.setContainerHeight('540');\n            // crypto cashier can only be accessed once and the session expires\n            this.clearTimeoutCashierUrl(this.root_store.ui.active_cashier_tab);\n            this.setSessionTimeout(true, this.root_store.ui.active_cashier_tab);\n        } else {\n            window.addEventListener('message', this.onIframeLoaded, false);\n        }\n    }\n\n    @action.bound\n    onIframeLoaded(e) {\n        this.setLoading(false);\n        // set the height of the container after content loads so that the\n        // loading bar stays vertically centered until the end\n        this.setContainerHeight(+e.data || this.default_cashier_height);\n    }\n\n    @action.bound\n    setContainerUrl(url, container) {\n        if (this.container_urls[container] !== url) {\n            this.container_urls[container] = url;\n        }\n    }\n\n    @action.bound\n    setContainerHeight(height) {\n        this.container_height = height;\n    }\n\n    @action.bound\n    setErrorMessage(message) {\n        this.error_message = message;\n    }\n\n    @action.bound\n    setLoading(is_loading) {\n        this.is_loading = is_loading;\n    }\n\n    @action.bound\n    setSessionTimeout(is_session_time_out, container) {\n        this.is_session_timeout[container] = is_session_time_out;\n    }\n\n    @action.bound\n    setVerificationButtonClicked(is_verification_button_clicked) {\n        this.is_verification_button_clicked = is_verification_button_clicked;\n    }\n\n    @action.bound\n    setVerificationEmailSent(is_verification_email_sent) {\n        this.is_verification_email_sent = is_verification_email_sent;\n    }\n\n    clearTimeoutCashierUrl(container) {\n        if (this.timeout_cashier_url[container]) {\n            clearTimeout(this.timeout_cashier_url[container]);\n        }\n    }\n\n    // cashier session expires after one minute\n    // so we should resend the request for container (deposit|withdraw) url on next mount\n    @action.bound\n    setTimeoutCashierUrl(container) {\n        this.clearTimeoutCashierUrl(container);\n        this.timeout_cashier_url[container] = setTimeout(() => {\n            this.setSessionTimeout(true, container);\n        }, 60000);\n    }\n\n    clearTimeoutVerification() {\n        if (this.timeout_verification_button) {\n            clearTimeout(this.timeout_verification_button);\n        }\n    }\n\n    // verification token expires after one hour\n    // so we should show the verification request button again after that\n    @action.bound\n    setTimeoutVerification() {\n        this.clearTimeoutVerification();\n        this.timeout_verification_button = setTimeout(() => {\n            this.clearVerification();\n        }, 3600000);\n    }\n\n    @action.bound\n    async onMountWithdraw(verification_code) {\n        await this.onMount('withdraw', verification_code);\n    }\n\n    @action.bound\n    async sendVerificationEmail(email) {\n        if (this.is_verification_button_clicked) {\n            return;\n        }\n\n        this.setVerificationButtonClicked(true);\n        const response_verify_email = await WS.verifyEmail(email, 'payment_withdraw');\n\n        if (response_verify_email.error) {\n            this.setVerificationButtonClicked(false);\n            this.setErrorMessage(response_verify_email.error.message);\n        } else {\n            this.setVerificationEmailSent(true);\n            this.setTimeoutVerification();\n        }\n    }\n\n    clearVerification() {\n        this.clearTimeoutVerification();\n        this.setVerificationButtonClicked(false);\n        this.setVerificationEmailSent(false);\n        this.root_store.client.setVerificationCode('');\n    }\n\n    @action.bound\n    setActiveTab(container) {\n        // used to detect if old tabs with withdrawal tab open should be closed after verification token is opened in new tab\n        this.root_store.ui.setCashierActiveTab(container);\n    }\n\n    onUnmount() {\n        this.clearVerification();\n        Object.keys(this.containers).forEach((container) => {\n            this.clearTimeoutCashierUrl(container);\n            this.setSessionTimeout(true, container);\n        });\n    }\n\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => resolve(this.onUnmount()));\n    }\n}\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    CALLE      : 'ABOVE',\n    PUTE       : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n    ASIANU     : 'ABOVE',\n    ASIAND     : 'BELOW',\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN    : '#39b19d',\n    RED      : 'red',\n    GRAY     : '#999cac',\n    DARK_GRAY: '#555975',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","import {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info, is_dark_mode) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {   color        : is_dark_mode ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY,\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import classNames           from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Icon         from 'Assets/icon.jsx';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n    marker_config,\n    status,\n}) => {\n    // TODO: Find a more elegant solution\n    if (!marker_config) return <div />;\n    return (\n        <div className={classNames('chart-marker-line__wrapper', `chart-marker-line--${line_style}`)}>\n            { label === marker_config.LINE_END.content_config.label &&\n                <Icon\n                    icon='IconEndTime'\n                    className={classNames('chart-marker-line__icon', {\n                        'chart-marker-line__icon--won' : status === 'won',\n                        'chart-marker-line__icon--lost': status === 'lost',\n                    })}\n                />\n            }\n            { label === marker_config.LINE_START.content_config.label &&\n                <Icon\n                    icon='IconStartTime'\n                    className={classNames(\n                        'chart-marker-line__icon',\n                        'chart-marker-line__icon--time',\n                    )}\n                />\n            }\n        </div>\n    );\n};\n\nMarkerLine.propTypes = {\n    label        : PropTypes.string,\n    line_style   : PropTypes.string,\n    marker_config: PropTypes.object,\n    status       : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes     from 'prop-types';\nimport React        from 'react';\n\nconst MarkerSpot = ({\n    className,\n    spot_count,\n}) => (\n    <div\n        className={classNames('chart-spot', className)}\n    >{spot_count}\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    className : PropTypes.string,\n    spot_count: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n};\n\nexport default observer(MarkerSpot);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\nimport { toMoment } from 'Utils/Date';\nimport Icon         from 'Assets/icon.jsx';\nimport MarkerSpot   from './marker-spot.jsx';\n\nclass MarkerSpotLabel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show_label: !this.props.has_hover_toggle,\n        };\n    }\n\n    handleHoverToggle = () => {\n        this.setState((state) =>  ({ show_label: !state.show_label }));\n    }\n\n    render() {\n        let marker_spot =\n            <MarkerSpot\n                className={this.props.spot_className}\n                spot_count={this.props.spot_count}\n            />;\n\n        if (this.props.has_hover_toggle) {\n            marker_spot =\n                <div className='marker-hover-container' onMouseEnter={this.handleHoverToggle} onMouseLeave={this.handleHoverToggle}>\n                    { marker_spot }\n                </div>;\n        }\n\n        return (\n            <div className={'chart-spot-label'}>\n                {this.state.show_label &&\n                    <div className='chart-spot-label__info-container'>\n                        <div className={`chart-spot-label__time-value-container chart-spot-label__time-value-container--${this.props.align_label}`}>\n                            <div className='chart-spot-label__time-container'>\n                                <Icon icon='IconClock' height='10' width='10' className='chart-spot-label__time-icon' />\n                                <p className='chart-spot-label__time'>{toMoment(+this.props.spot_epoch).format('HH:mm:ss')}</p>\n                            </div>\n                            <div\n                                className={classNames('chart-spot-label__value-container', {\n                                    'chart-spot-label__value-container--won' : this.props.status === 'won',\n                                    'chart-spot-label__value-container--lost': this.props.status === 'lost',\n                                })}\n                            >\n                                <p>{addComma(this.props.spot_value)}</p>\n                            </div>\n                        </div>\n                    </div>\n                }\n                { marker_spot }\n            </div>\n        );\n    }\n}\n\nMarkerSpotLabel.defaultProps = {\n    align_label: 'top',\n};\n\nMarkerSpotLabel.propTypes = {\n    align_label     : PropTypes.oneOf(['top', 'bottom']),\n    has_hover_toggle: PropTypes.bool,\n    spot_className  : PropTypes.string,\n    spot_count      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    spot_epoch      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    spot_value      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    status          : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpotLabel);\n","import { localize }    from 'App/i18n';\nimport MarkerLine      from 'Modules/SmartChart/Components/Markers/marker-line.jsx';\nimport MarkerSpotLabel from 'Modules/SmartChart/Components/Markers/marker-spot-label.jsx';\nimport MarkerSpot      from 'Modules/SmartChart/Components/Markers/marker-spot.jsx';\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END: {\n        type          : 'LINE_END',\n        marker_config : {\n            ContentComponent: MarkerLine,\n            className       : 'chart-marker-line',\n        },\n        content_config: { line_style: 'dash',  label: localize('End Time') },\n    },\n    LINE_PURCHASE: {\n        type          : 'LINE_PURCHASE',\n        marker_config : {\n            ContentComponent: MarkerLine,\n            className       : 'chart-marker-line',\n        },\n        content_config: { line_style: 'solid', label: localize('Purchase Time') },\n    },\n    LINE_START: {\n        type          : 'LINE_START',\n        marker_config : {\n            ContentComponent: MarkerLine,\n            className       : 'chart-marker-line',\n        },\n        content_config: { line_style: 'solid', label: localize('Start Time') },\n    },\n    SPOT_ENTRY: {\n        type          : 'SPOT_ENTRY',\n        marker_config : {\n            ContentComponent: MarkerSpot,\n        },\n        content_config: { className: 'chart-spot__entry' },\n    },\n    SPOT_SELL: {\n        type          : 'SPOT_SELL',\n        marker_config : {\n            ContentComponent: MarkerSpot,\n        },\n        content_config: { className: 'chart-spot__sell' },\n    },\n    SPOT_EXIT: {\n        type          : 'SPOT_EXIT',\n        marker_config : {\n            ContentComponent: MarkerSpotLabel,\n        },\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n    SPOT_MIDDLE: {\n        type          : 'SPOT_MIDDLE',\n        marker_config : {\n            ContentComponent: MarkerSpotLabel,\n        },\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n};\n","import extend                  from 'extend';\nimport { isDigitContract }     from 'Stores/Modules/Contract/Helpers/digits';\nimport {\n    isUserSold,\n    getEndTime }               from 'Stores/Modules/Contract/Helpers/logic';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n\nexport const getSpotCount = (contract_info, spot_count) =>\n    isDigitContract(contract_info.contract_type) ? spot_count + 1 : spot_count;\n\n// -------------------- Lines --------------------\nexport const createMarkerEndTime = (contract_info) => {\n    const end_time = getEndTime(contract_info);\n    if (!end_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        +end_time,\n        null,\n        {\n            status       : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n            marker_config: MARKER_TYPES_CONFIG,\n        },\n    );\n};\n\nexport const createMarkerPurchaseTime = (contract_info) => {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        +contract_info.purchase_time,\n    );\n};\n\nexport const createMarkerStartTime = (contract_info) => {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        +contract_info.date_start,\n        null,\n        {\n            marker_config: MARKER_TYPES_CONFIG,\n        }\n    );\n};\n\n// -------------------- Spots --------------------\nexport const createMarkerSpotEntry = (contract_info) => {\n    if (!contract_info.entry_tick_time) return false;\n\n    let marker_type      = MARKER_TYPES_CONFIG.SPOT_ENTRY.type;\n    let component_props  = {};\n\n    const entry_tick = contract_info.entry_tick_display_value;\n\n    const spot_has_label = isDigitContract(contract_info.contract_type);\n    if (spot_has_label) {\n        marker_type = MARKER_TYPES_CONFIG.SPOT_MIDDLE.type;\n\n        component_props = {\n            spot_value: `${entry_tick}`,\n            spot_epoch: `${contract_info.entry_tick_time}`,\n            spot_count: 1,\n        };\n    }\n\n    return createMarkerConfig(\n        marker_type,\n        contract_info.entry_tick_time,\n        entry_tick,\n        component_props,\n    );\n};\n\nexport const createMarkerSpotExit = (contract_info, tick, idx) => {\n    if (!contract_info.exit_tick_time) return false;\n    const is_user_sold = isUserSold(contract_info);\n\n    let spot_count, align_label;\n    if (tick) {\n        spot_count = getSpotCount(contract_info, idx);\n        align_label = tick.align_label;\n    }\n\n    const exit_tick = contract_info.exit_tick_display_value;\n\n    return createMarkerConfig(\n        !is_user_sold ? MARKER_TYPES_CONFIG.SPOT_EXIT.type : MARKER_TYPES_CONFIG.SPOT_SELL.type,\n        +contract_info.exit_tick_time,\n        +exit_tick,\n        !is_user_sold ?\n            {\n                spot_value: `${exit_tick}`,\n                spot_epoch: `${contract_info.exit_tick_time}`,\n                status    : `${+contract_info.profit > 0 ? 'won' : 'lost' }`,\n                align_label,\n                spot_count,\n            } : {},\n    );\n};\n\nexport const createMarkerSpotMiddle = (contract_info, tick, idx) => {\n    const spot_count = getSpotCount(contract_info, idx);\n    const spot       = tick.tick_display_value;\n\n    const marker_config = createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_MIDDLE.type,\n        +tick.epoch,\n        +spot,\n        {\n            spot_value : `${spot}`,\n            spot_epoch : `${tick.epoch}`,\n            align_label: tick.align_label,\n            spot_count,\n        },\n    );\n    marker_config.type = `${marker_config.type}_${idx}`;\n\n    return marker_config;\n};\n","import { unique }              from '_common/utility';\nimport {\n    createMarkerEndTime,\n    createMarkerPurchaseTime,\n    createMarkerSpotEntry,\n    createMarkerSpotExit,\n    createMarkerStartTime,\n    createMarkerSpotMiddle,\n    getSpotCount }             from './chart-marker-helpers';\nimport {\n    getChartType,\n    getEndTime }               from './logic';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info) => {\n    if (contract_info) {\n        const end_time = getEndTime(contract_info);\n        const chart_type = getChartType(contract_info.date_start, end_time);\n        if (contract_info.tick_count) {\n            addTickMarker(SmartChartStore, contract_info);\n        } else if (chart_type !== 'candle') {\n            addMarker(marker_spots, SmartChartStore, contract_info);\n        }\n        addMarker(marker_lines, SmartChartStore, contract_info);\n    }\n};\n\nconst marker_spots = {\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]: createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type] : createMarkerSpotExit,\n};\n\nconst marker_lines = {\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n};\n\nconst addMarker = async (marker_obj, SmartChartStore, contract_info) => {\n    Object.keys(marker_obj).forEach(createMarker);\n\n    function createMarker(marker_type) {\n        if (marker_type in SmartChartStore.markers) return;\n\n        const marker_config = marker_obj[marker_type](contract_info);\n        if (marker_config) {\n            SmartChartStore.createMarker(marker_config);\n        }\n    }\n};\n\nconst addLabelAlignment = (tick, idx, arr) => {\n    if (idx > 0 && arr.length) {\n        const prev_tick = arr[idx - 1];\n\n        if (+tick > +prev_tick.tick) tick.align_label = 'top';\n        if (+tick.tick < +prev_tick.tick) tick.align_label = 'bottom';\n        if (+tick.tick === +prev_tick.tick) tick.align_label = prev_tick.align_label;\n    }\n\n    return tick;\n};\n\nconst addTickMarker = async (SmartChartStore, contract_info) => {\n    const tick_stream = unique(contract_info.tick_stream, 'epoch').map(addLabelAlignment);\n\n    tick_stream.forEach((tick, idx) => {\n        const is_entry_spot  = idx === 0 && +tick.epoch !== contract_info.exit_tick_time;\n        const is_middle_spot = idx > 0 && +tick.epoch !== +contract_info.exit_tick_time;\n        const is_exit_spot   = +tick.epoch === +contract_info.exit_tick_time ||\n            getSpotCount(contract_info, idx) === contract_info.tick_count;\n\n        let marker_config;\n        if (is_entry_spot) {\n            marker_config = createMarkerSpotEntry(contract_info);\n        } else if (is_middle_spot) {\n            marker_config = createMarkerSpotMiddle(contract_info, tick, idx);\n        } else if (is_exit_spot) {\n            tick.align_label = 'top'; // force exit spot label to be 'top' to avoid overlapping\n            marker_config = createMarkerSpotExit(contract_info, tick, idx);\n        }\n\n        if (marker_config) {\n            if (marker_config.type in SmartChartStore.markers) return;\n\n            SmartChartStore.createMarker(marker_config);\n        }\n    });\n};\n","import React        from 'react';\nimport { localize } from 'App/i18n';\nimport Money        from '../../../../App/Components/Elements/money.jsx';\nimport Localize     from '../../../../App/Components/Elements/localize.jsx';\n\nexport const contractSold = (currency, sold_for) => ({\n    header : localize('Contract sold'),\n    message: (\n        <Localize\n            i18n_default_text='Contract was sold for <0 />.'\n            components={[ <Money key={sold_for} amount={sold_for} currency={currency} /> ]}\n        />\n    ),\n    type                 : 'contract_sold',\n    size                 : 'small',\n    should_hide_close_btn: true,\n    is_auto_close        : true,\n});\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }              from 'mobx';\nimport { localize }           from 'App/i18n';\nimport BinarySocket           from '_common/base/socket_base';\nimport { isEmptyObject }      from '_common/utility';\nimport { WS }                 from 'Services';\nimport { createChartBarrier } from './Helpers/chart-barriers';\nimport { createChartMarkers } from './Helpers/chart-markers';\nimport {\n    getDigitInfo,\n    isDigitContract }         from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndTime,\n    isEnded }                 from './Helpers/logic';\nimport { contractSold }       from '../Portfolio/Helpers/portfolio-notifcations';\nimport BaseStore              from '../../base-store';\n\nexport default class ContractReplayStore extends BaseStore {\n    // --- Observable properties ---\n    @observable digits_info = observable.object({});\n    @observable sell_info   = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // ---- Replay Contract Config ----\n    @observable contract_id;\n    @observable indicative_status;\n    @observable contract_info   = observable.object({});\n    @observable is_static_chart = false;\n\n    // ---- Normal properties ---\n    chart_type          = 'mountain';\n    is_ongoing_contract = false;\n\n    // Replay Contract Indicative Movement\n    prev_indicative = 0;\n    indicative      = 0;\n\n    // Forget old proposal_open_contract stream on account switch from ErrorComponent\n    should_forget_first = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    handleSubscribeProposalOpenContract = (contract_id, cb) => {\n        const proposal_open_contract_request = [contract_id, cb, false];\n\n        if (this.should_forget_first) {\n            WS.forgetAll('proposal_open_contract').then(() => {\n                this.should_forget_first = false;\n                WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n            });\n        } else {\n            WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n        }\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        if (contract_id) {\n            this.smart_chart = this.root_store.modules.smart_chart;\n            this.smart_chart.setContractMode(true);\n            this.contract_id = contract_id;\n            BinarySocket.wait('authorize').then(() => {\n                this.handleSubscribeProposalOpenContract(this.contract_id, this.populateConfig);\n            });\n            WS.activeSymbols({ skip_cache_update: true });\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.forgetProposalOpenContract(this.contract_id, this.populateConfig);\n        this.contract_id         = null;\n        this.digits_info         = {};\n        this.is_ongoing_contract = false;\n        this.is_static_chart     = false;\n        this.is_sell_requested   = false;\n        this.contract_info       = {};\n        this.indicative_status   = null;\n        this.prev_indicative     = 0;\n        this.indicative          = 0;\n        this.sell_info           = {};\n        this.smart_chart.setContractMode(false);\n        this.smart_chart.cleanupContractChartView();\n    }\n\n    @action.bound\n    populateConfig(response) {\n        if ('error' in response) {\n            this.has_error       = true;\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error           = true;\n            this.error_message       = localize('Sorry, you can\\'t view this contract because it doesn\\'t belong to this account.');\n            this.should_forget_first = true;\n            this.smart_chart.setContractMode(false);\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (+response.proposal_open_contract.contract_id !== this.contract_id) return;\n\n        this.contract_info = response.proposal_open_contract;\n\n        // Add indicative status for contract\n        const prev_indicative  = this.prev_indicative;\n        const new_indicative   = +this.contract_info.bid_price;\n        this.indicative = new_indicative;\n        if (new_indicative > prev_indicative) {\n            this.indicative_status = 'profit';\n        } else if (new_indicative < prev_indicative) {\n            this.indicative_status = 'loss';\n        } else {\n            this.indicative_status = null;\n        }\n        this.prev_indicative = this.indicative;\n\n        const end_time = getEndTime(this.contract_info);\n\n        this.smart_chart.updateMargin(\n            (end_time || this.contract_info.date_expiry) - this.contract_info.date_start);\n\n        if (!end_time) this.is_ongoing_contract = true;\n\n        // finish contracts if end_time exists\n        if (end_time) {\n            if (!this.is_ongoing_contract) {\n                this.is_static_chart = true;\n            } else {\n                this.is_static_chart = false;\n            }\n        }\n\n        createChartBarrier(this.smart_chart, this.contract_info, this.root_store.ui.is_dark_mode_on);\n        createChartMarkers(this.smart_chart, this.contract_info);\n        this.handleDigits(this.contract_info);\n\n        this.smart_chart.setIsChartLoading(false);\n    }\n\n    @action.bound\n    handleDigits(contract_info) {\n        if (this.is_digit_contract) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell(contract_id) {\n        const { bid_price } = this.contract_info;\n        if (contract_id && bid_price) {\n            this.is_sell_requested = true;\n            WS.sell(contract_id, bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            // If unable to sell due to error, give error via pop up if not in contract mode\n            this.is_sell_requested = false;\n            this.root_store.common.services_error = {\n                type: response.msg_type,\n                ...response.error,\n            };\n            this.root_store.ui.toggleServicesErrorModal(true);\n        } else if (!response.error && response.sell) {\n            this.is_sell_requested = false;\n            // update contract store sell info after sell\n            this.sell_info = {\n                sell_price    : response.sell.sold_for,\n                transaction_id: response.sell.transaction_id,\n            };\n            this.root_store.ui.addNotification(contractSold(this.root_store.client.currency, response.sell.sold_for));\n        }\n    }\n\n    forgetProposalOpenContract = (contract_id, cb) => {\n        WS.forget('proposal_open_contract', cb, { contract_id });\n    }\n\n    @action.bound\n    removeErrorMessage() {\n        delete this.error_message;\n    }\n\n    @action.bound\n    clearError() {\n        this.error_message = null;\n        this.has_error = false;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get contract_config() {\n        return getChartConfig(this.contract_info, this.is_digit_contract, false);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_digit_contract() {\n        return isDigitContract(this.contract_info.contract_type);\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }              from 'mobx';\nimport BinarySocket           from '_common/base/socket_base';\nimport { isEmptyObject }      from '_common/utility';\nimport { localize }           from 'App/i18n';\nimport { WS }                 from 'Services';\nimport { createChartBarrier } from './Helpers/chart-barriers';\nimport { createChartMarkers } from './Helpers/chart-markers';\nimport {\n    getDigitInfo,\n    isDigitContract }         from './Helpers/digits';\nimport {\n    getChartGranularity,\n    getChartType,\n    getDisplayStatus,\n    getEndTime,\n    isEnded }                 from './Helpers/logic';\nimport BaseStore              from '../../base-store';\n\nexport default class ContractTradeStore extends BaseStore {\n    // --- Observable properties ---\n    @observable contract_id;\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n\n    @observable has_error     = false;\n    @observable error_message = '';\n\n    // ---- Normal properties ---\n    is_from_positions   = false;\n    is_ongoing_contract = false;\n\n    // Forget old proposal_open_contract stream on account switch from ErrorComponent\n    should_forget_first = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    drawChart() {\n        const {\n            date_expiry,\n            date_start,\n            tick_count,\n        } = this.contract_info;\n\n        const end_time = getEndTime(this.contract_info);\n\n        if (!end_time) this.is_ongoing_contract = true;\n\n        // finish contracts if end_time exists\n        if (end_time) {\n            const is_one_tick_contract = (tick_count < 2);\n            if (!this.is_ongoing_contract && !is_one_tick_contract) {\n                // set to static chart to true for non one tick contract\n                // to avoid chart from reloading\n                this.smart_chart.setStaticChart(true);\n            } else {\n                this.smart_chart.setStaticChart(false);\n            }\n            this.smart_chart.setContractStart(date_start);\n            this.smart_chart.setContractEnd(end_time);\n\n            // Clear chart loading status once ChartListener returns ready for completed contract\n            if (!this.is_ongoing_contract) {\n                this.smart_chart.setIsChartLoading(false);\n            }\n\n        // setters for ongoing contracts, will only init once onMount after left_epoch is set\n        } else if (this.is_from_positions) {\n            this.smart_chart.setContractStart(date_start);\n        }\n\n        this.smart_chart.updateMargin((end_time || date_expiry) - date_start);\n\n        createChartBarrier(this.smart_chart, this.contract_info, this.root_store.ui.is_dark_mode_on);\n        createChartMarkers(this.smart_chart, this.contract_info);\n\n        if (this.smart_chart.is_chart_ready) {\n            this.smart_chart.setIsChartLoading(false);\n        }\n    }\n\n    handleSubscribeProposalOpenContract = (contract_id, cb) => {\n        const proposal_open_contract_request = [contract_id, cb, false];\n\n        if (this.should_forget_first) {\n            WS.forgetAll('proposal_open_contract').then(() => {\n                this.should_forget_first = false;\n                WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n            });\n        } else {\n            WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n        }\n    }\n\n    @action.bound\n    drawContractStartTime(date_start, longcode, contract_id) {\n        this.contract_info.longcode = longcode;\n        createChartMarkers(this.root_store.modules.smart_chart, { date_start });\n        this.onMountBuy(contract_id);\n    }\n\n    @action.bound\n    onMountBuy(contract_id) {\n        if (contract_id === this.contract_id) return;\n        this.contract_id = contract_id;\n        // clear proposal and purchase info once contract is mounted\n        this.root_store.modules.trade.proposal_info = {};\n        this.root_store.modules.trade.purchase_info = {};\n        BinarySocket.wait('authorize').then(() => {\n            this.handleSubscribeProposalOpenContract(this.contract_id, this.updateProposal);\n        });\n    }\n\n    @action.bound\n    onMount(contract_id, is_from_positions) {\n        if (contract_id === this.contract_id) return;\n        this.smart_chart       = this.root_store.modules.smart_chart;\n        const has_existing_id  = this.smart_chart.is_contract_mode && !!(this.contract_id);\n        if (has_existing_id) this.resetValues(this.smart_chart);\n        this.has_error         = false;\n        this.error_message     = '';\n        this.contract_id       = contract_id;\n        this.is_from_positions = is_from_positions;\n\n        // clear proposal and purchase info once contract is mounted\n        this.root_store.modules.trade.proposal_info = {};\n        this.root_store.modules.trade.purchase_info = {};\n\n        if (contract_id) {\n            if (this.is_from_positions) {\n                this.smart_chart.setIsChartLoading(true);\n                this.smart_chart.switchToContractMode(true, has_existing_id);\n            }\n            BinarySocket.wait('authorize').then(() => {\n                this.handleSubscribeProposalOpenContract(this.contract_id, this.updateProposal);\n            });\n        }\n    }\n\n    @action.bound\n    resetValues(SmartChartStore) {\n        this.forgetProposalOpenContract(this.contract_id, this.updateProposal);\n        this.contract_id         = null;\n        this.contract_info       = {};\n        this.digits_info         = {};\n        this.error_message       = '';\n        this.has_error           = false;\n        this.is_from_positions   = false;\n        this.is_ongoing_contract = false;\n        SmartChartStore.cleanupContractChartView();\n    }\n\n    @action.bound\n    onCloseContract() {\n        if (!this.smart_chart) this.smart_chart = this.root_store.modules.smart_chart;\n        this.resetValues(this.smart_chart);\n        this.smart_chart.applySavedTradeChartLayout();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.onCloseContract();\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error           = true;\n            this.error_message       = localize('Sorry, you can\\'t view this contract because it doesn\\'t belong to this account.');\n            this.should_forget_first = true;\n            this.contract_info       = {};\n            this.contract_id         = null;\n            this.smart_chart.setContractMode(false);\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (+response.proposal_open_contract.contract_id !== this.contract_id) return;\n\n        this.contract_info = response.proposal_open_contract;\n\n        // Set chart granularity and chart_type\n        this.handleChartType(this.contract_info.date_start, getEndTime(this.contract_info) || null);\n\n        // Set chart view to date_start\n        if (this.is_from_positions) {\n            if (this.smart_chart.granularity !== 0) {\n                this.smart_chart.setChartView(this.contract_info.date_start);\n            }\n        }\n\n        // Set contract symbol if trade_symbol and contract_symbol don't match\n        if (this.root_store.modules.trade.symbol !== this.contract_info.underlying) {\n            this.root_store.modules.trade.symbol = this.contract_info.underlying;\n        }\n\n        this.drawChart(this.contract_info);\n\n        this.handleDigits(this.contract_info);\n    }\n\n    @action.bound\n    handleDigits(contract_info) {\n        if (this.is_digit_contract) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, contract_info));\n        }\n    }\n\n    handleChartType(start, expiry) {\n        if (!this.smart_chart) {\n            this.smart_chart = this.root_store.modules.smart_chart;\n        }\n\n        const chart_type  = getChartType(start, expiry);\n        const granularity = getChartGranularity(start, expiry);\n\n        this.smart_chart.updateChartType(chart_type);\n        this.smart_chart.updateGranularity(granularity);\n    }\n\n    forgetProposalOpenContract = (contract_id, cb) => {\n        WS.forget('proposal_open_contract', cb, { contract_id });\n    }\n\n    @action.bound\n    removeErrorMessage() {\n        delete this.error_message;\n    }\n\n    @action.bound\n    clearError() {\n        this.error_message = null;\n        this.has_error = false;\n    }\n\n    @action.bound\n    setIsDigitContract(contract_type) {\n        this.contract_info.contract_type = contract_type;\n    }\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_digit_contract() {\n        return isDigitContract(this.contract_info.contract_type);\n    }\n}\n","import { flow }            from 'mobx';\nimport BinarySocket        from '_common/base/socket_base';\nimport { localize }        from 'App/i18n';\nimport { LocalStore }      from '_common/storage';\nimport { redirectToLogin } from '_common/base/login';\nimport { WS }              from 'Services';\n\nexport const showUnavailableLocationError = flow(function* (showError) {\n    const website_status = yield BinarySocket.wait('website_status');\n    const residence_list = yield WS.residenceList();\n\n    const clients_country_code = website_status.website_status.clients_country;\n    const clients_country_text =\n        (residence_list.residence_list.find(obj_country =>\n            obj_country.value === clients_country_code) || {}).text;\n\n    showError(\n        localize('If you have an account, log in to continue.'),\n        (clients_country_text ? localize('Sorry, this app is unavailable in {{clients_country}}.', { clients_country: clients_country_text }) : localize('Sorry, this app is unavailable in your current location.')),\n        localize('Log in'),\n        redirectToLogin,\n        false,\n    );\n});\n\nexport const isMarketClosed = (active_symbols = [], symbol) => {\n    if (!active_symbols.length) return false;\n    return (active_symbols.filter(x => x.symbol === symbol)[0]) ?\n        !active_symbols.filter(symbol_info => symbol_info.symbol === symbol)[0].exchange_is_open\n        :\n        false;\n};\n\nexport const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return getFavoriteOpenSymbol(active_symbols) || getFirstOpenSymbol(active_symbols);\n};\n\nconst getFavoriteOpenSymbol = (active_symbols) => {\n    const chart_favorites = LocalStore.get('cq-favorites');\n    if (!chart_favorites) return undefined;\n    const client_favorite_markets = JSON.parse(chart_favorites)['chartTitle&Comparison'];\n\n    const client_favorite_list = client_favorite_markets\n        .map(client_fav_symbol => active_symbols\n            .find(symbol_info => symbol_info.symbol === client_fav_symbol));\n    if (client_favorite_list) {\n        const client_first_open_symbol = client_favorite_list\n            .filter(symbol => symbol).find(isSymbolOpen);\n        if (client_first_open_symbol) return client_first_open_symbol.symbol;\n    }\n    return undefined;\n};\n\nconst getFirstOpenSymbol = (active_symbols) => {\n    const first_open_symbol = active_symbols\n        .filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))\n        .find(isSymbolOpen);\n    if (first_open_symbol) return first_open_symbol.symbol;\n    return active_symbols.find(symbol_info => symbol_info.submarket === 'major_pairs').symbol;\n};\n\nconst isSymbolOpen = (symbol) => (\n    symbol.exchange_is_open === 1\n);\n\nexport const getSymbolDisplayName = (active_symbols = [], symbol) => (\n    (active_symbols.find(symbol_info => symbol_info.symbol.toUpperCase() === symbol.toUpperCase()) || { display_name: '' })\n        .display_name\n);\n","import { getUnsupportedContracts } from 'Constants';\nimport { getSymbolDisplayName }    from '../../Trading/Helpers/active-symbols';\nimport { getMarketInformation }    from '../../../../Modules/Reports/Helpers/market-underlying';\n\nexport const formatPortfolioPosition = (portfolio_pos, active_symbols = []) => {\n    const purchase     = parseFloat(portfolio_pos.buy_price);\n    const payout       = parseFloat(portfolio_pos.payout);\n    const display_name = getSymbolDisplayName(\n        active_symbols,\n        getMarketInformation(portfolio_pos.shortcode).underlying\n    );\n\n    return {\n        contract_info : portfolio_pos,\n        details       : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        display_name,\n        id            : portfolio_pos.contract_id,\n        indicative    : 0,\n        payout,\n        purchase,\n        reference     : +portfolio_pos.transaction_id,\n        type          : portfolio_pos.contract_type,\n        is_unsupported: !!getUnsupportedContracts()[portfolio_pos.contract_type],\n    };\n};\n","import {\n    action,\n    computed,\n    observable,\n    reaction }                     from 'mobx';\nimport { createTransformer }       from 'mobx-utils';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format-response';\nimport { contractSold }            from './Helpers/portfolio-notifcations';\nimport {\n    getCurrentTick,\n    getDurationPeriod,\n    getDurationTime,\n    getDurationUnitText }          from './Helpers/details';\nimport {\n    getDisplayStatus,\n    getEndTime,\n    isEnded,\n    isUserSold,\n    isValidToSell }                from '../Contract/Helpers/logic';\nimport BaseStore                   from '../../base-store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable positions  = [];\n    @observable is_loading = false;\n    @observable error      = '';\n    getPositionById        = createTransformer((id) => this.positions.find((position) => +position.id === +id));\n\n    @action.bound\n    initializePortfolio = async () => {\n        this.is_loading = true;\n        await this.waitFor('authorize');\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.positions  = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.positions = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos, this.root_store.modules.trade.active_symbols))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    async transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            const res = await WS.portfolio();\n            const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n            if (!new_pos) return;\n            this.pushNewPosition(new_pos);\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            const i = this.getPositionIndexById(contract_id);\n\n            // Currently, if the contract has ended before the response is sent\n            // the Portfolio API returns an empty `contracts` array.\n            // This causes the contract to not be pushed to the `positions` property here.\n            // The statement below prevents accessing undefined values caused by the above explanation.\n            if (i === -1) return;\n\n            this.positions[i].is_loading = true;\n            WS.subscribeProposalOpenContract(contract_id, this.populateResultDetails, false);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.positions.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n        const profit_loss     = +proposal.profit;\n\n        // fix for missing barrier and entry_spot in proposal_open_contract API response, only re-assign if valid\n        if (proposal.barrier) portfolio_position.barrier = +proposal.barrier;\n        if (proposal.entry_spot) portfolio_position.entry_spot = +proposal.entry_spot;\n\n        // store contract proposal details that require modifiers\n        portfolio_position.indicative       = new_indicative;\n        portfolio_position.profit_loss      = profit_loss;\n        portfolio_position.is_valid_to_sell = isValidToSell(proposal);\n        // store contract proposal details that do not require modifiers\n        portfolio_position.contract_info    = proposal;\n\n        // for tick contracts\n        if (proposal.tick_count) {\n            const current_tick = (portfolio_position.current_tick > getCurrentTick(proposal)) ?\n                portfolio_position.current_tick : getCurrentTick(proposal);\n            portfolio_position.current_tick = current_tick;\n        }\n\n        if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'profit';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'loss';\n        } else {\n            portfolio_position.status = null;\n        }\n    }\n\n    @action.bound\n    onClickSell(contract_id) {\n        const i = this.getPositionIndexById(contract_id);\n        const { bid_price } = this.positions[i].contract_info;\n        this.positions[i].is_sell_requested = false;\n        if (contract_id && bid_price) {\n            WS.sell(contract_id, bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            // If unable to sell due to error, give error via pop up if not in contract mode\n            const i = this.getPositionIndexById(response.echo_req.sell);\n            this.positions[i].is_sell_requested = false;\n            this.root_store.common.services_error = {\n                type: response.msg_type,\n                ...response.error,\n            };\n            this.root_store.ui.toggleServicesErrorModal(true);\n        } else if (!response.error && response.sell) {\n            const i = this.getPositionIndexById(response.sell.contract_id);\n            this.positions[i].is_sell_requested = false;\n            // update contract store sell info after sell\n            this.root_store.modules.contract_trade.sell_info = {\n                sell_price    : response.sell.sold_for,\n                transaction_id: response.sell.transaction_id,\n            };\n            this.root_store.ui.addNotification(contractSold(this.root_store.client.currency, response.sell.sold_for));\n        }\n    }\n\n    @action.bound\n    populateResultDetails = (response) => {\n        const contract_response = response.proposal_open_contract;\n        const i = this.getPositionIndexById(contract_response.contract_id);\n\n        this.positions[i].contract_info    = contract_response;\n        this.positions[i].duration         = getDurationTime(contract_response);\n        this.positions[i].duration_unit    = getDurationUnitText(getDurationPeriod(contract_response));\n        this.positions[i].exit_spot        = contract_response.exit_tick || contract_response.current_spot; // workaround if no exit_tick in proposal_open_contract, use latest spot\n        this.positions[i].is_valid_to_sell = isValidToSell(contract_response);\n        this.positions[i].result           = getDisplayStatus(contract_response);\n        this.positions[i].profit_loss      = +contract_response.profit;\n        this.positions[i].sell_time        = getEndTime(contract_response) || contract_response.current_spot_time; // same as exit_spot, use latest spot time if no exit_tick_time\n        this.positions[i].sell_price       = contract_response.sell_price;\n        this.positions[i].status           = 'complete';\n\n        // fix for missing barrier and entry_spot\n        if (!this.positions[i].contract_info.barrier || !this.positions[i].contract_info.entry_spot) {\n            this.positions[i].contract_info.barrier    = this.positions[i].barrier;\n            this.positions[i].contract_info.entry_spot = this.positions[i].entry_spot;\n        }\n\n        // remove exit_spot for manually sold contracts\n        if (isUserSold(contract_response)) this.positions[i].exit_spot = '-';\n\n        this.positions[i].is_loading = false;\n\n        if (isEnded(contract_response)) {\n            // also forget for buy\n            [this.populateResultDetails, this.proposalOpenContractHandler].forEach(cb => {\n                WS.forget('proposal_open_contract', cb, { contract_id: contract_response.contract_id });\n            });\n        }\n    };\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.positions.unshift(formatPortfolioPosition(new_pos, this.root_store.modules.trade.active_symbols));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const { is_contract_mode } = this.root_store.modules.smart_chart;\n        const contract_idx         = this.getPositionIndexById(contract_id);\n\n        this.positions.splice(contract_idx, 1);\n\n        // check if contract is in view in contract_mode before removing contract details from chart\n        if (is_contract_mode && (+this.root_store.modules.contract_trade.contract_id === +contract_id)) {\n            this.root_store.modules.contract_trade.onCloseContract();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise(async (resolve) => {\n            await this.clearTable();\n            await WS.forgetAll('proposal_open_contract', 'transaction');\n            return resolve(this.initializePortfolio());\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null));\n        if (this.positions.length === 0) {\n            // TODO: Optimise the way is_logged_in changes are detected for \"logging in\" and \"already logged on\" states\n            if (this.root_store.client.is_logged_in) {\n                this.initializePortfolio();\n            } else {\n                reaction(() => this.root_store.client.is_logged_in, () => {\n                    if (this.root_store.client.is_logged_in) {\n                        this.initializePortfolio();\n                    }\n                });\n            }\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    getPositionIndexById(contract_id) {\n        return this.positions.findIndex(pos => +pos.id === +contract_id);\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.positions.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions_totals() {\n        let indicative = 0;\n        let purchase   = 0;\n\n        this.active_positions.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.positions.filter((portfolio_pos) => !portfolio_pos.result);\n    }\n\n    @computed\n    get all_positions() {\n        return this.positions;\n    }\n\n    @computed\n    get is_active_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.all_positions.length === 0;\n    }\n}\n","import {\n    epochToMoment,\n    toMoment,\n} from 'Utils/Date';\n\nconst getDateTo = (partial_fetch_time, date_to) => {\n    const today = toMoment().startOf('day').unix();\n    if (date_to && today > date_to) {\n        return date_to;\n    } else if (partial_fetch_time) {\n        return epochToMoment(today).add(1, 'd').subtract(1, 's').unix();\n    }\n    return epochToMoment(today).add(1, 'd').subtract(1, 's').unix();\n};\n\nconst getDateFrom = (should_load_partially, partial_fetch_time, date_from, date_to) => {\n    const today = toMoment().startOf('day').unix();\n    if (today > date_to) {\n        return date_from;\n    }\n    return should_load_partially && partial_fetch_time ? partial_fetch_time : date_from;\n};\n\nconst shouldSendDateFrom = (date_from, should_load_partially, partial_fetch_time, date_to) => {\n    const today = toMoment().startOf('day').unix();\n    if (today > date_to) {\n        return (!!date_from || should_load_partially);\n    }\n    return should_load_partially ? (partial_fetch_time || date_from) : !!date_from || false;\n};\n\nconst getDateBoundaries = (date_from, date_to, partial_fetch_time, should_load_partially = false) => (\n    {\n        // eslint-disable-next-line max-len\n        ...(shouldSendDateFrom(date_from, should_load_partially, partial_fetch_time, date_to)) && { date_from: getDateFrom(should_load_partially, partial_fetch_time, date_from, date_to) },\n        ...(date_to || should_load_partially) && { date_to: getDateTo(partial_fetch_time, date_to) },\n    }\n);\n\nexport default getDateBoundaries;\n","import { formatMoney }          from '_common/base/currency_base';\nimport { toMoment }             from 'Utils/Date';\nimport { getMarketInformation } from '../../../../Modules/Reports/Helpers/market-underlying';\nimport { getSymbolDisplayName } from '../../Trading/Helpers/active-symbols';\n\nexport const formatProfitTableTransactions = (transaction, currency, active_symbols = []) => {\n    const format_string           = 'DD MMM YYYY HH:mm:ss';\n    const purchase_time           = `${toMoment(+transaction.purchase_time).format(format_string)}`;\n    const sell_time               = `${toMoment(+transaction.sell_time).format(format_string)}`;\n    const payout                  = parseFloat(transaction.payout);\n    const sell_price              = parseFloat(transaction.sell_price);\n    const buy_price               = parseFloat(transaction.buy_price);\n    const profit_loss             = formatMoney(currency, Number(sell_price - buy_price), true);\n    const should_exclude_currency = true;\n    const display_name            = getSymbolDisplayName(\n        active_symbols,\n        getMarketInformation(transaction.shortcode).underlying\n    );\n\n    return {\n        ...transaction,\n        ...{\n            payout    : isNaN(payout) ? '-' : formatMoney(currency, payout, should_exclude_currency),\n            sell_price: isNaN(sell_price) ? '-' : formatMoney(currency, sell_price, should_exclude_currency),\n            buy_price : isNaN(buy_price) ? '-' : formatMoney(currency, buy_price, should_exclude_currency),\n            profit_loss,\n            sell_time,\n            purchase_time,\n            display_name,\n        },\n    };\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    computed,\n    observable,\n}                                        from 'mobx';\nimport { WS }                            from 'Services';\nimport { toMoment }                      from 'Utils/Date';\nimport getDateBoundaries                 from './Helpers/format-request';\nimport { formatProfitTableTransactions } from './Helpers/format-response';\nimport BaseStore                         from '../../base-store';\n\nconst batch_size = 50;\nconst delay_on_scroll_time = 150;\n\nexport default class ProfitTableStore extends BaseStore {\n    @observable data           = [];\n    @observable date_from      =  null;\n    @observable date_to        = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n    @observable error          = '';\n    @observable has_loaded_all = false;\n    @observable is_loading     = false;\n\n    // `client_loginid` is only used to detect if this is in sync with the client-store, don't rely on\n    // this for calculations. Use the client.currency instead.\n    @observable client_loginid = '';\n\n    @computed\n    get total_profit () {\n        return this.data.reduce((previous, current) => {\n            const buy_price  = Number(parseFloat(current.buy_price));\n            const sell_price = Number(parseFloat(current.sell_price));\n            const pl         = sell_price - buy_price;\n            return previous + pl;\n        }, 0);\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    shouldFetchNextBatch(should_load_partially) {\n        if (!should_load_partially && (this.has_loaded_all || this.is_loading)) return false;\n        const today = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        if (this.date_to < today) return (!should_load_partially && this.partial_fetch_time);\n        return true;\n    }\n\n    @action.bound\n    async fetchNextBatch(should_load_partially = false) {\n        if (!this.shouldFetchNextBatch(should_load_partially)) return;\n        this.is_loading = true;\n\n        const response = await WS.profitTable(\n            batch_size,\n            !should_load_partially ? this.data.length : undefined,\n            getDateBoundaries(this.date_from, this.date_to, this.partial_fetch_time, should_load_partially)\n        );\n\n        this.profitTableResponseHandler(response, should_load_partially);\n    }\n\n    @action.bound\n    profitTableResponseHandler(response, should_load_partially = false) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.profit_table.transactions\n            .map(transaction => formatProfitTableTransactions(\n                transaction,\n                this.root_store.client.currency,\n                this.root_store.modules.trade.active_symbols,\n            ));\n\n        if (should_load_partially) {\n            this.data = [...formatted_transactions, ...this.data];\n        } else {\n            this.data = [...this.data, ...formatted_transactions];\n        }\n        this.has_loaded_all      = !should_load_partially && formatted_transactions.length < batch_size;\n        this.is_loading          = false;\n        if (formatted_transactions.length > 0) {\n            this.partial_fetch_time = toMoment().unix();\n        }\n    }\n\n    fetchOnScroll = debounce((left) => {\n        if (left < 2000) {\n            this.fetchNextBatch();\n        }\n    }, delay_on_scroll_time);\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n        this.fetchOnScroll(left_to_scroll);\n    }\n\n    @action.bound\n    async onMount() {\n        this.assertHasValidCache(\n            this.client_loginid,\n            this.clearDateFilter,\n            this.clearTable,\n            WS.forgetAll.bind(null, 'proposal')\n        );\n        this.client_loginid = this.root_store.client.loginid;\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.waitFor('authorize');\n        this.fetchNextBatch(true);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n    }\n\n    @computed\n    get totals() {\n        let profit_loss = 0;\n\n        this.data.forEach((transaction) => {\n            if (transaction.profit_loss.indexOf('-') !== -1) {\n                profit_loss -= parseFloat(transaction.profit_loss.split('-')[1]);\n            } else {\n                profit_loss += parseFloat(transaction.profit_loss);\n            }\n        });\n        return {\n            profit_loss: profit_loss.toString(),\n        };\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = null;\n        this.date_to   = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        this.partial_fetch_time = 0;\n    }\n\n    @action.bound\n    handleDateChange(date_values) {\n        Object.keys(date_values).forEach(key => {\n            this[`date_${key}`] = date_values[key];\n        });\n        this.clearTable();\n        this.fetchNextBatch();\n    }\n}\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list\n    .filter(barrier => barrier !== undefined && barrier !== null)\n    .map(barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`);\n\nexport const barriersObjectToArray = (barriers, reference_array) => {\n    Object.keys(barriers).forEach(barrier => {\n        const js_object = toJS(barriers[barrier]);\n        if (!isEmptyObject(js_object)) {\n            reference_array.push(js_object);\n        }\n    });\n\n    return reference_array;\n};\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.SOLID;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low, isFromChart = false) {\n        if (!isFromChart) {\n            this.relative       = /^[+-]/.test(high);\n        }\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low, true);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @action.bound\n    updateBarrierColor(is_dark_mode) {\n        this.color = is_dark_mode ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY;\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport BinarySocket           from '_common/base/socket_base';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart-barrier-store';\nimport { ChartMarkerStore }   from './chart-marker-store';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base-store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable chart_type;\n    @observable granularity;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n    barriers_empty_array = [];\n    markers_empty_array = [];\n\n    @observable is_contract_mode = false;\n    @observable is_static_chart  = false;\n    @observable is_title_enabled = true;\n\n    @observable start_epoch;\n    @observable end_epoch;\n    @observable margin;\n\n    @observable scroll_to_left_epoch = null;\n\n    @observable chart_id                      = 'trade';\n    @observable is_chart_loading              = false;\n    @observable is_chart_ready                = false;\n    @observable should_import_layout          = false;\n    @observable should_export_layout          = false;\n    @observable should_clear_chart            = false;\n    @observable trade_chart_layout            = null;\n    @observable should_refresh_active_symbols = false;\n\n    trade_chart_symbol               = null;\n    trade_chart_granularity          = null;\n    trade_chart_type                 = null;\n\n    @action.bound\n    switchToContractMode(\n        is_from_positions = false,\n        is_from_other_position = false,\n        chart_type = 'mountain',\n        granularity = 0,\n    ) {\n\n        if (!is_from_other_position) this.saveAndClearTradeChartLayout(null);\n        this.setContractMode(true);\n        if (!is_from_positions) {\n            this.updateGranularity(granularity);\n            this.updateChartType(chart_type);\n        }\n    }\n\n    @action.bound\n    getChartStatus(status) {\n        this.is_chart_ready = status;\n    }\n\n    @action.bound\n    updateChartType(type) {\n        this.chart_type = type;\n        if (!this.is_contract_mode) this.trade_chart_type = type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (!this.is_contract_mode) this.trade_chart_granularity = granularity;\n    }\n\n    @action.bound\n    updateMargin(duration) {\n        this.margin = Math.floor(!this.granularity ?\n            (Math.max(300, (30 * duration) / (60 * 60) || 0))\n            :\n            3 * this.granularity);\n    }\n\n    @action.bound\n    updateEpochScrollToValue(epoch) {\n        this.scroll_to_left_epoch = epoch;\n    }\n\n    @action.bound\n    cleanupContractChartView() {\n        this.margin = null;\n        this.removeBarriers();\n        this.removeMarkers();\n        this.resetScrollToLeft();\n        this.setContractMode(false);\n        this.setContractStart(null);\n        this.setContractEnd(null);\n        this.setStaticChart(false);\n        this.root_store.ui.resetPurchaseStates();\n    }\n\n    @action.bound\n    resetScrollToLeft() {\n        this.scroll_to_left_epoch = null;\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onMount = () => {\n        // remove any barriers and markers before chart is ready\n        if (this.trade_chart_layout && !isEmptyObject(this.trade_chart_layout)) {\n            this.applySavedTradeChartLayout();\n        }\n    };\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.trade_chart_layout = null;\n        this.should_import_layout = false;\n        this.setIsChartLoading(false);\n        this.cleanupContractChartView();\n    };\n\n    // --------- Set Contract Scroll to Left ---------\n    @action.bound\n    setChartView(scroll_to_left_epoch) {\n        this.updateEpochScrollToValue(scroll_to_left_epoch);\n    }\n\n    // --------- All Contracts ---------\n    @action.bound\n    setContractStart(start) {\n        this.start_epoch = start;\n    }\n\n    @action.bound\n    setContractEnd(end) {\n        this.end_epoch = end;\n    }\n\n    @action.bound\n    setIsChartLoading(bool) {\n        this.is_chart_loading = bool;\n    }\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, barrier_config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, barrier_config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    updateBarrierColor(is_dark_mode) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierColor(is_dark_mode);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @action.bound\n    saveAndClearTradeChartLayout(chart_id) {\n        this.should_export_layout    = true;\n        this.should_import_layout    = false;\n        this.trade_chart_symbol      = this.root_store.modules.trade.symbol;\n        this.trade_chart_granularity = this.root_store.modules.smart_chart.granularity || 0;\n        this.trade_chart_type        = this.root_store.modules.smart_chart.chart_type || 'mountain';\n        this.chart_id                = chart_id;\n    }\n\n    @action.bound\n    applySavedTradeChartLayout() {\n        if (!this.trade_chart_layout) return;\n\n        this.setIsChartLoading(true);\n        this.should_export_layout = false;\n        this.should_import_layout = true;\n        this.should_clear_chart   = false;\n        this.chart_id             = 'trade';\n\n        this.trade_chart_layout.isDone = action(() => {\n            this.trade_chart_layout   = null;\n            this.should_import_layout = false;\n\n            // Reset back to symbol before loading contract if trade_symbol and contract_symbol don't match\n            if (this.trade_chart_symbol !== this.root_store.modules.trade.symbol) {\n                this.root_store.modules.trade.symbol = this.trade_chart_symbol;\n            }\n            WS.forgetAll('proposal').then(this.root_store.modules.trade.requestProposal());\n\n            // Clear chart loading status once ChartListener returns ready\n            if (this.is_chart_ready) {\n                this.setIsChartLoading(false);\n            }\n        });\n    }\n\n    @action.bound\n    exportLayout(layout) {\n        this.trade_chart_layout = layout;\n        this.should_clear_chart = true;\n    }\n\n    @action.bound\n    setStaticChart(bool) {\n        this.is_static_chart = bool;\n    }\n\n    @computed\n    get barriers_array() {\n        let has_differing = false;\n        const barriers_array = barriersObjectToArray(this.barriers, []);\n\n        if (this.barriers_empty_array.length !== barriers_array.length) {\n            has_differing = true;\n        } else {\n            this.barriers_empty_array.forEach(barrier => {\n                barriers_array.forEach(next_barrier => {\n                    Object.keys(barrier).forEach(key => {\n                        if (barrier[key] !== next_barrier[key]) {\n                            has_differing = true;\n                        }\n                    });\n                });\n            });\n        }\n\n        if (has_differing) {\n            this.barriers_empty_array = [];\n        } else {\n            this.barriers_empty_array.length = 0;\n        }\n\n        return barriersObjectToArray(this.barriers, this.barriers_empty_array);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        let has_differing   = false;\n        const markers_array = barriersObjectToArray(this.markers, []);\n\n        if (this.markers_empty_array.length !== markers_array.length) {\n            has_differing = true;\n        } else {\n            this.markers_empty_array.forEach(marker => {\n                markers_array.forEach(next_marker => {\n                    Object.keys(marker).forEach(key => {\n                        if (marker[key] !== next_marker[key]) {\n                            has_differing = true;\n                        }\n                    });\n                });\n            });\n        }\n\n        if (has_differing) {\n            this.markers_empty_array = [];\n        } else {\n            this.markers_empty_array.length = 0;\n        }\n\n        return barriersObjectToArray(this.markers, this.markers_empty_array);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() {\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation            : false, // ui.is_chart_asset_info_visible,\n            countdown                   : ui.is_chart_countdown_visible,\n            isHighestLowestMarkerEnabled: false, // !this.is_contract_mode, // TODO: Pending UI\n            lang                        : common.current_language,\n            position                    : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme                       : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsForgetStream = (stream_id) => (\n        WS.forgetStream(stream_id)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        if (request_object.active_symbols) {\n            if (this.should_refresh_active_symbols) {\n                return WS.sendRequest(request_object, { forced: true });\n            }\n            return BinarySocket.wait('active_symbols');\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import debounce                       from 'lodash.debounce';\nimport {\n    action,\n    computed,\n    observable,\n}                                     from 'mobx';\nimport { WS }                         from 'Services';\nimport { toMoment }                   from 'Utils/Date';\nimport { formatStatementTransaction } from './Helpers/format-response';\nimport getDateBoundaries              from '../Profit/Helpers/format-request';\nimport BaseStore                      from '../../base-store';\n\nconst batch_size = 100; // request response limit\nconst delay_on_scroll_time = 150; // fetch debounce delay on scroll\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = null;\n    @observable date_to        = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n    @observable error          = '';\n\n    // `client_loginid` is only used to detect if this is in sync with the client-store, don't rely on\n    // this for calculations. Use the client.currency instead.\n    @observable client_loginid = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data               = [];\n        this.has_loaded_all     = false;\n        this.is_loading         = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = null;\n        this.date_to   = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        this.partial_fetch_time = 0;\n    }\n\n    shouldFetchNextBatch(should_load_partially) {\n        if (!should_load_partially && (this.has_loaded_all || this.is_loading)) return false;\n        const today = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        if (this.date_to < today) return (!should_load_partially && this.partial_fetch_time);\n        return true;\n    }\n\n    @action.bound\n    async fetchNextBatch(should_load_partially = false) {\n        if (!this.shouldFetchNextBatch(should_load_partially)) return;\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            !should_load_partially ? this.data.length : undefined,\n            getDateBoundaries(this.date_from, this.date_to, this.partial_fetch_time, should_load_partially),\n        );\n        this.statementHandler(response, should_load_partially);\n    }\n\n    @action.bound\n    statementHandler(response, should_load_partially) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n                this.root_store.modules.trade.active_symbols,\n            ));\n\n        if (should_load_partially) {\n            this.data = [...formatted_transactions, ...this.data];\n        } else {\n            this.data = [...this.data, ...formatted_transactions];\n        }\n        this.has_loaded_all = !should_load_partially && formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n        if (formatted_transactions.length > 0) {\n            this.partial_fetch_time = toMoment().unix();\n        }\n    }\n\n    @action.bound\n    handleDateChange(date_values) {\n        Object.keys(date_values).forEach(key => {\n            if (date_values[key]) {\n                this[`date_${key}`] = date_values[key];\n            }\n        });\n        this.clearTable();\n        this.fetchNextBatch();\n    }\n\n    fetchOnScroll = debounce((left) => {\n        if (left < 2000) {\n            this.fetchNextBatch();\n        }\n    }, delay_on_scroll_time);\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll  = scrollHeight - (scrollTop + clientHeight);\n\n        this.fetchOnScroll(left_to_scroll);\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.assertHasValidCache(\n            this.client_loginid,\n            this.clearDateFilter,\n            this.clearTable,\n            WS.forgetAll.bind(null, 'proposal')\n        );\n        this.client_loginid = this.root_store.client.loginid;\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.waitFor('authorize');\n        this.fetchNextBatch(true);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n    }\n}\n","import { formatMoney }          from '_common/base/currency_base';\nimport { toTitleCase }          from '_common/string_util';\nimport { localize }             from 'App/i18n';\nimport { getMarketInformation } from 'Modules/Reports/Helpers/market-underlying';\nimport { toMoment }             from 'Utils/Date';\nimport { getSymbolDisplayName } from '../../Trading/Helpers/active-symbols';\n\nexport const formatStatementTransaction = (transaction, currency, active_symbols = []) => {\n    const format_string           = 'DD MMM YYYY HH:mm:ss';\n    const transaction_time        = toMoment(transaction.transaction_time).format(format_string);\n    const payout                  = parseFloat(transaction.payout);\n    const amount                  = parseFloat(transaction.amount);\n    const balance                 = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n    const shortcode               = ['buy', 'sell'].includes(transaction.action_type) ? transaction.shortcode : null;\n    const display_name            = shortcode ? getSymbolDisplayName(\n        active_symbols,\n        getMarketInformation(shortcode).underlying\n    ) : '';\n\n    return {\n        action     : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date       : transaction_time,\n        display_name,\n        refid      : transaction.transaction_id,\n        payout     : isNaN(payout) ? '-' : formatMoney(currency, payout, should_exclude_currency),\n        amount     : isNaN(amount) ? '-' : formatMoney(currency, amount, should_exclude_currency),\n        balance    : isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc       : transaction.longcode.replace(/\\n/g, '<br />'),\n        id         : transaction.contract_id,\n        app_id     : transaction.app_id,\n        shortcode,\n        action_type: transaction.action_type,\n    };\n};\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) =>\n    WS.subscribeProposalOpenContractOnBuy({ buy: proposal_id, price });\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","import { localize }           from 'App/i18n';\nimport { isSessionAvailable } from 'Stores/Modules/Trading/Helpers/start-date';\nimport {\n    isHourValid,\n    isMinuteValid,\n    isTimeValid,\n    toMoment }                from 'Utils/Date';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.barrier_count }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.barrier_count }],\n            ['custom' , { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    expiry_date: {\n        trigger: 'expiry_time',\n    },\n    start_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Start time cannot be in the past.') }],\n        ],\n    },\n    expiry_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Expiry time cannot be in the past.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract-type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeStartDate = async (store) => {\n    const {\n        contract_type,\n        duration_unit,\n        expiry_time,\n        start_date,\n        symbol } = store;\n    const server_time = store.root_store.common.server_time;\n    let {\n        start_time,\n        expiry_date,\n        expiry_type } = store;\n\n    start_time = start_time || server_time.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list     = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type           = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, expiry_date, expiry_type, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n    \n    const trading_times          = await ContractType.getTradingTimes(expiry_date, symbol);\n    const obj_market_open_times  = { market_open_times: trading_times.open };\n    const obj_market_close_times = { market_close_times: trading_times.close };\n\n    const market_close_times     = obj_market_close_times.market_close_times;\n    const obj_expiry_time        = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n        ...obj_expiry_type,\n        ...obj_market_open_times,\n        ...obj_market_close_times,\n    };\n};\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract-type';\nimport * as ContractType  from '../Actions/contract-type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start-date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n    const functions = getMethodsList(store, new_state);\n\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++){\n        extendOrReplace(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    StartDate.onChangeStartDate,\n    Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'market_close_times', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isVisible }                       from '_common/common_functions';\nimport {\n    getPropertyValue,\n    isDeepEqual }                          from '_common/utility';\nimport {\n    convertToUnix,\n    toMoment }                             from 'Utils/Date';\n\nconst map_error_field = {\n    barrier    : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n};\n\nexport const getProposalErrorField = (response) => {\n    const error_field = getPropertyValue(response, ['error', 'details', 'field']);\n    if (!error_field) {\n        return null;\n    }\n    const error_id = map_error_field[error_field] || error_field;\n    const el_error = document.getElementsByName(error_id)[0];\n    return (el_error && isVisible(el_error)) ? error_id : null;\n};\n\nexport const getProposalInfo = (store, response, obj_prev_contract_basis) => {\n    const proposal   = response.proposal || {};\n    const profit     = (proposal.payout - proposal.ask_price) || 0;\n    const returns    = profit * 100 / (proposal.ask_price || 1);\n    const stake      = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis = (basis_list.find(o => o.value !== store.basis));\n    const is_stake       = contract_basis.text === 'Stake';\n    const price          = is_stake ? stake : proposal[contract_basis.value];\n    let has_increased    = price > obj_prev_contract_basis.value;\n\n    if (!obj_prev_contract_basis.value || price === obj_prev_contract_basis.value) {\n        has_increased = null;\n    }\n\n    const obj_contract_basis = {\n        text : contract_basis.text || '',\n        value: price || '',\n    };\n\n    return {\n        id               : proposal.id || '',\n        has_error        : !!response.error,\n        has_error_details: !!getProposalErrorField(response),\n        has_increased,\n        message          : proposal.longcode || response.error.message,\n        obj_contract_basis,\n        payout           : proposal.payout,\n        profit           : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns          : `${returns.toFixed(2)}%`,\n        stake,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n","import debounce                       from 'lodash.debounce';\nimport {\n    action,\n    computed,\n    observable,\n    reaction,\n    runInAction }                     from 'mobx';\nimport BinarySocket                   from '_common/base/socket_base';\nimport { localize }                   from 'App/i18n';\nimport {\n    cloneObject,\n    isEmptyObject,\n    getPropertyValue }                from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                from '_common/base/currency_base';\nimport { WS }                         from 'Services';\nimport { isDigitTradeType }           from 'Modules/Trading/Helpers/digits';\nimport { processPurchase }            from './Actions/purchase';\nimport * as Symbol                    from './Actions/symbol';\nimport getValidationRules             from './Constants/validation-rules';\nimport {\n    pickDefaultSymbol,\n    showUnavailableLocationError,\n    isMarketClosed,\n}                                     from './Helpers/active-symbols';\nimport { setChartBarrier }            from './Helpers/chart';\nimport ContractType                   from './Helpers/contract-type';\nimport {\n    convertDurationLimit,\n    resetEndTimeOnVolatilityIndices } from './Helpers/duration';\nimport { processTradeParams }         from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalErrorField,\n    getProposalInfo }                 from './Helpers/proposal';\nimport { BARRIER_COLORS }             from '../SmartChart/Constants/barriers';\nimport BaseStore                      from '../../base-store';\n\nconst store_name = 'trade_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n    @observable is_equal                   = 0;\n\n    // Underlying\n    @observable symbol;\n    @observable is_market_closed = false;\n    @observable previous_symbol = '';\n    @observable active_symbols = [];\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount     = 10;\n    @observable basis      = '';\n    @observable basis_list = [];\n    @observable currency   = '';\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = null;\n    @observable sessions         = [];\n\n    @observable market_open_times = [];\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    @observable market_close_times = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info = {};\n    @observable purchase_info = {};\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n\n    initial_barriers;\n    is_initial_barrier_applied = false;\n\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('authorize', 'website_status');\n        action(async() => {\n            this.active_symbols = await WS.activeSymbols().active_symbols;\n        });\n    };\n\n    constructor({ root_store }) {\n        const local_storage_properties = [\n            'amount',\n            'barrier_1',\n            'barrier_2',\n            'basis',\n            'contract_start_type',\n            'contract_type',\n            'duration',\n            'duration_unit',\n            'expiry_date',\n            'expiry_type',\n            'is_equal',\n            'last_digit',\n            'start_date',\n            'start_time',\n            'symbol',\n        ];\n        super({\n            root_store,\n            local_storage_properties,\n            store_name,\n            validation_rules: getValidationRules(),\n        });\n\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n        reaction(\n            () => this.is_equal,\n            () => {\n                this.onAllowEqualsChange();\n            },\n        );\n        reaction(\n            () => this.symbol,\n            () => {\n                const date = resetEndTimeOnVolatilityIndices(this.symbol, this.expiry_type);\n                if (date) {\n                    this.expiry_date = date;\n                }\n            }\n        );\n        reaction(\n            () => this.duration_unit,\n            () => {\n                this.contract_expiry_type = this.duration_unit === 't' ? 'tick' : 'intraday';\n            }\n        );\n    }\n\n    @computed\n    get is_symbol_in_active_symbols() {\n        return this.active_symbols\n            .some(symbol_info => symbol_info.symbol === this.symbol && symbol_info.exchange_is_open === 1);\n    }\n\n    @action.bound\n    refresh = () => {\n        this.proposal_info     = {};\n        this.purchase_info     = {};\n        this.proposal_requests = {};\n        WS.forgetAll('proposal');\n    };\n\n    @action.bound\n    clearContract = () => {\n        if (this.root_store.modules.smart_chart.is_contract_mode) {\n            this.root_store.modules.contract_trade.onCloseContract();\n        }\n    };\n\n    @action.bound\n    setDefaultSymbol() {\n        if (!this.is_symbol_in_active_symbols) {\n            this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(this.active_symbols),\n            });\n        }\n    }\n\n    @action.bound\n    async setActiveSymbols() {\n        const { active_symbols, error } = this.smart_chart.should_refresh_active_symbols ?\n            // if SmartCharts has requested active_symbols, we wait for the response\n            await BinarySocket.wait('active_symbols')\n            : // else requests new active_symbols\n            await WS.activeSymbols({ forced: true });\n\n        if (error) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n            this.root_store.ui.setAppLoading(false);\n            return;\n        } else if (!active_symbols || !active_symbols.length) {\n            showUnavailableLocationError(this.root_store.common.showError);\n            this.root_store.ui.setAppLoading(false);\n            return;\n        }\n\n        this.processNewValuesAsync({ active_symbols });\n    }\n\n    @action.bound\n    async setContractTypes() {\n        if (this.symbol && this.is_symbol_in_active_symbols) {\n            await Symbol.onChangeSymbolAsync(this.symbol);\n            runInAction(() => {\n                this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                });\n            });\n        }\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        this.smart_chart      = this.root_store.modules.smart_chart;\n        this.currency         = this.root_store.client.currency;\n        this.initial_barriers = { barrier_1: this.barrier_1, barrier_2: this.barrier_2 };\n\n        await BinarySocket.wait('authorize');\n        await this.setActiveSymbols();\n        runInAction(async() => {\n            this.setDefaultSymbol();\n            await this.setContractTypes();\n            runInAction(() => {\n                this.processNewValuesAsync({\n                    is_market_closed: isMarketClosed(this.active_symbols, this.symbol),\n                });\n            });\n        });\n    }\n\n    @action.bound\n    onChangeMultiple(values) {\n        Object.keys(values).forEach((name) => {\n            if (!(name in this)) {\n                throw new Error(`Invalid Argument: ${name}`);\n            }\n        });\n\n        this.processNewValuesAsync({ ...values }, true);\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, value } = e.target;\n\n        // save trade_chart_symbol upon user change\n        if (name === 'symbol' && value) {\n            this.root_store.modules.smart_chart.trade_chart_symbol = value;\n        }\n\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (name === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.validateAllProperties();\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    setPreviousSymbol(symbol) {\n        if (this.previous_symbol !== symbol) this.previous_symbol = symbol;\n    }\n\n    @action.bound\n    async resetPreviousSymbol() {\n        this.setMarketStatus(isMarketClosed(this.active_symbols, this.previous_symbol));\n        await Symbol.onChangeSymbolAsync(this.previous_symbol);\n        runInAction(() => {\n            this.previous_symbol = ''; // reset the symbol to default\n        });\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        if (this.is_purchase_enabled) {\n            this.smart_chart.updateBarrierShade(is_over, contract_type);\n        }\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (!this.is_purchase_enabled) return;\n        if (proposal_id) {\n            this.is_purchase_enabled = false;\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    this.smart_chart.cleanupContractChartView();\n                    this.smart_chart.applySavedTradeChartLayout();\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    this.smart_chart.switchToContractMode();\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    const {\n                        contract_id,\n                        longcode,\n                        start_time,\n                    } = response.buy;\n                    // toggle smartcharts to contract mode\n                    if (contract_id) {\n                        // NOTE: changing chart granularity and chart_type has to be done in a different render cycle\n                        // so we have to set chart granularity to zero, and change the chart_type to 'mountain' first,\n                        // and then set the chart view to the start_time\n                        this.smart_chart.setChartView(start_time);\n                        // draw the start time line and show longcode then mount contract\n                        this.root_store.modules.contract_trade.drawContractStartTime(start_time, longcode, contract_id);\n                        this.root_store.ui.openPositionsDrawer();\n                    }\n                    this.root_store.gtm.pushPurchaseData(contract_data);\n                } else if (response.error) {\n                    // using javascript to disable purchase-buttons manually to compensate for mobx lag\n                    this.disablePurchaseButtons();\n                    this.root_store.common.services_error = {\n                        type: response.msg_type,\n                        ...response.error,\n                    };\n                    this.root_store.ui.toggleServicesErrorModal(true);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n                this.is_purchase_enabled = true;\n            }));\n        }\n    }\n\n    disablePurchaseButtons = () => {\n        const el_purchase_value    = document.getElementsByClassName('trade-container__price-info');\n        const el_purchase_buttons  = document.getElementsByClassName('btn-purchase');\n        [].forEach.bind(el_purchase_buttons, (el) => {\n            el.classList.add('btn-purchase--disabled');\n        })();\n        [].forEach.bind(el_purchase_value, (el) => {\n            el.classList.add('trade-container__price-info--fade');\n        })();\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency', 'smart_chart'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n        return new_state;\n    }\n\n    async processNewValuesAsync(\n        obj_new_values = {},\n        is_changed_by_user = false,\n        obj_old_values = {},\n        should_forget_first = true,\n    ) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (should_forget_first) WS.forgetAll('proposal');\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values))\n        ) {\n            const prev_currency = obj_old_values &&\n            !isEmptyObject(obj_old_values) &&\n            obj_old_values.currency ? obj_old_values.currency : this.currency;\n            if (isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(prev_currency)) {\n                obj_new_values.amount = is_changed_by_user && obj_new_values.amount ?\n                    obj_new_values.amount : getMinPayout(obj_new_values.currency);\n            }\n            this.currency = obj_new_values.currency;\n        }\n\n        let has_only_forward_starting_contracts;\n\n        if (Object.keys(obj_new_values).includes('symbol')) {\n            this.setPreviousSymbol(this.symbol);\n            await Symbol.onChangeSymbolAsync(obj_new_values.symbol);\n            this.setMarketStatus(isMarketClosed(this.active_symbols, obj_new_values.symbol));\n            has_only_forward_starting_contracts =\n                ContractType.getContractCategories().has_only_forward_starting_contracts;\n        }\n        // TODO: remove all traces of setHasOnlyForwardingContracts and has_only_forward_starting_contracts in app\n        //  once future contracts are implemented\n        this.root_store.ui.setHasOnlyForwardingContracts(has_only_forward_starting_contracts);\n        if (has_only_forward_starting_contracts) return;\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            // To prevent infinite loop when changing from advanced end_time to digit type contract\n            if (obj_new_values.contract_type && this.root_store.ui.is_advanced_duration) {\n                if (isDigitTradeType(obj_new_values.contract_type)) {\n                    this.barrier_1     = '';\n                    this.barrier_2     = '';\n                    this.expiry_type = 'duration';\n                    this.root_store.ui.is_advanced_duration = false;\n                }\n            }\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(!this.is_initial_barrier_applied ? this.initial_barriers : {}),\n            });\n            this.is_initial_barrier_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            if (!this.smart_chart.is_contract_mode) {\n                this.debouncedProposal();\n            }\n        }\n    }\n\n    @action.bound\n    clearPurchaseInfo() {\n        this.purchase_info = {};\n        this.proposal_requests = {};\n        this.proposal_info = {};\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n            this.root_store.modules.contract_trade.setIsDigitContract(Object.keys(this.proposal_requests)[0]);\n\n            Object.keys(this.proposal_requests).forEach((type) => {\n                WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n            });\n        }\n        this.root_store.ui.resetPurchaseStates();\n    }\n\n    @action.bound\n    setMarketStatus(status) {\n        this.is_market_closed = status;\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        // We do not want new proposal requests when in contract mode\n        if (this.root_store.modules.smart_chart.is_contract_mode) return;\n        const contract_type           = response.echo_req.contract_type;\n        const prev_proposal_info      = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            const color = this.root_store.ui.is_dark_mode_on ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY;\n            const barrier_config = { color };\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange, barrier_config);\n        }\n\n        if (response.error) {\n            const error_id = getProposalErrorField(response);\n            if (error_id) {\n                this.setValidationErrorMessages(error_id, [response.error.message]);\n            }\n        } else {\n            this.validateAllProperties();\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    onAllowEqualsChange() {\n        this.processNewValuesAsync({ contract_type: parseInt(this.is_equal) ? 'rise_fall_equal' : 'rise_fall' }, true);\n    }\n\n    @action.bound\n    updateSymbol(underlying) {\n        if (!underlying) return;\n        this.onChange({\n            target: {\n                name : 'symbol',\n                value: underlying,\n            },\n        });\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.processNewValuesAsync(\n                { currency: this.root_store.client.currency },\n                true,\n                { currency: this.currency },\n                false,\n            );\n            await this.clearContract();\n            await this.resetErrorServices();\n            await this.refresh();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    resetErrorServices() {\n        this.root_store.ui.toggleServicesErrorModal(false);\n    }\n\n    @action.bound\n    async onMount() {\n        this.onLoadingMount();\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    onLoadingMount() {\n        const first_timeout = setTimeout(() => {\n            const loading_message = localize('Your network connection might be slow.');\n            const secondary_message = localize('Please wait for the page to finish loading.');\n            this.root_store.ui.setSlowLoading(true, [loading_message, secondary_message]);\n        }, 8000);\n\n        const second_timeout = setTimeout(() => {\n            const loading_message = localize('This page is taking too long to load.');\n            const secondary_message = localize('Please wait for the page to finish loading or check your network connection.');\n            this.root_store.ui.setSlowLoading(true, [loading_message, secondary_message]);\n        }, 15000);\n\n        const loading_interval = setInterval(() => {\n            if (this.smart_chart) {\n                if (this.smart_chart.is_chart_ready && this.is_trade_component_mounted) {\n                    this.root_store.ui.setAppLoading(false);\n                    clearInterval(loading_interval);\n                    clearTimeout(first_timeout);\n                    clearTimeout(second_timeout);\n                }\n            }\n        }, 400);\n    }\n\n    @action.bound\n    restoreTradeChart() {\n        const smart_chart_store = this.root_store.modules.smart_chart;\n        if (smart_chart_store.trade_chart_symbol &&\n            (smart_chart_store.trade_chart_symbol !== this.symbol)) {\n            this.symbol = smart_chart_store.trade_chart_symbol;\n        }\n        if (smart_chart_store.trade_chart_granularity &&\n            (smart_chart_store.trade_chart_granularity !== smart_chart_store.granularity)) {\n            smart_chart_store.granularity = smart_chart_store.trade_chart_granularity;\n        } else {\n            smart_chart_store.granularity = 0;\n        }\n        if (smart_chart_store.trade_chart_type !== smart_chart_store.chart_type) {\n            smart_chart_store.chart_type = smart_chart_store.trade_chart_type;\n        } else {\n            smart_chart_store.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.proposal_info = {};\n        this.purchase_info = {};\n        WS.forgetAll('proposal');\n        this.resetErrorServices();\n        this.restoreTradeChart();\n        this.is_trade_component_mounted = false;\n        // clear url query string\n        window.history.pushState(null, null, window.location.pathname);\n    }\n}\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange, barrier_config) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n        barrier_config,\n    );\n};\n","import CashierStore        from './Cashier/cashier-store';\nimport ContractReplayStore from './Contract/contract-replay-store';\nimport ContractTradeStore  from './Contract/contract-trade-store';\nimport PortfolioStore      from './Portfolio/portfolio-store';\nimport ProfitTableStore    from './Profit/profit-store';\nimport SmartChartStore     from './SmartChart/smart-chart-store';\nimport StatementStore      from './Statement/statement-store';\nimport TradeStore          from './Trading/trade-store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.cashier         = new CashierStore({ root_store });\n        this.contract_replay = new ContractReplayStore({ root_store });\n        this.contract_trade  = new ContractTradeStore({ root_store });\n        this.portfolio       = new PortfolioStore({ root_store });\n        this.profit_table    = new ProfitTableStore({ root_store });\n        this.smart_chart     = new SmartChartStore({ root_store });\n        this.statement       = new StatementStore({ root_store });\n        this.trade           = new TradeStore({ root_store });\n\n    }\n}\n","import {\n    action,\n    autorun,\n    computed,\n    observable }             from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH }       from 'Constants/ui';\nimport { unique }            from '_common/utility';\nimport BaseStore             from './base-store';\nimport { sortNotifications } from '../App/Components/Elements/NotificationMessage';\n\nconst store_name = 'ui_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_positions_drawer_on     = false;\n    @observable is_reports_visible         = false;\n\n    @observable is_cashier_modal_on     = false;\n    @observable is_dark_mode_on         = false;\n    @observable is_settings_modal_on    = false;\n    @observable is_accounts_switcher_on = false;\n\n    @observable is_loading              = true;\n    @observable is_slow_loading         = false;\n    @observable slow_loading_status     = [];\n\n    @observable has_only_forward_starting_contracts = false;\n\n    // Purchase Controls\n    // @observable is_purchase_confirm_on    = false;\n    @observable is_services_error_visible             = false;\n    @observable is_unsupported_contract_modal_visible = false;\n    @observable is_account_signup_modal_visible       = false;\n    // @observable is_purchase_lock_on       = false;\n\n    // SmartCharts Controls\n    // TODO: enable asset information\n    // @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable pwa_prompt_event = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable notification_messages = [];\n    @observable push_notifications = [];\n\n    @observable is_advanced_duration   = false;\n    @observable advanced_duration_unit = 't';\n    @observable advanced_expiry_type   = 'duration';\n    @observable simple_duration_unit   = 't';\n    @observable duration_t             = 5;\n    @observable duration_s             = 15;\n    @observable duration_m             = 3;\n    @observable duration_h             = 1;\n    @observable duration_d             = 1;\n\n    // purchase button states\n    @observable purchase_states = [ false, false ];\n\n    @observable is_fully_blurred = false;\n    @observable is_app_blurred   = false;\n    @observable is_route_blurred = false;\n    @observable show_positions_toggle = true;\n\n    @observable active_cashier_tab = 'deposit';\n\n    getDurationFromUnit = (unit) => this[`duration_${unit}`];\n\n    constructor() {\n        const local_storage_properties = [\n            'advanced_duration_unit',\n            'is_advanced_duration',\n            'advanced_expiry_type',\n            'simple_duration_unit',\n            'duration_t',\n            'duration_s',\n            'duration_m',\n            'duration_h',\n            'duration_d',\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_positions_drawer_on',\n            'is_reports_visible',\n            // 'is_purchase_confirm_on',\n            // 'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties, store_name });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => {\n            if (this.is_dark_mode_on) {\n                document.body.classList.remove('theme--light');\n                document.body.classList.add('theme--dark');\n            } else {\n                document.body.classList.remove('theme--dark');\n                document.body.classList.add('theme--light');\n            }\n        });\n    }\n\n    @action.bound\n    onChangeUiStore({ name, value }) {\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n        this[name] = value;\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_positions_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    showRouteBlur() {\n        this.is_route_blurred = true;\n    }\n\n    @action.bound\n    hideRouteBlur() {\n        this.is_route_blurred = false;\n    }\n\n    @action.bound\n    showAppBlur() {\n        this.is_app_blurred = true;\n    }\n\n    @action.bound\n    hideAppBlur() {\n        this.is_app_blurred = false;\n    }\n\n    @action.bound\n    showFullBlur() {\n        this.is_fully_blurred = true;\n    }\n\n    @action.bound\n    hideFullBlur() {\n        this.is_fully_blurred = false;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    setAppLoading(is_visible) {\n        this.is_loading = is_visible;\n    }\n\n    @action.bound\n    setPurchaseState(index) {\n        this.purchase_states[index] = true;\n\n        // TODO: Find better solution in the future for hack below\n        // Force the animation to start quicker by manually assigning class to compensate for mobx getter lag\n        // Because mobx has a delay before it can receive the updated prop used to assign the animation class\n        const el_purchase_buttons = document.getElementsByClassName('btn-purchase');\n        if (el_purchase_buttons[index]) {\n            el_purchase_buttons[index].classList.add('btn-purchase--swoosh');\n        }\n        // UI/UX wants button to remain green until transition is finished and only then disable buttons\n        setTimeout(() => {\n            [].forEach.bind(el_purchase_buttons, (el) => {\n                el.classList.add('btn-purchase--disabled');\n            })();\n        }, 250);\n    }\n\n    @action.bound\n    resetPurchaseStates() {\n        this.purchase_states = [ false, false ];\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    // TODO: enable asset information\n    // @action.bound\n    // toggleChartAssetInfo() {\n    //     this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    // }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    // @action.bound\n    // togglePurchaseLock() {\n    //     this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    // }\n\n    // @action.bound\n    // togglePurchaseConfirmation() {\n    //     this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    // }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n        return this.is_dark_mode_on;\n    }\n\n    @action.bound\n    showPositionsFooterToggle() {\n        this.show_positions_toggle = true;\n    }\n\n    @action.bound\n    hidePositionsFooterToggle() {\n        this.show_positions_toggle = false;\n    }\n\n    @action.bound\n    toggleCashierModal() {\n        this.is_cashier_modal_on = !this.is_cashier_modal_on;\n    }\n\n    @action.bound\n    setCashierActiveTab(tab = 'deposit') {\n        if (this.active_cashier_tab !== tab) this.active_cashier_tab = tab;\n    }\n\n    @action.bound\n    toggleSettingsModal() {\n        this.is_settings_modal_on = !this.is_settings_modal_on;\n    }\n\n    @action.bound\n    openPositionsDrawer() { // show and hide Positions Drawer\n        this.is_positions_drawer_on = true;\n    }\n\n    @action.bound\n    togglePositionsDrawer() { // toggle Positions Drawer\n        this.is_positions_drawer_on = !this.is_positions_drawer_on;\n    }\n\n    @action.bound\n    toggleReports(is_visible) {\n        this.is_reports_visible = is_visible;\n    }\n\n    @action.bound\n    toggleServicesErrorModal(is_visible) {\n        this.is_services_error_visible = is_visible;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    removePWAPromptEvent() {\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addNotification(notification) {\n        this.notification_messages = [...this.notification_messages, notification].sort(sortNotifications);\n    }\n\n    @action.bound\n    removeNotification(notification) {\n        const index = this.notification_messages.indexOf(notification);\n        if (index > -1) {\n            this.notification_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllNotifications() {\n        this.notification_messages = [];\n    }\n\n    @action.bound\n    setHasOnlyForwardingContracts(has_only_forward_starting_contracts) {\n        this.has_only_forward_starting_contracts = has_only_forward_starting_contracts;\n    }\n\n    @action.bound\n    setSlowLoading(status, message) {\n        this.is_slow_loading     = status;\n        this.slow_loading_status = message;\n    }\n\n    @action.bound\n    addNotificationBar(message) {\n        this.push_notifications.push(message);\n        this.push_notifications = unique(this.push_notifications, 'msg_type');\n    }\n\n    @action.bound\n    toggleUnsupportedContractModal(state_change = !this.is_unsupported_contract_modal_visible) {\n        this.is_unsupported_contract_modal_visible = state_change;\n    }\n\n    @action.bound\n    toggleAccountSignupModal(state_change = !this.is_unsupported_contract_modal_visible) {\n        this.is_account_signup_modal_visible = state_change;\n    }\n}\n","import ClientStore  from './client-store';\nimport CommonStore  from './common-store';\nimport GTMStore     from './gtm-store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui-store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n        this.gtm     = new GTMStore(this);\n    }\n}\n","import { configure }        from 'mobx';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network-monitor';\nimport OutdatedBrowser      from 'Services/outdated-browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\n\nconfigure({ enforceActions: 'observed' });\n\nconst initStore = () => {\n    Client.init();\n\n    const root_store = new RootStore();\n\n    setStorageEvents(root_store);\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    return root_store;\n};\n\nexport default initStore;\n","export const setStorageEvents = (root_store) => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden) {\n                    window.location.reload();\n                }\n                break;\n            case 'verification_code':\n                if (document.hidden && root_store.ui.is_cashier_modal_on && root_store.ui.active_cashier_tab === 'withdraw') {\n                    root_store.modules.cashier.clearVerification();\n                    root_store.ui.toggleCashierModal();\n                }\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport ReactDOM                    from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error-boundary.jsx';\nimport AppContents                 from './Containers/Layout/app-contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport Lazy                        from './Containers/Lazy';\nimport Modals                      from './Containers/Modals';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport './i18n';\n// eslint-disable-next-line import/extensions\nimport initStore                   from './app.js';\n// eslint-disable-next-line import/no-unresolved\nimport 'Sass/app.scss';\n// Check if device is touch capable\nconst isTouchDevice = 'ontouchstart' in document.documentElement;\n\nconst App = ({ root_store }) => {\n    const l = window.location;\n    const base = l.pathname.split('/')[1];\n    return (\n        <Router basename={/^\\/br_/.test(l.pathname) ? `/${base}` : null}>\n            <MobxProvider store={root_store}>\n                {\n                    root_store.ui.is_mobile || (root_store.ui.is_tablet && isTouchDevice) ?\n                        <Lazy\n                            ctor={() => import(/* webpackChunkName: \"work-in-progress\" */'./Containers/Wip')}\n                            should_load={root_store.ui.is_mobile || (root_store.ui.is_tablet && isTouchDevice)}\n                            has_progress={true}\n                        /> :\n                        <React.Fragment>\n                            <Header />\n                            <ErrorBoundary>\n                                <AppContents>\n                                    <Routes />\n                                    <Lazy\n                                        ctor={() => import(/* webpackChunkName: \"push-notification\" */'./Containers/push-notification.jsx')}\n                                        should_load={!root_store.ui.is_loading}\n                                        has_progress={false}\n                                    />\n                                </AppContents>\n                            </ErrorBoundary>\n                            <Footer />\n                            <Modals />\n                        </React.Fragment>\n                }\n            </MobxProvider>\n        </Router>\n    );\n};\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n\nconst root_store = initStore();\n\nconst wrapper = document.getElementById('deriv_app');\n// eslint-disable-next-line no-unused-expressions\nwrapper ? ReactDOM.render(<App root_store={root_store} />, wrapper) : false;\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport ReactDOM             from 'react-dom';\nimport posed, { PoseGroup } from 'react-pose';\nimport Icon                 from 'Assets/icon.jsx';\n\nconst FadeIn = posed.span({\n    enter: {\n        opacity   : 1,\n        transition: {\n            duration: 150,\n        },\n    },\n    exit: {\n        opacity   : 0,\n        transition: {\n            duration: 150,\n        },\n    },\n});\n\nclass PopoverBubble extends React.PureComponent {\n    calculatePosition = () => {\n        const { alignment, target_rectangle, margin = 0 } = this.props;\n\n        switch (alignment) {\n            case 'top': return {\n                left     : (target_rectangle.width / 2) + target_rectangle.left,\n                bottom   : (window.innerHeight - target_rectangle.top) + margin,\n                transform: 'translateX(-50%)',\n            };\n            case 'bottom': return {\n                left     : (target_rectangle.width / 2) + target_rectangle.left,\n                top      : target_rectangle.bottom + margin,\n                transform: 'translateX(-50%)',\n            };\n            case 'left': return {\n                right    : (window.innerWidth - target_rectangle.left) + margin,\n                top      : (target_rectangle.height / 2) + target_rectangle.top,\n                transform: 'translateY(-50%)',\n            };\n            case 'right': return {\n                left     : target_rectangle.right + margin,\n                top      : (target_rectangle.height / 2) + target_rectangle.top,\n                transform: 'translateY(-50%)',\n            };\n            default: return {\n                left: target_rectangle.left,\n                top : target_rectangle.top,\n            };\n        }\n    };\n\n    render() {\n        const {\n            alignment,\n            className,\n            has_error,\n            icon,\n            is_open,\n            message,\n            target_rectangle,\n        } = this.props;\n\n        if (!target_rectangle) return null;\n\n        const popover_bubble = (\n            <PoseGroup>\n                { is_open &&\n                <FadeIn key='fade_in' initialPose='exit' style={{ position: 'fixed', zIndex: 999 }}>\n                    <span\n                        style={ target_rectangle ? this.calculatePosition() : {}}\n                        data-popover-pos={alignment}\n                        className={classNames(\n                            className,\n                            'popover__bubble',\n                            { 'popover__bubble--error': has_error },\n                        )}\n                    >\n                        { icon === 'info' &&\n                            <i className='popover__bubble__icon'>\n                                <Icon icon='IconInfoBlue' />\n                            </i>\n                        }\n\n                        <span className='popover__bubble__text'>\n                            { message }\n                        </span>\n                        <span className='popover__bubble__arrow' />\n                    </span>\n                </FadeIn>\n                }\n            </PoseGroup>\n        );\n\n        return ReactDOM.createPortal(\n            popover_bubble,\n            document.getElementById('deriv_app')\n        );\n    }\n}\n\nPopoverBubble.propTypes = {\n    alignment       : PropTypes.string,\n    children        : PropTypes.node,\n    className       : PropTypes.string,\n    has_error       : PropTypes.bool,\n    icon            : PropTypes.string,\n    is_open         : PropTypes.bool,\n    margin          : PropTypes.number,\n    message         : PropTypes.string.isRequired,\n    target_rectangle: PropTypes.object,\n};\n\nexport default PopoverBubble;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport Icon          from 'Assets/icon.jsx';\nimport PopoverBubble from './popover-bubble.jsx';\n\nclass Popover extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_open         : false,\n            target_rectangle: null,\n        };\n        this.target_reference = React.createRef();\n    }\n\n    componentDidMount() {\n        this.setState({\n            is_open         : this.props.has_error,\n            target_rectangle: this.target_reference.current.getBoundingClientRect(),\n        });\n    }\n\n    toggleOpen = () => {\n        this.setState({\n            is_open         : Boolean(this.props.message),\n            target_rectangle: this.target_reference.current.getBoundingClientRect(),\n        });\n    }\n\n    toggleClose = () => this.setState({ is_open: false });\n\n    render() {\n        const {\n            alignment,\n            children,\n            classNameBubble,\n            classNameTarget,\n            classNameTargetIcon,\n            disable_target_icon,\n            has_error,\n            icon,\n            margin,\n            message,\n        } = this.props;\n\n        const icon_class_name = classNames(classNameTargetIcon, icon);\n        return (\n            <div\n                className='popover'\n                onMouseEnter={this.toggleOpen}\n                onMouseLeave={this.toggleClose}\n            >\n                <div className={classNames(classNameTarget, 'popover__target')} ref={this.target_reference}>\n                    { !disable_target_icon &&\n                        <i className={message ? 'popover__target__icon' : 'popover__target__icon--disabled'}>\n                            {(icon === 'info')     && <Icon icon='IconInfoOutline' className={icon_class_name} /> }\n                            {(icon === 'question') && <Icon icon='IconQuestion'    className={icon_class_name} />}\n                            {(icon === 'dot')      && <Icon icon='IconRedDot'      className={icon_class_name} />}\n                        </i>\n                    }\n\n                    { children }\n                </div>\n\n                <PopoverBubble\n                    alignment={alignment}\n                    className={classNameBubble}\n                    has_error={has_error}\n                    icon={icon}\n                    is_open={this.state.is_open}\n                    target_rectangle={this.state.target_rectangle}\n                    margin={margin}\n                    message={message}\n                />\n            </div>\n        );\n    }\n}\n\nPopover.propTypes = {\n    alignment          : PropTypes.string,\n    children           : PropTypes.node,\n    classNameBubble    : PropTypes.string,\n    classNameTarget    : PropTypes.string,\n    classNameTargetIcon: PropTypes.string,\n    disable_target_icon: PropTypes.bool,\n    has_error          : PropTypes.bool,\n    icon               : PropTypes.string,\n    margin             : PropTypes.number,\n    message            : PropTypes.string,\n};\n\nexport default Popover;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    is_center,\n    onMouseEnter,\n    onMouseLeave,\n}) => {\n    const fieldset_header_class = classNames('trade-container__fieldset-header', is_center ? 'center-text' : '');\n    const fieldset_info_class   = classNames('trade-container__fieldset-info', !is_center && 'trade-container__fieldset-info--left');\n\n    return (\n        <fieldset className={className} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className={fieldset_header_class}>\n                    <span className={fieldset_info_class}>{header}</span>\n                </div>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n};\n\nexport default Fieldset;\n","const Client              = require('./client_base');\nconst getElementById      = require('../common_functions').getElementById;\nconst getLanguage         = require('../language').get;\nconst isMobile            = require('../os_detect').isMobile;\nconst isStorageSupported  = require('../storage').isStorageSupported;\nconst LocalStore          = require('../storage').LocalStore;\nconst urlForCurrentDomain = require('../url').urlForCurrentDomain;\nconst domain_app_ids      = require('../../config').domain_app_ids;\nconst getAppId            = require('../../config').getAppId;\n\nconst Login = (() => {\n    const redirectToLogin = () => {\n        if (!Client.isLoggedIn() && !isLoginPages() && isStorageSupported(sessionStorage)) {\n            sessionStorage.setItem('redirect_url', window.location.href);\n            window.location.href = loginUrl();\n        }\n    };\n\n    const loginUrl = () => {\n        const server_url         = localStorage.getItem('config.server_url');\n        const language           = getLanguage();\n        const signup_device      = LocalStore.get('signup_device') || (isMobile() ? 'mobile' : 'desktop');\n        const date_first_contact = LocalStore.get('date_first_contact');\n        const marketing_queries  = `&signup_device=${signup_device}${date_first_contact ? `&date_first_contact=${date_first_contact}` : ''}`;\n        const default_binary_url = `https://oauth.binary.com/oauth2/authorize?app_id=${getAppId()}&l=${language}${marketing_queries}`;\n\n        if (server_url && /qa/.test(server_url)) {\n            return `https://${server_url}/oauth2/authorize?app_id=${getAppId()}&l=${language}${marketing_queries}`;\n        }\n        if (getAppId === domain_app_ids['deriv.app']) {\n            return default_binary_url;\n        }\n\n        return urlForCurrentDomain(default_binary_url);\n    };\n\n    // TODO: update this to handle logging into /app/ url\n    const isLoginPages = () => /logged_inws|redirect/i.test(window.location.pathname);\n\n    const socialLoginUrl = brand => (`${loginUrl()}&social_signup=${brand}`);\n\n    const initOneAll = () => {\n        ['google', 'facebook'].forEach(provider => {\n            const el_button = getElementById(`#button_${provider}`);\n            el_button.removeEventListener('click');\n            el_button.addEventListener('click', (e) => {\n                e.preventDefault();\n                window.location.href = socialLoginUrl(provider);\n            });\n        });\n    };\n\n    return {\n        redirectToLogin,\n        isLoginPages,\n        initOneAll,\n    };\n})();\n\nmodule.exports = Login;\n","import ServerTime   from '_common/base/server_time';\nimport { toMoment } from 'Utils/Date';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: toMoment(option.open), close: toMoment(option.close) };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : toMoment(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = toMoment(ServerTime.get()),\n    start_moment           = toMoment(ServerTime.get()),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, ServerTime.get(), should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')))\n);\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains as supported \"production domains\"\n    'deriv.app': 16929,\n};\n\nconst getCurrentProductionDomain = () => (\n    !/^staging\\./.test(window.location.hostname) &&\n    Object.keys(domain_app_ids).find(domain => (new RegExp(`.${domain}$`, 'i').test(window.location.hostname)))\n);\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id);\n        app_id = user_app_id;\n    } else if (/staging\\.deriv\\.app/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 16303; // it's being used in endpoint chrome extension - please do not remove\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 17044;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        const current_domain = getCurrentProductionDomain();\n        app_id = domain_app_ids[current_domain] || 16929;\n    }\n    return app_id;\n};\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    domain_app_ids,\n    getCurrentProductionDomain,\n    isProduction,\n    getAppId,\n    getSocketURL,\n};\n","import { getLastTickFromTickStream } from './logic';\n\nexport const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const { tick_stream } = contract_info;\n    const { tick_display_value, epoch } = getLastTickFromTickStream(tick_stream);\n\n    if (!tick_display_value || !epoch) return {}; // filter out empty responses\n\n    const current = (epoch in digits_info) ? {} : // filter out duplicated responses\n        createDigitInfo(tick_display_value, epoch);\n\n    return {\n        ...current,\n    };\n};\n\nconst createDigitInfo = (spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            spot,\n        },\n    };\n};\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nclass Icon extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        /* When adding a new icon, arrange it by following the ascending file system arrangement */\n        this.icons = {\n            // Common\n            IconArrowBold         : React.lazy(() => import('./Common/icon-arrow-bold.jsx')),\n            IconArrow             : React.lazy(() => import('./Common/icon-arrow.jsx')),\n            IconBack              : React.lazy(() => import('./Common/icon-back.jsx')),\n            IconCalendarToday     : React.lazy(() => import('./Common/icon-calendar-today.jsx')),\n            IconCalendar          : React.lazy(() => import('./Common/icon-calendar.jsx')),\n            IconChevronDoubleLeft : React.lazy(() => import('./Common/icon-chevron-double-left.jsx')),\n            IconChevronDoubleRight: React.lazy(() => import('./Common/icon-chevron-double-right.jsx')),\n            IconChevronLeft       : React.lazy(() => import('./Common/icon-chevron-left.jsx')),\n            IconChevronRight      : React.lazy(() => import('./Common/icon-chevron-right.jsx')),\n            IconClear             : React.lazy(() => import('./Common/icon-clear.jsx')),\n            IconClock             : React.lazy(() => import('./Common/icon-clock.jsx')),\n            IconClose             : React.lazy(() => import('./Common/icon-close.jsx')),\n            IconCountryFlag       : React.lazy(() => import('./Common/icon-country-flag.jsx')),\n            IconDanger            : React.lazy(() => import('./Common/icon-danger.jsx')),\n            IconDeposit           : React.lazy(() => import('./Common/icon-deposit.jsx')), // TODO: update big when design is ready\n            IconDepositSmall      : React.lazy(() => import('./Common/icon-deposit-small.jsx')),\n            IconExclamation       : React.lazy(() => import('./Common/icon-exclamation.jsx')),\n            IconFlag              : React.lazy(() => import('./Common/icon-flag.jsx')),\n            IconInfoBlue          : React.lazy(() => import('./Common/icon-info-blue.jsx')),\n            IconInfoOutline       : React.lazy(() => import('./Common/icon-info-outline.jsx')),\n            IconInformation       : React.lazy(() => import('./Common/icon-information.jsx')),\n            IconMinimize          : React.lazy(() => import('./Common/icon-minimize.jsx')),\n            IconMinus             : React.lazy(() => import('./Common/icon-minus.jsx')),\n            IconPlus              : React.lazy(() => import('./Common/icon-plus.jsx')),\n            IconQuestion          : React.lazy(() => import('./Common/icon-question.jsx')),\n            IconRedDot            : React.lazy(() => import('./Common/icon-red-dot.jsx')),\n            IconSuccess           : React.lazy(() => import('./Common/icon-success.jsx')),\n            IconWarning           : React.lazy(() => import('./Common/icon-warning.jsx')),\n            IconWip               : React.lazy(() => import('./Common/icon-wip.jsx')),\n            IconWithdrawal        : React.lazy(() => import('./Common/icon-withdrawal.jsx')), // TODO: update big when design is ready\n            IconWithdrawalSmall   : React.lazy(() => import('./Common/icon-withdrawal-small.jsx')),\n\n            // Contract\n            ContractIconClose: React.lazy(() => import('./Contract/icon-close.jsx')),\n            IconEndTime      : React.lazy(() => import('./Contract/icon-end-time.jsx')),\n            ContractIconFlag : React.lazy(() => import('./Contract/icon-flag.jsx')),\n            IconStartTime    : React.lazy(() => import('./Contract/icon-start-time.jsx')),\n            IconTick         : React.lazy(() => import('./Contract/icon-tick.jsx')),\n\n            // Cashier\n            IconAuthenticateWithdrawals: React.lazy(() => import('./Cashier/icon-authenticate-withdrawals.jsx')),\n            IconEmailSent              : React.lazy(() => import('./Cashier/icon-email-sent.jsx')),\n\n            // Modal\n            ModalIconClose: React.lazy(() => import('./Modal/icon-close.jsx')),\n\n            // Footer\n            IconMaximize : React.lazy(() => import('./Footer/icon-maximize.jsx')),\n            IconPositions: React.lazy(() => import('./Footer/icon-positions.jsx')),\n            IconSettings : React.lazy(() => import('./Footer/icon-settings.jsx')),\n\n            // Header\n            IconAccountsCurrency: React.lazy(() => import('./Header/AccountsCurrency/icon_accounts_currency.jsx')),\n            IconLogout          : React.lazy(() => import('./Header/Drawer/icon-logout.jsx')),\n            IconBell            : React.lazy(() => import('./Header/NavBar/icon-bell.jsx')),\n            IconCashier         : React.lazy(() => import('./Header/NavBar/icon-cashier.jsx')),\n            IconDeriv           : React.lazy(() => import('./Header/NavBar/icon-deriv.jsx')),\n            IconHamburger       : React.lazy(() => import('./Header/NavBar/icon-hamburger.jsx')),\n            IconPortfolio       : React.lazy(() => import('./Header/NavBar/icon-portfolio.jsx')),\n            IconReports         : React.lazy(() => import('./Header/NavBar/icon-reports.jsx')),\n            IconTrade           : React.lazy(() => import('./Header/NavBar/icon-trade.jsx')),\n\n            // Reports\n            IconDemo                : React.lazy(() => import('./Reports/icon-demo.jsx')),\n            IconOpenPositions       : React.lazy(() => import('./Reports/icon-open-positions.jsx')),\n            IconProfitTable         : React.lazy(() => import('./Reports/icon-profit-table.jsx')),\n            IconStatement           : React.lazy(() => import('./Reports/icon-statement.jsx')),\n            IconCalendarForwardToday: React.lazy(() => import('./Reports/ic-calendar-forwardtoday.jsx')),\n\n            // Settings\n            IconCharts  : React.lazy(() => import('./Settings/icon-charts.jsx')),\n            IconLanguage: React.lazy(() => import('./Settings/icon-language.jsx')),\n            IconPurchase: React.lazy(() => import('./Settings/icon-purchase.jsx')),\n            IconTheme   : React.lazy(() => import('./Settings/icon-theme.jsx')),\n\n            // Statement\n            IconBuy   : React.lazy(() => import('./Statement/icon-buy.jsx')),\n            IconPayout: React.lazy(() => import('./Statement/icon-payout.jsx')),\n            IconSell  : React.lazy(() => import('./Statement/icon-sell.jsx')),\n            IconWallet: React.lazy(() => import('./Statement/icon-wallet.jsx')),\n\n            // Trading\n            IconBarrierDown   : React.lazy(() => import('./Trading/Barriers/icon-barrier-down.jsx')),\n            IconBarrierUp     : React.lazy(() => import('./Trading/Barriers/icon-barrier-up.jsx')),\n            IconTradeCategory : React.lazy(() => import('./Trading/Categories/icon-trade-categories.jsx')),\n            TradeCategoriesGIF: React.lazy(() => import('./Trading/Categories/trade-categories-gif.jsx')),\n            TradeCategories   : React.lazy(() => import('./Trading/Categories/trade-categories.jsx')),\n            IconTradeType     : React.lazy(() => import('./Trading/Types/icon-trade-types.jsx')),\n            IconLock          : React.lazy(() => import('./Trading/icon-lock.jsx')),\n            IconPriceMove     : React.lazy(() => import('./Trading/icon-price-move.jsx')),\n        };\n    }\n\n    render() {\n        const options = {\n            category     : this.props.category,\n            className    : this.props.className,\n            classNamePath: this.props.classNamePath,\n            classNameRect: this.props.classNameRect,\n            is_dark_theme: this.props.is_dark_theme,\n            is_disabled  : this.props.is_disabled,\n            onClick      : this.props.onClick,\n            onMouseEnter : this.props.onMouseEnter,\n            onMouseLeave : this.props.onMouseLeave,\n            type         : this.props.type,\n        };\n\n        const IconLazy = this.icons[this.props.icon];\n        if (!IconLazy) return <div />;\n\n        return (\n            <React.Suspense fallback={<div />}>\n                <IconLazy {...options} />\n            </React.Suspense>\n        );\n    }\n}\n\nIcon.propTypes = {\n    category     : PropTypes.string,\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n    classNameRect: PropTypes.string,\n    icon         : PropTypes.string,\n    is_dark_theme: PropTypes.bool,\n    is_disabled  : PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClick      : PropTypes.func,\n    type         : PropTypes.string,\n};\n\nexport default Icon;\n","import { localize } from 'App/i18n';\n\nexport const getMarketNamesMap = () => ({\n    FRXAUDCAD : localize('AUD/CAD'),\n    FRXAUDCHF : localize('AUD/CHF'),\n    FRXAUDJPY : localize('AUD/JPY'),\n    FRXAUDNZD : localize('AUD/NZD'),\n    FRXAUDPLN : localize('AUD/PLN'),\n    FRXAUDUSD : localize('AUD/USD'),\n    FRXBROUSD : localize('Oil/USD'),\n    FRXEURAUD : localize('EUR/AUD'),\n    FRXEURCAD : localize('EUR/CAD'),\n    FRXEURCHF : localize('EUR/CHF'),\n    FRXEURGBP : localize('EUR/GBP'),\n    FRXEURJPY : localize('EUR/JPY'),\n    FRXEURNZD : localize('EUR/NZD'),\n    FRXEURUSD : localize('EUR/USD'),\n    FRXGBPAUD : localize('GBP/AUD'),\n    FRXGBPCAD : localize('GBP/CAD'),\n    FRXGBPCHF : localize('GBP/CHF'),\n    FRXGBPJPY : localize('GBP/JPY'),\n    FRXGBPNOK : localize('GBP/NOK'),\n    FRXGBPUSD : localize('GBP/USD'),\n    FRXNZDJPY : localize('NZD/JPY'),\n    FRXNZDUSD : localize('NZD/USD'),\n    FRXUSDCAD : localize('USD/CAD'),\n    FRXUSDCHF : localize('USD/CHF'),\n    FRXUSDJPY : localize('USD/JPY'),\n    FRXUSDNOK : localize('USD/NOK'),\n    FRXUSDPLN : localize('USD/PLN'),\n    FRXUSDSEK : localize('USD/SEK'),\n    FRXXAGUSD : localize('Silver/USD'),\n    FRXXAUUSD : localize('Gold/USD'),\n    FRXXPDUSD : localize('Palladium/USD'),\n    FRXXPTUSD : localize('Platinum/USD'),\n    OTC_AEX   : localize('Dutch Index'),\n    OTC_AS51  : localize('Australian Index'),\n    OTC_DJI   : localize('Wall Street Index'),\n    OTC_FCHI  : localize('French Index'),\n    OTC_FTSE  : localize('UK Index'),\n    OTC_GDAXI : localize('German Index'),\n    OTC_HSI   : localize('Hong Kong Index'),\n    OTC_IBEX35: localize('Spanish Index'),\n    OTC_N225  : localize('Japanese Index'),\n    OTC_NDX   : localize('US Tech Index'),\n    OTC_SPC   : localize('US Index'),\n    OTC_SSMI  : localize('Swiss Index'),\n    OTC_SX5E  : localize('Euro 50 Index'),\n    R_10      : localize('Volatility 10 Index'),\n    R_25      : localize('Volatility 25 Index'),\n    R_50      : localize('Volatility 50 Index'),\n    R_75      : localize('Volatility 75 Index'),\n    R_100     : localize('Volatility 100 Index'),\n    RDBEAR    : localize('Bear Market Index'),\n    RDBULL    : localize('Bull Market Index'),\n    WLDAUD    : localize('AUD Index'),\n    WLDEUR    : localize('EUR Index'),\n    WLDGBP    : localize('GBP Index'),\n    WLDUSD    : localize('USD Index'),\n});\n\nexport const getUnsupportedContracts = () => ({\n    EXPIRYMISS: {\n        name    : localize('Ends Outside'),\n        position: 'top',\n    },\n    EXPIRYRANGE: {\n        name    : localize('Ends Between'),\n        position: 'bottom',\n    },\n    RANGE: {\n        name    : localize('Stays Between'),\n        position: 'top',\n    },\n    UPORDOWN: {\n        name    : localize('Goes Outside'),\n        position: 'bottom',\n    },\n    RESETCALL: {\n        name    : localize('Reset Call'),\n        position: 'top',\n    },\n    RESETPUT: {\n        name    : localize('Reset Put'),\n        position: 'bottom',\n    },\n    TICKHIGH: {\n        name    : localize('High Tick'),\n        position: 'top',\n    },\n    TICKLOW: {\n        name    : localize('Low Tick'),\n        position: 'bottom',\n    },\n    ASIANU: {\n        name    : localize('Asian Up'),\n        position: 'top',\n    },\n    ASIAND: {\n        name    : localize('Asian Down'),\n        position: 'bottom',\n    },\n    LBFLOATCALL: {\n        name    : localize('Close-Low'),\n        position: 'top',\n    },\n    LBFLOATPUT: {\n        name    : localize('High-Close'),\n        position: 'top',\n    },\n    LBHIGHLOW: {\n        name    : localize('High-Low'),\n        position: 'top',\n    },\n    CALLSPREAD: {\n        name    : localize('Call Spread'),\n        position: 'top',\n    },\n    PUTSPREAD: {\n        name    : localize('Put Spread'),\n        position: 'bottom',\n    },\n    RUNHIGH: {\n        name    : localize('Only Ups'),\n        position: 'top',\n    },\n    RUNLOW: {\n        name    : localize('Only Downs'),\n        position: 'bottom',\n    },\n});\n\nexport const getSupportedContracts = is_high_low => ({\n    CALL: {\n        name    : is_high_low ?  localize('Higher') : localize('Rise'),\n        position: 'top',\n    },\n    PUT: {\n        name    : is_high_low ? localize('Lower') : localize('Fall'),\n        position: 'bottom',\n    },\n    CALLE: {\n        name    : localize('Rise'),\n        position: 'top',\n    },\n    PUTE: {\n        name    : localize('Fall'),\n        position: 'bottom',\n    },\n    DIGITMATCH: {\n        name    : localize('Matches'),\n        position: 'top',\n    },\n    DIGITDIFF: {\n        name    : localize('Differs'),\n        position: 'bottom',\n    },\n    DIGITEVEN: {\n        name    : localize('Even'),\n        position: 'top',\n    },\n    DIGITODD: {\n        name    : localize('Odd'),\n        position: 'bottom',\n    },\n    DIGITOVER: {\n        name    : localize('Over'),\n        position: 'top',\n    },\n    DIGITUNDER: {\n        name    : localize('Under'),\n        position: 'bottom',\n    },\n    ONETOUCH: {\n        name    : localize('Touch'),\n        position: 'top',\n    },\n    NOTOUCH: {\n        name    : localize('No Touch'),\n        position: 'bottom',\n    },\n});\n\nexport const getContractConfig = is_high_low => ({\n    ...getSupportedContracts(is_high_low),\n    ...getUnsupportedContracts(),\n});\n\nexport const getContractTypeDisplay  = (\n    type,\n    is_high_low = false) => (\n    getContractConfig(is_high_low)[type] ? getContractConfig(is_high_low)[type.toUpperCase()].name : ''\n);\n\nexport const getContractTypePosition = (\n    type,\n    is_high_low = false) => (\n    getContractConfig(is_high_low)[type] ? getContractConfig(is_high_low)[type.toUpperCase()].position : 'top'\n);\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    className,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {has_sign && sign}\n            <span className={classNames(className, 'symbols', `symbols--${currency.toLowerCase()}`)} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className   : PropTypes.string,\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","import { localize } from 'App/i18n';\n\nexport const month_headers = {\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n};\n\nexport const week_headers = {\n    Monday   : localize('Monday'),\n    Tuesday  : localize('Tuesday'),\n    Wednesday: localize('Wednesday'),\n    Thursday : localize('Thursday'),\n    Friday   : localize('Friday'),\n    Saturday : localize('Saturday'),\n    Sunday   : localize('Sunday'),\n};\n\nexport const week_headers_abbr = {\n    Monday   : localize('M'),\n    Tuesday  : localize('T'),\n    Wednesday: localize('W'),\n    Thursday : localize('T'),\n    Friday   : localize('F'),\n    Saturday : localize('S'),\n    Sunday   : localize('S'),\n};\n\nexport const getDaysOfTheWeek = (day) => {\n    const days_of_the_week = {\n        'Mondays'   : 1,\n        'Tuesdays'  : 2,\n        'Wednesdays': 3,\n        'Thursdays' : 4,\n        'Fridays'   : 5,\n        'Saturdays' : 6,\n        'Sundays'   : 0,\n    };\n\n    return days_of_the_week[day];\n};\n","const extend = require('extend');\nrequire('./lib/polyfills/element.matches');\n\nconst template = (string, content) => {\n    let to_replace = content;\n    if (content && !Array.isArray(content)) {\n        to_replace = [content];\n    }\n    return string.replace(/\\[_(\\d+)]/g, (s, index) => to_replace[(+index) - 1]);\n};\n\nconst isEmptyObject = (obj) => {\n    let is_empty = true;\n    if (obj && obj instanceof Object) {\n        Object.keys(obj).forEach((key) => {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) is_empty = false;\n        });\n    }\n    return is_empty;\n};\n\nconst cloneObject = obj => (!isEmptyObject(obj) ? extend(true, Array.isArray(obj) ? [] : {}, obj) : obj);\n\nconst isDeepEqual = (a, b) => {\n    if (typeof a !== typeof b) {\n        return false;\n    } else if (Array.isArray(a)) {\n        return isEqualArray(a, b);\n    } else if (a && b && typeof a === 'object') {\n        return isEqualObject(a, b);\n    }\n    // else\n    return a === b;\n};\n\nconst isEqualArray = (arr1, arr2) => (\n    arr1 === arr2 ||\n    (\n        arr1.length === arr2.length &&\n        arr1.every((value, idx) => isDeepEqual(value, arr2[idx]))\n    )\n);\n\nconst isEqualObject = (obj1, obj2) => (\n    obj1 === obj2 ||\n    (\n        Object.keys(obj1).length === Object.keys(obj2).length &&\n        Object.keys(obj1).every(key => isDeepEqual(obj1[key], obj2[key]))\n    )\n);\n\n// Filters out duplicates in an array of objects by key\nconst unique = (array, key) => array.filter((e, idx) =>\n    array.findIndex((a, i) => a[key] ? a[key] === e[key] : i === idx) === idx);\n\nconst getPropertyValue = (obj, k) => {\n    let keys = k;\n    if (!Array.isArray(keys)) keys = [keys];\n    if (!isEmptyObject(obj) && keys[0] in obj && keys && keys.length > 1) {\n        return getPropertyValue(obj[keys[0]], keys.slice(1));\n    }\n    // else return clone of object to avoid overwriting data\n    return obj ? cloneObject(obj[keys[0]]) : undefined;\n};\n\n/**\n * Creates a DOM element and adds any attributes to it.\n *\n * @param {String} tag_name: the tag to create, e.g. 'div', 'a', etc\n * @param {Object} attributes: all the attributes to assign, e.g. { id: '...', class: '...', html: '...', ... }\n * @return the created DOM element\n */\nconst createElement = (tag_name, attributes = {}) => {\n    const el = document.createElement(tag_name);\n    Object.keys(attributes).forEach((attr) => {\n        const value = attributes[attr];\n        if (attr === 'text') {\n            el.textContent = value;\n        } else if (attr === 'html') {\n            el.html(value);\n        } else {\n            el.setAttribute(attr, value);\n        }\n    });\n    return el;\n};\n\nlet static_hash;\nconst getStaticHash = () => {\n    static_hash = static_hash || (document.querySelector('script[src*=\"main\"]').getAttribute('src') || '').split('.')[1];\n    return static_hash;\n};\n\nclass PromiseClass {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.reject  = reject;\n            this.resolve = resolve;\n        });\n    }\n}\n\nmodule.exports = {\n    template,\n    isEmptyObject,\n    cloneObject,\n    isDeepEqual,\n    unique,\n    getPropertyValue,\n    createElement,\n    getStaticHash,\n    PromiseClass,\n};\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className, classNameBlock }) => {\n    const block_class   = classNames(classNameBlock, 'block-ui');\n    const loading_class = classNames('block-ui__loading', className);\n    return (\n        <div className={block_class}>\n            <div className={loading_class}>\n                <div className='block-ui__loading-spinner'>\n                    <svg className='block-ui__loading-spinner-circular' viewBox='25 25 50 50'>\n                        <circle className='block-ui__loading-spinner-path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className     : PropTypes.string,\n    classNameBlock: PropTypes.string,\n};\n\nexport default UILoader;\n","import { toMoment } from 'Utils/Date';\n\nexport const getDecade = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(9, 'years').year()}`;\n\nexport const getCentury = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(99, 'years').year()}`;\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket-general';\nexport WS                  from './ws-methods';\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        let match_path;\n        try {\n            match_path = matchPath(path, route_info);\n        } catch (e) {\n            if (/undefined/.test(e.message)) {\n                return undefined;\n            }\n        }\n\n        if (match_path) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n"],"sourceRoot":""}