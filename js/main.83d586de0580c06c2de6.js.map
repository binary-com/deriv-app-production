{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./_common/base/socket_base.js","webpack:///./_common/base/socket_cache.js","webpack:///./Modules/Reports/Helpers/market-underlying.js","webpack:///./Services/logout.js","webpack:///./_common/common_functions.js","webpack:///./_common/string_util.js","webpack:///./Stores/Modules/Trading/Constants/contract.js","webpack:///./Stores/connect.js","webpack:///./Stores/Modules/Portfolio/Helpers/details.js","webpack:///./Constants/ui.js","webpack:///./_common/base/currency_base.js","webpack:///./App/Components/Routes/button-link.jsx","webpack:///./App/Components/Elements/VerticalTabs/vertical-tab-content-container.jsx","webpack:///./App/Components/Elements/VerticalTabs/vertical-tab-headers.jsx","webpack:///./Modules/Trading/Components/Elements/full-screen-dialog.jsx","webpack:///./Services/socket-general.js","webpack:///./App/Containers/Redirect/redirect.jsx","webpack:///./Modules/Reports/Components/empty-portfolio-message.jsx","webpack:///./Modules/Contract/Containers/contract-link.jsx","webpack:///./Assets/SvgComponents/portfolio/ic-check.svg","webpack:///./Assets/SvgComponents/portfolio/ic-cross.svg","webpack:///./App/Components/Elements/PositionsDrawer/result-overlay.jsx","webpack:///./App/Components/Elements/PositionsDrawer/positions-drawer-card.jsx","webpack:///./App/Components/Elements/PositionsDrawer/positions-drawer.jsx","webpack:///./App/Components/Elements/market-is-closed-overlay.jsx","webpack:///./Modules/Trading/Containers/test.jsx","webpack:///./Modules/Trading/Components/Form/screen-large.jsx","webpack:///./Modules/Trading/Components/Form/form-layout.jsx","webpack:///./Modules/Trading/Containers/trade.jsx","webpack:///./App/Constants/routes-config.js","webpack:///./App/Components/Routes/binary-link.jsx","webpack:///./App/Components/Elements/login-prompt.jsx","webpack:///./App/Components/Routes/route-with-sub-routes.jsx","webpack:///./App/Components/Routes/binary-routes.jsx","webpack:///./Modules/PageError/PageError.jsx","webpack:///./Modules/Trading/Helpers/digits.js","webpack:///./Modules/Reports/Helpers/shortcode.js","webpack:///./App/Constants/app-config.js","webpack:///./App/Components/Elements/tooltip.jsx","webpack:///./App/Components/Form/InputField/increment-buttons.jsx","webpack:///./App/Components/Form/InputField/input.jsx","webpack:///./App/Components/Form/InputField/input-field.jsx","webpack:///./App/Components/Elements/VerticalTabs/vertical-tab.jsx","webpack:///./App/Components/Elements/underlying-icon.jsx","webpack:///./App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-ticks.jsx","webpack:///./App/Containers/remaining-time.jsx","webpack:///./App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-slider.jsx","webpack:///./App/Components/Elements/localize.jsx","webpack:///./Stores/Modules/Contract/Helpers/logic.js","webpack:///./_common/storage.js","webpack:///./Stores/Modules/Trading/Helpers/barrier.js","webpack:///./Stores/Modules/Trading/Helpers/contract-type.js","webpack:///./App/Components/Elements/chart-loader.jsx","webpack:///./templates/_common/components/loading.jsx","webpack:///./App/Components/Elements/PositionsDrawer/contract-type-cell.jsx","webpack:///./App/Components/Elements/Calendar/calendar-footer.jsx","webpack:///./App/Components/Form/ButtonToggleMenu/button-highlight.jsx","webpack:///./App/Components/Form/ButtonToggleMenu/button-highlight-wrapper.jsx","webpack:///./App/Components/Form/ButtonToggleMenu/button-toggle-menu.jsx","webpack:///./App/Components/Form/DropDown/items.jsx","webpack:///./App/Components/Form/DropDown/native-select.jsx","webpack:///./App/Components/Form/DropDown/helpers.js","webpack:///./App/Components/Form/DropDown/dropdown.jsx","webpack:///./Stores/Modules/Trading/Helpers/allow-equals.js","webpack:///./Modules/Trading/Components/Form/TradeParams/allow-equals.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./App/Components/Form/RangeSlider/tick-steps.jsx","webpack:///./App/Components/Form/RangeSlider/range-slider.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/duration-toggle.jsx","webpack:///./App/Components/Form/DatePicker/helpers.js","webpack:///./App/Components/Elements/Calendar/calendar.jsx","webpack:///./App/Components/Form/DatePicker/date-picker.jsx","webpack:///./Modules/Trading/Components/Form/DatePicker/trading-date-picker.jsx","webpack:///./App/Components/Form/TimePicker/dialog.jsx","webpack:///./App/Components/Form/TimePicker/time-picker.jsx","webpack:///./Stores/Modules/Trading/Helpers/end-time.js","webpack:///./Modules/Trading/Components/Form/TimePicker/trading-time-picker.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/advanced-duration.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/simple-duration.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/duration.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/duration-wrapper.jsx","webpack:///./App/Components/Form/number-selector.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/last-digit.jsx","webpack:///./Modules/Trading/Containers/trade-params.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-dialog.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-item.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-list.jsx","webpack:///./Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-dialog.jsx","webpack:///./Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-item.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-widget.jsx","webpack:///./Modules/Trading/Containers/contract-type.jsx","webpack:///./App/Components/Elements/Calendar/panels/types.js","webpack:///./App/Components/Elements/Calendar/panels/calendar-days.jsx","webpack:///./App/Components/Elements/Calendar/panels/calendar-months.jsx","webpack:///./App/Components/Elements/Calendar/panels/calendar-years.jsx","webpack:///./App/Components/Elements/Calendar/panels/calendar-decades.jsx","webpack:///./App/Components/Elements/Calendar/calendar-body.jsx","webpack:///./App/Components/Elements/NotificationMessage/close-button.jsx","webpack:///./App/Components/Elements/NotificationMessage/constants.js","webpack:///./App/Components/Elements/NotificationMessage/notification.jsx","webpack:///./Modules/Trading/Components/Form/Purchase/contract-info.jsx","webpack:///./Modules/Trading/Components/Elements/purchase-button.jsx","webpack:///./Modules/Trading/Components/Elements/purchase-fieldset.jsx","webpack:///./Modules/Trading/Containers/purchase.jsx","webpack:///./App/Components/Elements/Calendar/calendar-button.jsx","webpack:///./App/Components/Elements/Calendar/calendar-header.jsx","webpack:///./Utils/Language/language.js","webpack:///./Utils/Language/index.js","webpack:///./App/Components/Elements/Errors/error-component.jsx","webpack:///./App/Components/Elements/PositionsDrawer/helpers/positions-helper.js","webpack:///./App/Components/Elements/PositionsDrawer/helpers/index.js","webpack:///./App/Components/Elements/ContentLoader/positions-card.jsx","webpack:///./App/Components/Elements/ContentLoader/index.js","webpack:///./_common/base/network_monitor_base.js","webpack:////Users/negar/git/deriv-app-production/packages/components/lib/button.js","webpack:///./Constants/index.js","webpack:///./App/i18n.js","webpack:///./_common/base/client_base.js","webpack:///./_common/url.js","webpack:///./Constants/routes.js","webpack:///./App/Containers/Lazy/lazy.jsx","webpack:///./_common/base/server_time.js","webpack:///./Utils/Date/date-time.js","webpack:///./Utils/Date/index.js","webpack:///./Stores/Modules/Trading/Helpers/duration.js","webpack:///./_common/language.js","webpack:///./_common/lib/polyfills/nodelist.foreach.js","webpack:///./_common/lib/polyfills/element.closest.js","webpack:///./_common/lib/plugins.js","webpack:///./_common/base/subscription_manager.js","webpack:///./Services/trackjs.js","webpack:///./Services/ws-methods.js","webpack:///./_common/lib/polyfills/element.matches.js","webpack:///./_common/os_detect.js","webpack:///./App/Components/Elements/Errors/error-boundary.jsx","webpack:///./templates/app/components/loading.jsx","webpack:///./App/Containers/Layout/app-contents.jsx","webpack:///./App/Containers/server-time.jsx","webpack:///./App/Components/Layout/Footer/network-status.jsx","webpack:///./App/Components/Layout/Footer/toggle-fullscreen.jsx","webpack:///./App/Components/Layout/Footer/toggle-positions.jsx","webpack:///./App/Components/Elements/modal.jsx","webpack:///./App/Components/Layout/Footer/toggle-settings.jsx","webpack:///./App/Containers/Layout/footer.jsx","webpack:///./App/Components/Layout/Header/menu-links.jsx","webpack:///./App/Components/Layout/Header/login-button.jsx","webpack:///./App/Components/Layout/Header/signup-button.jsx","webpack:///./App/Components/Layout/Header/upgrade-button.jsx","webpack:///./App/Components/Layout/Header/account-actions.jsx","webpack:///./App/Constants/header-links.js","webpack:///./App/Containers/Layout/header.jsx","webpack:///./App/Containers/Routes/routes.jsx","webpack:///./Services/network-monitor.js","webpack:///./Services/outdated-browser.js","webpack:///./Stores/Helpers/client-notifications.js","webpack:///./Utils/Validator/declarative-validation-rules.js","webpack:///./Utils/Validator/errors.js","webpack:///./Utils/Validator/validator.js","webpack:///./Stores/base-store.js","webpack:///./Stores/Modules/Trading/Helpers/currency.js","webpack:///./Stores/client-store.js","webpack:///./Stores/Helpers/client.js","webpack:///./Stores/common-store.js","webpack:///./Stores/gtm-store.js","webpack:///./Stores/Modules/Cashier/cashier-store.js","webpack:///./Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./Stores/Modules/Contract/Helpers/chart-barriers.js","webpack:///./Modules/SmartChart/Components/Markers/marker-line.jsx","webpack:///./Modules/SmartChart/Components/Markers/marker-spot.jsx","webpack:///./Modules/SmartChart/Components/Markers/marker-spot-label.jsx","webpack:///./Stores/Modules/SmartChart/Constants/markers.js","webpack:///./Stores/Modules/Contract/Helpers/chart-marker-helpers.js","webpack:///./Stores/Modules/Contract/Helpers/chart-markers.js","webpack:///./Stores/Modules/Portfolio/Helpers/portfolio-notifcations.js","webpack:///./Stores/Modules/Contract/contract-replay-store.js","webpack:///./Stores/Modules/Contract/contract-trade-store.js","webpack:///./Stores/Modules/Trading/Helpers/active-symbols.js","webpack:///./Stores/Modules/Portfolio/Helpers/format-response.js","webpack:///./Stores/Modules/Portfolio/portfolio-store.js","webpack:///./Stores/Modules/Profit/Helpers/format-request.js","webpack:///./Stores/Modules/Profit/Helpers/format-response.js","webpack:///./Stores/Modules/Profit/profit-store.js","webpack:///./Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./Stores/Modules/SmartChart/chart-barrier-store.js","webpack:///./Stores/Modules/SmartChart/chart-marker-store.js","webpack:///./Stores/Modules/SmartChart/smart-chart-store.js","webpack:///./Stores/Modules/Statement/statement-store.js","webpack:///./Stores/Modules/Statement/Helpers/format-response.js","webpack:///./Stores/Modules/Trading/Actions/purchase.js","webpack:///./Stores/Modules/Trading/Actions/symbol.js","webpack:///./Stores/Modules/Trading/Constants/validation-rules.js","webpack:///./Stores/Modules/Trading/Actions/contract-type.js","webpack:///./Stores/Modules/Trading/Actions/duration.js","webpack:///./Stores/Modules/Trading/Actions/start-date.js","webpack:///./Stores/Modules/Trading/Helpers/process.js","webpack:///./Stores/Modules/Trading/Helpers/proposal.js","webpack:///./Stores/Modules/Trading/trade-store.js","webpack:///./Stores/Modules/Trading/Helpers/chart.js","webpack:///./Stores/Modules/index.js","webpack:///./Stores/ui-store.js","webpack:///./Stores/index.js","webpack:///./App/app.js","webpack:///./Utils/Events/storage.js","webpack:///./App/app.jsx","webpack:///./Utils/pwa/register-service-worker.js","webpack:///./App/Components/Elements/Popover/popover-bubble.jsx","webpack:///./App/Components/Elements/Popover/popover.jsx","webpack:///./App/Components/Form/fieldset.jsx","webpack:///./Stores/Modules/Trading/Helpers/start-date.js","webpack:///./_common/base/login.js","webpack:///./Stores/Modules/Contract/Helpers/digits.js","webpack:///./Assets/icon.jsx","webpack:///./config.js","webpack:///./Constants/contract.js","webpack:///./App/Components/Elements/money.jsx","webpack:///./Constants/date-time.js","webpack:///./_common/utility.js","webpack:///./App/Components/Elements/ui-loader.jsx","webpack:///./App/Components/Elements/Calendar/helper.js","webpack:///./Services/index.js","webpack:///./App/Components/Routes/helpers.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","prefetchChunks","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","deferredPrefetch","apply","shift","deferredModules","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","forEach","undefined","link","document","createElement","nc","setAttribute","rel","as","href","jsonpScriptSrc","head","appendChild","installedModules","installedCssChunks","main","p","404","account-info","contract","digits","info-box","modals","notification-messages","push-notification","reports","screen-small","settings-chart","settings-language","settings-theme","toggle-menu-drawer","vendors~open_position~7c650be5","default~open_position~1833eefb","open_positions","profit_table","statement","vendors~smart_chart","smart_chart","work-in-progress","two-month-picker","exports","module","l","e","promises","Promise","resolve","reject","fullhref","existingLinkTags","getElementsByTagName","dataHref","tag","getAttribute","existingStyleTags","linkTag","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","error","clearTimeout","chunk","errorType","realSrc","message","name","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","startupResult","binary_socket","config","buffered_sends","req_id","wrong_app_id","is_available","is_disconnect_called","is_connected_before","socket_url","timeouts","no_duplicate_requests","sent_requests","waiting_list","clearTimeouts","isReady","hasReadyState","sendBufferedRequests","wait","send","ClientBase","require","SocketCache","getLanguage","State","cloneObject","getPropertyValue","isEmptyObject","PromiseClass","getAppId","getSocketURL","BinarySocketBase","concat","items","clear","has","msg_type","indexOf","add","remove","promise_obj","response","this_promises","pr","another_exists","keys","some","req_obj","options","arguments","has_callback","callback","find","forced","set","skip_cache_update","JSON","stringify","time","assign","last_response","subscribe","isOnline","passthrough","wsEvent","init","_typeof","WebSocket","onopen","isLoggedIn","authorize","onOpen","onReconnect","onmessage","msg","parse","test","this_req_id","onMessage","onclose","onDisconnect","_len2","msg_types","Array","_key2","is_resolved","availability","status","_len","states","_key","readyState","sendBuffered","setOnDisconnect","setOnReconnect","removeOnReconnect","removeOnDisconnect","data_obj","msg_type_mapping","isEmptyValue","makeKey","moment","LocalStore","getStaticHash","payout_currencies","expire","proposal_open_contract","map_to","active_symbols","contracts_for","exchange_rates","ticks_history","trading_times","history","candles","is_empty_data","isArray","response_data","getObject","static_hash","response_obj","isBefore","expires","source_obj","map_key","ws_cache","localStorage","getItem","curr_lang","cookie","replace","active_symbols_obj","symbol","filter","x","symbol_info","exchange_is_open","isMarketClosed","echo_req","subscription","end","cached_response","cached_message","new_message","has_error_or_missing","has_new_value","has_old_cache","has_valid_cache","valueOf","setObject","should_match_all","data_key","__webpack_exports__","getMarketInformation","getMarketName","getTradeTypeName","Constants__WEBPACK_IMPORTED_MODULE_0__","shortcode","market_info","category","underlying","extracted","RegExp","exec","toLowerCase","getMarketNamesMap","toUpperCase","getContractConfig","requestLogout","_common_base_client_base__WEBPACK_IMPORTED_MODULE_0__","_common_base_client_base__WEBPACK_IMPORTED_MODULE_0___default","_common_base_socket_cache__WEBPACK_IMPORTED_MODULE_1__","_common_base_socket_cache__WEBPACK_IMPORTED_MODULE_1___default","_common_storage__WEBPACK_IMPORTED_MODULE_2__","_ws_methods__WEBPACK_IMPORTED_MODULE_3__","WS","logout","doLogout","removeCookies","Client","clearAllAccounts","isVisible","elem","offsetWidth","offsetHeight","getElementById","id_selector","parent","padLeft","txt","len","char","text","String","join","numberToString","toTitleCase","str","charAt","substr","compareBigUnsignedInt","a","b","first_num","second_num","max_length","Math","max","order","getLocalizedBasis","payout","localize","stake","multiplier","getContractTypesConfig","rise_fall","title","trade_types","basis","components","barrier_count","rise_fall_equal","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","getContractCategoriesConfig","_ref","_defineProperty","SPECIAL_REACT_KEYS","children","ref","MobxProvider","_Provider","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","_inherits","Provider","_createClass","stores","baseStores","context","mobxStores","props","store","_objectSpread","childContextTypes","PropTypes","client","common","gtm","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_getPrototypeOf2","_this","args","propTypes","React","wrappedDisplayName","displayName","constructor","getCurrentTick","getDurationUnitText","getDurationPeriod","getDurationTime","App_i18n__WEBPACK_IMPORTED_MODULE_0__","_common_utility__WEBPACK_IMPORTED_MODULE_1__","Utils_Date__WEBPACK_IMPORTED_MODULE_2__","_Contract_Helpers_digits__WEBPACK_IMPORTED_MODULE_3__","contract_info","tick_stream","unique","current_tick","isDigitContract","contract_type","isEndTime","duration","obj_duration","unit_map","name_plural","name_singular","h","duration_ms","asMilliseconds","getDiffDuration","epochToMoment","purchase_time","date_start","date_expiry","tick_count","floor","is_end_time","string_format","formatMiliseconds","getDurationUnitValue","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","crypto_config","currencies_config","formatCurrency","currency","addComma","num","decimal_points","is_crypto","number","toFixed","parseFloat","toString","$0","$1","$2","getDecimalPlaces","isCryptocurrency","calcDecimalPlaces","CryptoConfig","BTC","min_withdrawal","pa_max_withdrawal","pa_min_withdrawal","BCH","ETH","ETC","LTC","UST","USB","getMinWithdrawal","formatMoney","currency_value","amount","exclude_currency","decimals","minimumFractionDigits","money","sign","Number","decimal_places","isNaN","abs","Intl","maximumFractionDigits","NumberFormat","format","setCurrencies","website_status","getCurrencyName","getTransferLimits","which","transfer_limits","min","getTransferFee","currency_from","currency_to","transfer_fee","getMinimumTransferFee","pow","getTextFormat","getMinPayout","getPaWithdrawalLimit","limit","getCurrencies","classnames__WEBPACK_IMPORTED_MODULE_0__","classnames__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","ButtonLink","className","to","onClick","classNames","string","func","VerticalTabContentContainer","PureComponent","_this$props","action_bar","action_bar_classname","is_routed","selected","selected_item","item","label","TabContent","react__WEBPACK_IMPORTED_MODULE_1___default","map","component","icon","Assets_icon_jsx__WEBPACK_IMPORTED_MODULE_3__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","exact","from","routes","positions","_ref2","path","render","component_icon","VerticalTabHeaders","header_title","onChange","activeClassName","vertical-tab__header--active","vertical-tab__header__icon--active","FullScreenDialog","visible","wrapperClassName","body","classList","fullscreen-dialog--open","tagName","scrollToTarget","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","any","bool","client_store","common_store","gtm_store","setResidence","setBalance","handleError","authorizeAccount","mobx__WEBPACK_IMPORTED_MODULE_0__","_common_base_login__WEBPACK_IMPORTED_MODULE_1__","_common_base_login__WEBPACK_IMPORTED_MODULE_1___default","_common_base_server_time__WEBPACK_IMPORTED_MODULE_2__","_common_base_server_time__WEBPACK_IMPORTED_MODULE_2___default","_common_base_socket_base__WEBPACK_IMPORTED_MODULE_3__","_common_base_socket_base__WEBPACK_IMPORTED_MODULE_3___default","_common_storage__WEBPACK_IMPORTED_MODULE_4__","_common_utility__WEBPACK_IMPORTED_MODULE_5__","App_i18n__WEBPACK_IMPORTED_MODULE_6__","_logout__WEBPACK_IMPORTED_MODULE_7__","_ws_methods__WEBPACK_IMPORTED_MODULE_8__","BinarySocketGeneral","setIsSocketOpened","is_ready","Login","isLoginPages","is_valid_login","subscribeWebsiteStatus","ResponseHandlers","websiteStatus","ServerTime","action","server_time","is_active_tab","sessionStorage","removeItem","loginid","is_populating_account_list","get_settings","country_code","setEmail","email","eventHandler","responsePayoutCurrencies","pushTransactionData","residence","landingCompany","flow","regeneratorRuntime","mark","_callee","balance","wrap","_context","prev","next","BinarySocket","stop","setError","responseAuthorize","subscribeBalance","sendRequest","getAccountStatus","payoutCurrencies","mt5LoginList","country","accounts","is_virtual","getSelfExclusion","accepted_bch","site_status","location","reload","setWebsiteStatus","Redirect","setCashierActiveTab","setVerificationCode","toggleAccountSignupModal","toggleCashierModal","url_params","URLSearchParams","search","replaceState","root","withRouter","EmptyPortfolioMessage","react_default","Fragment","ContractLink","contract_id","openContract","node","onMount","contract_trade","ic_check","styles","_objectWithoutProperties","_extends","xmlns","width","height","fill","fillRule","cx","cy","ic_cross","ic_cross_objectWithoutProperties","ic_cross_extends","stroke","strokeLinecap","ResultOverlay","handleClick","is_unsupported","preventDefault","is_visible","onClickRemove","is_contract_won","react_transition_group","in","enter","enterDone","exit","unmountOnExit","positions-drawer-card__result--won","positions-drawer-card__result--lost","react_router_dom","getContractPath","result__caption--won","result__caption--lost","oneOfType","has_same_contract_mounted","PositionsDrawerCard","active_position","indicative","id","is_dark_theme","is_loading","is_sell_requested","is_valid_to_sell","profit_loss","onClickSell","sell_price","toggleUnsupportedContractModal","loader_el","ContentLoader","speed","fallback_result","contract_el","underlying_icon","market","display_name","contract_type_cell","is_high_low","Shortcode","isHighLow","is_sold","ProgressSlider","start_time","expiry_time","ticks_count","positions-drawer-card__profit-loss--is-crypto","positions-drawer-card__profit-loss--negative","positions-drawer-card__profit-loss--positive","positions-drawer-card__indicative--movement-complete","buy_price","positions-drawer-card__wrapper--active","parseInt","result_overlay","positions-drawer-card--active","positions-drawer-card--green","positions-drawer-card--red","contract_link","button_default","btn--loading","is_disabled","duration_unit","exit_spot","sell_time","PositionsDrawer","onUnmount","all_positions","active_contract_id","is_contract_mode","is_empty","is_positions_drawer_on","toggleDrawer","body_content","portfolio_position","appear","positions_drawer_card","positions_drawer_extends","positions-drawer--open","positions-drawer--contract-mode","lib","style","autoHide","empty_portfolio_message","MobxPropTypes","arrayOrObservableArray","portfolio","removePositionById","is_dark_mode_on","togglePositionsDrawer","startAnimation","children_background_color","getComputedStyle","firstElementChild","converted_rgba","startsWith","split","querySelectorAll","element","backgroundColor","requestAnimationFrame","toggleFade","opacity","direction","color","sub_or_add","reduction","new_opacity","stopId","cancelAnimationFrame","querySelector","contains","click","MarketIsClosedOverlay","i18n_default_text","classNameSpan","Test","state","setVisibility","stateVisibility","test_assertThisInitialized","container","fontSize","lineHeight","position","zIndex","background","padding","marginTop","display","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","keyCode","setState","_this2","entries","sort","_slicedToArray","k","v","test_typeof","toJS","array","_ref3","trade","ScreenLarge","is_contract_visible","is_market_closed","is_trade_enabled","sidebar__items--is-disabled","sidebar__items--market-closed","fieldset","trade_params","purchase","ui_loader","FormLayout","is_mobile","Lazy","ctor","should_load","screen_large","SmartChart","lazy","Trade","showPositions","hidePositions","onCloseContract","form_wrapper_class","should_show_bottom_widgets","is_digit_contract","should_show_last_digit_stats","isDigitTradeType","is_chart_visible","is_chart_loading","is_chart_ready","positions_drawer","has_progress","Suspense","fallback","chart_loader","chart_id","chart_type","Digits","is_trade_page","digits_info","display_status","is_ended","InfoBox","error_message","removeError","end_epoch","granularity","is_static_chart","onSymbolChange","scroll_to_epoch","start_epoch","cursor","market_is_closed_overlay","form_layout","purchase_info","routesConfig","removeErrorMessage","scroll_to_left_epoch","hidePositionsFooterToggle","showPositionsFooterToggle","has_only_forward_starting_contracts","setHasOnlyForwardingContracts","ContractDetails","Reports","OpenPositions","ProfitTable","Statement","Page404","route_default","getRoutesConfig","is_authenticated","index","RouterRedirect","icon_component","default","profit","error404","redirect","BinaryLink","active_class","binary_link_objectWithoutProperties","normalizePath","route","findRouteByPath","binary_link_extends","LoginPrompt","onLogin","onSignup","page_title","PageError","header","values","messages","defaultProps","open","urlFor","pushDataLayer","react_router","pathname","is_logged_in","login_prompt","redirectToLogin","route_with_sub_routes_extends","Language","setCookie","default_title","BinaryRoutes","idx","route_with_sub_routes","binary_routes_extends","buttonOnClick","error_code","redirect_label","redirect_url","has_html","dangerouslySetInnerHTML","__html","button_link","digitTypesMap","includes","extractInfoFromShortcode","info_from_shortcode","barrier_1","_ref$shortcode","_ref$shortcode_info","shortcode_info","website_name","Tooltip","show_tooltip_balloon_icon","onMouseEnter","onMouseLeave","alignment","classNameIcon","has_error","icon_class","tooltip--error","data-tooltip","data-tooltip-pos","Assets_icon","tooltip__balloon-icon--show","IncrementButtons","decrementValue","incrementValue","max_is_disabled","min_is_disabled","tabIndex","Input","changeValue","checked","classNameInlinePrefix","data_value","data_tip","display_value","fractional_digits","inline_prefix","is_autocomplete_disabled","is_hj_whitelisted","is_incrementable","is_read_only","onKeyPressed","placeholder","required","autoComplete","data-for","data-hj-whitelist","data-tip","data-value","disabled","maxLength","navigator","userAgent","selectionStart","evt","selectionEnd","onKeyDown","readOnly","InputField","classNameInput","classNamePrefix","error_messages","helper","is_float","_this$props$is_hj_whi","is_negative_disabled","_this$props$is_read_o","_this$props$is_signed","is_signed","_this$props$is_unit_a","is_unit_at_right","max_value","min_value","prefix","unit","Icon","has_valid_length","getDecimals","val","array_value","increment_value","new_value","calculateDecrementedValue","decrement_value","is_increment_input","input","InputField_input","trim","signed_regex","is_number","is_not_completed_number","has_zero_at_end","is_scientific_notation","input--error","increment_buttons","InputField_increment_buttons","input_tooltip","tooltip","tooltip--with-label","htmlFor","VerticalTab","changeSelected","applicable_routes","list","current_path","selected_index","vertical-tab--full-screen","is_full_width","_vertical_tab_headers_jsx__WEBPACK_IMPORTED_MODULE_4__","_vertical_tab_content_container_jsx__WEBPACK_IMPORTED_MODULE_3__","arrayOf","shape","isRequired","UnderlyingIcon","react__WEBPACK_IMPORTED_MODULE_1__","ProgressTicks","arr_ticks","_toConsumableArray","progress-slider__ticks-step--marked","RemainingTime","_ref$end_time","end_time","unix","remaining_time","formatDuration","percentage","getTimePercentage","positions_progress_ticks","Containers_remaining_time","progress-slider__line--green","progress-slider__line--orange","progress-slider__line--red","prop_types__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","react_i18next__WEBPACK_IMPORTED_MODULE_2__","Localize","defaults","getChartConfig","getChartType","getChartGranularity","getDisplayStatus","getIndicativePrice","getLastTickFromTickStream","isEnded","isUserSold","isValidToSell","getEndTime","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","is_from_purchase","start","hour_to_granularity_map","getExpiryTime","diff","asHours","calculateGranularity","getFinalPrice","bid_price","is_expired","is_settleable","exit_tick_time","is_path_dependent","is_tick_contract","Cookies","isProduction","setItem","Storage","isStorageSupported","storage","Store","InScriptStore","obj","getResponse","CookieStorage","cookie_name","cookie_domain","hostname","initialized","domain","Date","read","cookie_value","write","expireDate","isSecure","secure","SessionStore","domains","parent_path","cookie_names","contract_types","available_contract_types","available_categories","buildTradeTypesConfig","getArrayDefaultValue","getComponents","getDurationUnitsList","getDurationUnit","getDurationMinMax","getStartType","getStartDates","hours","minutes","getValidTime","buildMoment","setMinuteMultipleByFive","getTradeTypes","getBarriers","getBasis","ContractType","contract_display","arr_new_values","c_type","form_components","contract_start_type","duration_units_list","duration_units","arr_units","contract_expiry_type","duration_min_max","start_date","current_start_date","start_dates_list","has_spot","forward_starting_dates","sessions","compare_moment","start_moment","isSessionAvailable","minute","hour","date","isTimeValid","toMoment","moment_obj","ceil","arr_basis","localized_basis","basis_list","reduce","cur","bas","buildContractTypesConfig","contractsFor","has_contracts","available","start_type","contract_categories","barriers","sub_cats","durations","buildDurationConfig","count","obj_barrier","field","expiry_type","buildBarriersConfig","buildForwardStartingConfig","barrier_values","barrier","high_barrier","barrier_2","low_barrier","getContractType","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","getFullContractTypes","getExpiryDate","expiry_date","proper_expiry_date","moment_start","moment_expiry","hasIntradayDurationUnit","isAfter","clone","isSameOrBefore","market_close_times","market_close_time","end_moment","expiry_sessions","close","minDate","is_end_of_day","is_end_of_session","subtract","getExpiryType","getSessions","option","getStartTime","getTradingTimes","trading_times_response","submarkets","symbols","_args","abrupt","sent","markets","times","_x","getContractCategories","contract_types_list","_templates_common_components_loading_jsx__WEBPACK_IMPORTED_MODULE_2__","ChartLoader","theme","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","Loading","is_invisible","inx","Constants_contract__WEBPACK_IMPORTED_MODULE_2__","ContractTypeCell","getContractTypeDisplay","Assets_icon_jsx__WEBPACK_IMPORTED_MODULE_2__","App_i18n__WEBPACK_IMPORTED_MODULE_3__","FooterIcon","use_icon","CalendarFooter","footer","has_today_btn","has_range_selection","duration_date","is_minimum","Highlight","left","left_offset","highlight_style","transform","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","HighlightWrapper","buttonClick","updateHighlightPosition","closest","resetHighlight","offsetLeft","active_button_el","getElementsByClassName","other_props","classnames","Children","child","cloneElement","button_highlight_Highlight","ButtonToggleMenu","buttons_arr","is_animated","menu","button-menu__button--active","selected_value","button_highlight_wrapper","Items","handleSelect","has_symbol","symbol_type_class_name","list__item--highlighted","list__item--selected","list__item--disabled","has_tooltip","Popover","NativeSelect","getItemFromValue","findInArray","findIndex","isArrayLike","getValueFromIndex","getPrevIndex","getNextIndex","Dropdown","list_ref","createRef","curr_index","is_list_visible","handleVisibility","setWrapperRef","wrapper_ref","handleClickOutside","is_single_option","prev_index","next_index","is_alignment_left","firstChars","is_nativepicker","native_select","left_alignment_style","list_width","dropdown--left","dropdown--show","dropdown--disabled","classNameDisplay","dropdown__display--clicked","dropdown__display--has-symbol","dropdown__select-arrow--left","onEntered","current","dropdown__list--left","list--left","autoHeight","autoHeightMax","renderTrackHorizontal","dropdown_extends","renderThumbHorizontal","DropDown_items","hasCallPutEqual","contract_type_list","hasDurationForCallPutEqual","contract_duration_list","allow_equals_toConsumableArray","AllowEquals","has_callputequal_duration","has_callputequal","isRiseFallEqual","input_field","_e$target","classNameTarget","margin","Amount","currencies_list","is_equal","is_minimized","is_single_currency","validation_errors","button_toggle_menu","dropdown","trade-container__currency-options-dropdown","allow_equals","observableObject","Barrier","barrier_title","input_class","is_center","TickSteps","hover_value","tick_steps_toConsumableArray","isActive","isMarked","isMarkedOnHover","range-slider__ticks-step--active","range-slider__ticks-step--marked","range-slider__ticks-step--marked-hover","RangeSlider","handleChange","resetOnHover","rangeSliderTrack","getRangeSliderTrackWidth","_e$nativeEvent","nativeEvent","offsetX","offsetY","is_hover","range-slider__error","steps","tick_steps","DurationToggle","icon_className","advanced-simple-toggle__icon--active","react","classNamePath","trading_events","getTradingEvents","events","Calendar","calendar_classCallCheck","calendar_possibleConstructorReturn","calendar_getPrototypeOf","switchView","view","calendar_view","navigateTo","new_date","calendar_date","date_format","onChangeCalendarMonth","start_of_month","getStartOfMonth","onMouseOver","hovered_date","updateSelectedDate","max_date","min_date","onSelect","moment_date","dataset","startOf","is_before","is_after","formatted_date","selected_date","updateSelected","stopPropagation","isPeriodDisabled","month","year","decade","resetCalendar","_this$props2","default_date","setToday","_this$props3","now","_this$props4","start_of_period","endOf","current_date","default_message","_this$props5","holidays","weekends","_this$state","calendar_header","calendar_body","calendar_footer","dates","descrip","DatePicker","date_value","is_datepicker_visible","is_clear_btn_visible","is_mounted","onClickOutside","mainNode","updateDatePickerValue","formatDate","is_clearable","onSelectCalendar","isDateValid","onChangeInput","formatted_value","addDays","clearDatePickerInput","updateStore","calendar","daysFromTodayTo","new_date_value","renderInputField","initial_value","disable_trading_events","defaultValue","datepicker__icon--is-hidden","datepicker__icon--with-label","datepicker__picker--left","date_picker_objectSpread","TradingDatePicker","max_date_duration","min_date_expiry","duration_d","is_24_hours_contract","has_intraday_unit","min_duration","daily","moment_contract_start_date_time","setTime","max_daily_duration","is_duration_contract","date_picker","disable_year_selector","Dialog","preClass","selected_time","start_time_moment","end_time_moment","seconds","milliseconds","to_compare_moment","_selected_time$split2","dialog_toConsumableArray","selectOption","current_value","prev_value","is_enabled","_prev_value$split","_prev_value$split2","prev_hour","prev_minute","start_time_reset_minute","is_hour_enabled","isBetween","is_minute_enabled","dialog_defineProperty","mm","TimePicker","is_open","toggleDropDown","arg","time_picker_typeof","saveRef","nodeName","target_element","dialog","getClosestTime","interval","TradingTimePicker","market_open_times","moment_expiry_date","market_open_datetime","market_close_datetime","expiry_datetime","server_datetime","boundaries","market_open_time","getBoundaries","getSelectedTime","time_picker","AdvancedDuration","advanced_duration_unit","advanced_expiry_type","duration_t","changeDurationUnit","getDurationFromUnit","expiry_list","number_input_props","onChangeUiStore","shared_input_props","has_intraday_duration_unit","isSame","endtime_container_class","has-time","range_slider","advanced_duration_extends","ticks","trading_date_picker","trading_time_picker","SimpleDuration","arr","filtered_arr","simple_duration_unit","has_label","du","simple_duration_extends","Duration","hasDurationUnit","is_advanced_duration","onChangeMultiple","has_end_time","expiry","pop","duration_unit_text","duration_value","shared_input","duration_name","number_input","has_toggle","trade-container__fieldset--advanced","duration_extends","advanced_duration","simple_duration","duration_toggle","_ref4","current_duration_unit","new_trade_store_values","duration_objectSpread","DurationWrapper","duration_list","duration_wrapper_toConsumableArray","advancedHasWrongExpiry","handleEndTime","getDurationMinMaxValues","convertDurationLimit","new_duration_unit","new_duration_value","current_unit","current_duration","_this$getDurationMinM2","duration_wrapper_slicedToArray","has_missing_duration_unit","simple_is_missing_duration_unit","_this$getDurationMinM4","setDurationUnit","Duration_duration","duration_wrapper_extends","duration_h","duration_m","duration_s","NumberSelector","arr_arr_numbers","selected_number","arr_numbers","number-selector__selection--selected","LastDigit","last_digit","arr_five","last_digit_toConsumableArray","number_selector","TradeParams","component_key","duration_wrapper","TradeParams_last_digit","TradeParams_amount","ContractTypeDialog","full_screen_dialog","ContractTypeItem","contracts","handleInfoClick","contract-type-item--selected","contract-type-item--invisible","ContractTypeList","contract_type_item","objectOrObservableObject","TradeTypeInfoDialog","TradeTypeInfoItem","handleNavigationClick","handleNextClick","handlePrevClick","item_index","itemList","onBackButtonClick","onSubmitButtonClick","ContractTypeWidget","is_dialog_open","is_info_dialog_open","handleInfoVisibility","navigationLength","nextIndex","list_item","prevIndex","onWidgetClick","getDisplayText","getItemIndex","curr_item","getItemList","contract-type-widget__display--clicked","contract_type_dialog","trade_type_info_dialog","trade_type_info_item","Contract","contract_type_widget","CommonPropTypes","CalendarDays","days","hide_others","moment_today","moment_cur_date","num_of_days","daysInMonth","moment_month_start","moment_month_end","moment_selected","subMonths","day","subDays","start_of_next_month","addMonths","moment_start_date","moment_hovered","is_active","is_today","getDaysOfTheWeek","has_events","is_closes_early","match","duration_from_today","is_between","is_between_hover","is_before_min_or_after_max_date","is_other_month","calendar__cell--active","calendar__cell--today","calendar__cell--active-duration","calendar__cell--today-duration","calendar__cell--disabled","calendar__cell--is-hidden","calendar__cell--other","calendar__cell--between-hover","calendar__cell--between","data-date","data-duration","classNameTargetIcon","getDays","week_headers_abbr","CalendarMonths","moment_selected_date","month_headers","data-month","calendar_months_objectSpread","CalendarYears","_getDecade$split2","getDecade","start_of_decade","end_of_decade","years","is_other_decade","data-year","calendar_years_objectSpread","CalendarDecades","decades","min_year","getCentury","_decade$split2","calendar_decades_slicedToArray","is_other_century","data-decade","calendar_decades_objectSpread","CalendarBody","calendar_days_CalendarDays","calendar_months_CalendarMonths","calendar_years_CalendarYears","calendar_decades_CalendarDecades","CloseButton","notification_order","types","danger","info","success","warning","contract_sold","sortNotifications","Notification","removeNotification","destroy","is_closed_by_user","closeOnClick","is_auto_close","delay","notification--small","size","should_hide_close_btn","close_button","oneOf","ContractInfo","has_increased","should_fade","proposal_info","has_error_or_not_loaded","trade-container__price-info--disabled","trade-container__price-info--slide","trade-container__price-info--fade","stakeOrPayout","obj_contract_basis","PurchaseButton","buy_info","is_proposal_empty","purchased_states_arr","setPurchaseState","onClickPurchase","is_button_disabled","btn-purchase--disabled","btn-purchase--animated--slide","btn-purchase--animated--fade","btn-purchase--swoosh","returns","PurchaseFieldset","is_proposal_error","onHoverPurchase","purchase_button","Elements_purchase_button","btn-purchase__shadow-wrapper--disabled","classNameBubble","Purchase","is_client_allowed_to_visit","isLoading","has_error_details","purchase_fieldset","Elements_purchase_fieldset","getContractTypePosition","unshift","is_purchase_locked","onPurchase","purchase_states","CalendarButton","is_hidden","CalendarHeader","disable_month_selector","hide_disabled_periods","is_date_view","is_month_view","is_year_view","is_decade_view","num_of_years","century","is_prev_month_disabled","is_prev_year_disabled","subYears","is_next_month_disabled","is_next_year_disabled","addYears","is_select_year_disabled","should_hide_next_month","should_hide_prev_month","should_hide_prev_year","should_hide_next_year","onClickPrevYear","onClickNextYear","onClickPrevMonth","onClickNextMonth","calendar_button","calendar__nav--disabled","calendar__nav--is-hidden","calendar__btn--disabled","currentLanguage","getAllowedLanguages","exclude_languages","getAll","EN","getURL","lang","language_getAllowedLanguages","language_getURL","ErrorComponent","redirectOnClick","_ref$should_show_refr","should_show_refresh","refresh_message","duration_from_purchase","round","getBarrierLabel","isDigitType","getBarrierValue","digitTypeMap","addCommaToNumber","DIGITDIFF","DIGITEVEN","DIGITMATCH","DIGITODD","DIGITOVER","DIGITUNDER","positions_helper_getTimePercentage","positions_helper_getBarrierLabel","PositionsCardLoader","react_content_loader_es","primaryColor","secondaryColor","y","rx","ry","positions_card_PositionsCardLoader","_pending_timeouts","status_config","ws_config","network_status","updateUI","StatusConfig","pendings","pending_keys","pending_timeouts","setStatus","ws_events_map","setPending","clearPendings","NetworkMonitorBase","online","class","offline","blinking","ws_init","ws_request","onLine","ping","socket_general_functions","fncUpdateUI","resetWarningCache","elementType","instanceOf","objectOf","checkPropTypes","u","has_effect","f","effect","_contract__WEBPACK_IMPORTED_MODULE_0__","_routes__WEBPACK_IMPORTED_MODULE_1__","i18n_config","resources","translation","hashTransKey","crc32","lng","query","fallbackLng","i18n","use","initReactI18next","current_loginid","types_map_config","client_object","getAllAccountsObject","getAllLoginids","getAccountType","isAccountOfType","getAccountOfType","TypesMapConfig","updateAccountList","canTransferFundsTo","only_enabled","this_type","financial","gaming","virtual","account_list","account","excluded_until","param","param_to_set","value_to_set","to_loginid","from_currency","to_currency","from_landing_company","to_landing_company","maltainvest","malta","is_from_crypto","is_to_crypto","isValidLoginid","valid_login_ids","every","current_client","account_type","hasAccountType","hasCurrencyType","loginids","getAccountTitle","types_map","landing_company_name","shouldAcceptTnc","website_tnc_version","client_tnc_status","setNewAccount","token","currentLandingCompany","landing_company_response","this_shortcode","landing_company_prop","shouldCompleteTax","getMT5AccountType","group","getBasicUpgradeInfo","can_upgrade_to","upgradeable_landing_companies","can_open_multi","current_landing_company","landing_companies","landing_company","canUpgrade","can_upgrade","getLandingCompanyValue","landing_company_object","real","financial_company","gaming_company","getRiskAssessment","is_high_risk","canTransferFunds","hasSvgAccount","canChangeCurrency","mt5_login_list","is_current","has_no_mt5","has_no_transaction","transactions","has_account_criteria","urlForLanguage","getCurrentProductionDomain","location_url","static_host","paramsHash","host_map","Url","bot.binary.com","developers.binary.com","academy.binary.com","tech.binary.com","blog.binary.com","getUrlBase","reset","param_hash","arr_params","parsed","URL","p_l","params","pars","language","should_change_to_legacy","new_url","urlForCurrentDomain","current_domain","url_object","urlForStatic","websiteUrl","protocol","getHostMap","resetStaticHost","account_password","apps","cashier_password","exclusion","limits","personal","settings","_this$props$should_lo","component_props","LazyLoadedComponent","performance_request_time","get_time_interval","update_time_interval","onTimeUpdated","clock_started","pending","requestTime","timeCounter","fncTimeUpdated","clearInterval","setInterval","performance","start_timestamp","performance_response_time","server_time_at_response","updateTime","time_since_response","utc","timePromise","createFromInputFallback","_d","NaN","epoch","isValid","isUTC","today_moment","second","convertToUnix","toGMTFormat","diffInMonths","asDays","formatted_str","time_str","isHourValid","isMinuteValid","num_of_months","date_1","date_2","miliseconds","str_format","date_time_epochToMoment","date_time_toMoment","date_time_toGMTFormat","date_time_getDiffDuration","date_time_formatDuration","date_time_isDateValid","date_time_minDate","date_time_formatMiliseconds","getDurationMaps","to_second","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","convertDurationUnit","duration_maps","from_unit","to_unit","duration_string","root_store","duration_is_day","expiry_is_after_today","isInteger","resetEndTimeOnVolatilityIndices","all_languages","url_lang","lang_regex","languageFromUrl","current_lang","ACH","DE","ES","FR","ID","IT","PL","PT","RU","TH","VI","ZH_CN","ZH_TW","crowdin_lang","url","urlLang","custom_url","NodeList","thisArg","Element","documentElement","matches","parentElement","nodeType","hide","show","toggleClass","class_name","should_add","make_visible","html","content","innerHTML","subscriptions","forget_requested","subscription_id","dispatch","forget","forgetStream","hasCallbackFunction","hasValues","SubscriptionManager","sub_id","stream_id","sub_info","subscribers","fnc","fncCallback","match_values","forgets_list","request_obj","values_obj","addSubscriptionFromRequest","send_request","subscribe_request","subscription_props","is_stream","prop","should_forget_first","isDeepEqual","forgetAll","types_to_forget","sub_ids","forget_all","ignored_responses_in_trackjs","queue","ResponseQueue","ApiCallProxyHandler","prop_key","receiver","target_value","Reflect","return_value","TrackJS","log","fresh","track","getMessage","activeSymbols","buy","proposal_id","price","cashier","verification_code","get_account_status","get_self_exclusion","getSettings","newAccountVirtual","client_password","new_account_virtual","oauthApps","oauth_apps","profitTable","offset","date_boundaries","description","proposalOpenContract","residenceList","residence_list","sell","sellExpired","sell_expired","request_object","force_request","verifyEmail","verify_email","cb","is_forced","subscribeProposal","req","subscribeProposalOpenContract","subscribeProposalOpenContractOnBuy","buy_request","subscribeTicks","subscribeTicksHistory","subscribeTransaction","transaction","trackJSNetworkMonitor","Proxy","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","ownerDocument","isMobile","ErrorBoundary","componentDidCatch","hasError","Errors","is_slow_loading","AppContents","is_app_disabled","is_dark_mode","is_route_modal_on","slow_loading_status","loading","app-contents--show-positions-drawer","app-contents--contract-mode","app-contents--is-disabled","app-contents--is-route-modal","tt_react_custom_scrollbars_lib","addNotificationBar","pwa_prompt_event","setPWAPromptEvent","gmt_time","NetworkStatus","network-status__circle--offline","network-status__circle--online","network-status__circle--blinker","ToggleFullScreen","toggle_fullscreen_classCallCheck","toggle_fullscreen_possibleConstructorReturn","toggle_fullscreen_getPrototypeOf","onFullScreen","is_full_screen","fullscreen_map","toggleFullScreen","to_exit","fncToCall","fnc_enter","fnc_exit","full_screen_icon_class","ic-fullscreen--active","TogglePositions","positions_count","toggle_positions_class","ic-positions--active","ic-positions--has-count","data-count","ModalElement","modal_classCallCheck","modal_possibleConstructorReturn","modal_getPrototypeOf","modal_root","toggleModal","ReactDOM","createPortal","vertical_tab","classNameHeader","modal_content","Modal","modal_ModalElement","ThemeSetting","LanguageSettingContainer","ChartSettingContainer","ToggleSettings","enableApp","is_settings_visible","disableApp","toggleSettings","toggle_settings_class","ic-settings--active","modal_Modal","Footer","active_positions","is_settings_modal_on","show_positions_toggle","toggleSettingsModal","footer--is-disabled","toggle_positions_TogglePositions","Containers_server_time","toggle_settings_ToggleSettings","toggle_fullscreen_ToggleFullScreen","MenuLinks","login_only","Components_Routes","link_to","logo","image","LoginButton","SignupButton","UpgradeButton","AccountInfo","AccountActions","account_actions_classCallCheck","account_actions_possibleConstructorReturn","account_actions_getPrototypeOf","account_actions_inherits","nextProps","active_cashier_tab","is_acc_switcher_on","is_cashier_modal_on","onClickUpgrade","toggleAccountsDialog","is_upgrade_enabled","is_dialog_on","toggleDialog","upgrade_button_UpgradeButton","login_button_LoginButton","signup_button_SignupButton","hideFullBlur","showFullBlur","header_links","Header","header--is-disabled","menu_links_MenuLinks","account_actions_AccountActions","is_accounts_switcher_on","Routes","NetworkMonitor","is_online","setNetworkStatus","OutdatedBrowser","showError","opening_tag","closing_tag","interpolation","escapeValue","$buoop","vs","api","noclose","reminder","onshow","nomessage","insecure","pre_build_dvrs","client_notifications","self_exclusion","exclusion_end","authenticate","cashier_locked","withdrawal_locked","mt5_withdrawal_locked","document_needs_action","unwelcome","mf_retail","financial_limit","risk","tax","tnc","required_fields","handleClientNotifications","addNotification","_response$get_account","prompt_client_to_authenticate","_getStatusValidations","validations","account_status","document_under_review","ukrts_max_turnover_limit_not_set","professional","is_mf_retail","landing_company_shortcode","checkAccountStatus","necessary_withdrawal_fields","necessary_signup_fields","required_settings_fields","getRequiredFields","hasMissingRequiredField","validRequired","validEmail","validPassword","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","validTaxID","validBarrier","validCompare","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimal_count","format_money","isMoreThanMax","getPreBuildDVRs","address","permitted_characters","compare","general","letter_symbol","not_equal","value_one","value_two","password","phone","postcode","regular","signup_token","tax_id","errors_classCallCheck","errors","attribute","Validator","rules","validator_classCallCheck","error_count","rule","is_rule_string","rule_object","validator","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","BaseStore","bound","base_store_classCallCheck","_initializerDefineProperty","_descriptor","_descriptor2","switchAccountDisposer","switch_account_listener","_descriptor3","waitFor","_asyncToGenerator","local_storage_properties","session_storage_properties","validation_rules","store_name","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","reaction","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","getSnapshot","_this3","propertyName","_this4","_this5","addRule","_this6","intercept","change","validateProperty","newValue","_this7","trigger","inputs","isPassed","setValidationErrorMessages","_this8","listener","_this9","when","switch_broadcast","_callee2","_context2","switchEndSignal","onSwitchAccount","t0","disposeSwitchAccount","reactions","act","partial_fetch_time","freeze","observable","ClientStore","client_store_classCallCheck","client_store_initializerDefineProperty","client_store_getPrototypeOf","client_store_descriptor","client_store_assertThisInitialized","client_store_descriptor2","client_store_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","fiat","crypto","isCrypto","currency_defineProperty","selectCurrency","session_start","upgrade_info","user_id","removeAllNotifications","setSwitched","setUserLogin","authorize_response","setLoginId","setAccounts","registerReactions","switched","getAccount","all_loginids","clearContract","clearTable","switchAccount","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","broadcastAccountChange","selected_currency","should_refresh_active_symbols","client_store_asyncToGenerator","_callee3","_context3","resetErrorServices","refresh","debouncedProposal","obj_params","active_loginid","map_names","is_allowed_real","acct1","param_value","token1","runInAction","storeClientAccounts","_this10","isDisabled","getAccountInfo","default_currency","valid_login_ids_regex","_this11","_this12","acc","computed","CommonStore","is_socket_opened","is_network_online","common_store_objectSpread","deposit_url","withdraw_url","GTMStore","gtm_store_classCallCheck","gtm_store_possibleConstructorReturn","gtm_store_getPrototypeOf","is_gtm_applicable","accountSwitcherListener","gtm_store_asyncToGenerator","dataLayer","gtm_store_objectSpread","common_variables","contract_data","bom_ui","barrier1","barrier2","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","extra_data","moment_now","storage_key","gtm_transactions","timestamp","transactions_arr","transaction_id","bom_account_type","bom_today","transaction_time","login_event","is_new_account","affiliate_token","visitorId","country_abbrev","today","bom_date_joined","acc_type","login","event_name","userId","Config","cashier_store_classCallCheck","is_session_timeout","onIframeLoaded","timeout_session","cashier_store_initializerDefineProperty","cashier_store_descriptor","cashier_store_descriptor2","cashier_store_descriptor3","CashierStore","cashier_store_getPrototypeOf","cashier_store_descriptor4","cashier_store_assertThisInitialized","cashier_store_descriptor5","containers","deposit","withdraw","current_action","setErrorMessage","setContainerHeight","setLoading","checkIframeLoaded","setIframeUrl","response_cashier","setSessionTimeout","clearTimeoutCashierUrl","clearVerification","setTimeoutCashierUrl","removeOnIframeLoaded","origin","iframe_url","iframe_height","is_session_time_out","is_button_clicked","verification","is_email_sent","is_resend_clicked","resend_timeout","timeout_button","clearTimeoutVerification","setVerificationButtonClicked","response_verify_email","setVerificationEmailSent","setTimeoutVerification","setCountDownResendVerification","sendVerificationEmail","setVerificationResendTimeout","resend_interval","setVerificationResendClicked","cashier_store_asyncToGenerator","_callee6","_context6","_x5","CONTRACT_SHADES","CALL","PUT","CALLE","PUTE","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","ASIANU","ASIAND","DEFAULT_SHADES","1","2","BARRIER_COLORS","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","createChartBarrier","SmartChartStore","removeBarriers","createBarriers","line_style","not_draggable","updateBarrierShade","MarkerLine","marker_config","LINE_END","content_config","chart-marker-line__icon--won","chart-marker-line__icon--lost","LINE_START","MarkerSpot","spot_count","MarkerSpotLabel","marker_spot_label_classCallCheck","marker_spot_label_possibleConstructorReturn","marker_spot_label_getPrototypeOf","handleHoverToggle","show_label","has_hover_toggle","marker_spot","Markers_marker_spot","spot_className","align_label","spot_epoch","chart-spot-label__value-container--won","chart-spot-label__value-container--lost","spot_value","MARKER_TYPES_CONFIG","ContentComponent","LINE_PURCHASE","SPOT_ENTRY","SPOT_SELL","SPOT_EXIT","SPOT_MIDDLE","createMarkerConfig","marker_type","extend","getSpotCount","createMarkerSpotEntry","entry_tick_time","entry_tick","entry_tick_display_value","createMarkerSpotExit","tick","is_user_sold","exit_tick","exit_tick_display_value","createMarkerSpotMiddle","spot","tick_display_value","createChartMarkers","addTickMarker","addMarker","marker_spots","marker_lines","chart_markers_defineProperty","_marker_spots","_marker_lines","chart_markers_asyncToGenerator","marker_obj","createMarker","markers","_x2","_x3","addLabelAlignment","prev_tick","is_entry_spot","is_middle_spot","is_exit_spot","_x4","contractSold","sold_for","ContractReplayStore","is_ongoing_contract","prev_indicative","handleSubscribeProposalOpenContract","proposal_open_contract_request","forgetProposalOpenContract","setContractMode","populateConfig","indicative_status","sell_info","cleanupContractChartView","setIsChartLoading","new_indicative","updateMargin","handleDigits","extendObservable","getDigitInfo","handleSell","services_error","contract_replay_store_objectSpread","toggleServicesErrorModal","ContractTradeStore","is_from_positions","_this$contract_info","is_one_tick_contract","setStaticChart","setContractStart","setContractEnd","longcode","onMountBuy","updateProposal","has_existing_id","resetValues","switchToContractMode","applySavedTradeChartLayout","handleChartType","setChartView","drawChart","updateChartType","updateGranularity","showUnavailableLocationError","clients_country_code","clients_country_text","clients_country","obj_country","pickDefaultSymbol","getFavoriteOpenSymbol","getFirstOpenSymbol","chart_favorites","client_favorite_list","client_fav_symbol","client_first_open_symbol","isSymbolOpen","first_open_symbol","submarket","getSymbolDisplayName","formatPortfolioPosition","portfolio_pos","details","reference","getUnsupportedContracts","PortfolioStore","getPositionById","createTransformer","pos","pos1","pos2","res","new_pos","pushNewPosition","proposalOpenContractHandler","getPositionIndexById","populateResultDetails","proposal","entry_spot","portfolio_store_objectSpread","contract_idx","portfolio_store_asyncToGenerator","initializePortfolio","portfolioHandler","transactionHandler","contract_response","current_spot","current_spot_time","getDateTo","date_to","getDateFrom","should_load_partially","date_from","shouldSendDateFrom","getDateBoundaries","format_request_objectSpread","formatProfitTableTransactions","format_string","should_exclude_currency","format_response_objectSpread","delay_on_scroll_time","ProfitTableStore","fetchOnScroll","debounce","fetchNextBatch","has_loaded_all","shouldFetchNextBatch","profitTableResponseHandler","formatted_transactions","profit_store_toConsumableArray","_event$target","left_to_scroll","scrollHeight","assertHasValidCache","client_loginid","clearDateFilter","date_values","previous","barriersObjectToArray","reference_array","js_object","ChartBarrierStore","chart_barrier_store_dec","chart_barrier_store_dec2","chart_barrier_store_dec3","chart_barrier_store_dec4","chart_barrier_store_descriptor","chart_barrier_store_applyDecoratedDescriptor","chart_barrier_store_class","onChartBarrierChange","chart_barrier_store_classCallCheck","chart_barrier_store_initializerDefineProperty","chart_barrier_store_descriptor2","chart_barrier_store_descriptor3","chart_barrier_store_descriptor4","chart_barrier_store_descriptor5","chart_barrier_store_descriptor6","chart_barrier_store_descriptor7","chart_barrier_store_descriptor8","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","isFromChart","should_display","updateBarriers","chart_barrier_store_toConsumableArray","is_relative","barriers_list","barriersToString","configurable","initializer","getOwnPropertyDescriptor","ChartMarkerStore","chart_marker_store_descriptor","chart_marker_store_applyDecoratedDescriptor","chart_marker_store_class","chart_marker_store_classCallCheck","chart_marker_store_initializerDefineProperty","chart_marker_store_descriptor2","barriers_empty_array","markers_empty_array","trade_chart_symbol","trade_chart_granularity","trade_chart_type","wsSubscribe","smart_chart_store_objectSpread","wsForget","wsForgetStream","wsSendRequest","is_from_other_position","saveAndClearTradeChartLayout","removeMarkers","resetScrollToLeft","resetPurchaseStates","is_title_enabled","updateEpochScrollToValue","updateBarrierColor","should_export_layout","should_import_layout","trade_chart_layout","should_clear_chart","isDone","requestProposal","layout","smart_chart_store_defineProperty","has_differing","barriers_array","next_barrier","markers_array","marker","next_marker","assetInformation","countdown","is_chart_countdown_visible","isHighestLowestMarkerEnabled","current_language","barrier_config","main_barrier","isBarrierSupported","StatementStore","statementHandler","balance_after","action_type","refid","desc","app_id","formatStatementTransaction","statement_store_toConsumableArray","processPurchase","onChangeSymbolAsync","getValidationRules","start_moment_clone","_value$split2","_value$split4","onChangeContractTypeList","onChangeContractType","onChangeExpiry","onChangeStartDate","obj_contract_start_type","obj_sessions","obj_start_time","obj_duration_units_list","obj_duration_unit","obj_expiry_type","obj_expiry_date","obj_market_open_times","obj_market_close_times","obj_expiry_time","obj_duration_min_max","start_date_objectSpread","processTradeParams","new_state","functions","getMethodsList","extendOrReplace","t1","t2","ContractTypeHelper","process_toConsumableArray","StartDate","source","new_values","map_error_field","getProposalErrorField","error_field","error_id","el_error","getElementsByName","createProposalRequestForContract","type_of_contract","obj_expiry","proposal_objectSpread","TradeStore","trade_store_classCallCheck","trade_store_getPrototypeOf","trade_store_initializerDefineProperty","trade_store_descriptor","trade_store_assertThisInitialized","trade_store_descriptor2","trade_store_descriptor3","trade_store_descriptor4","trade_store_descriptor5","trade_store_descriptor6","trade_store_descriptor7","trade_store_descriptor8","trade_store_descriptor9","trade_store_descriptor10","trade_store_descriptor11","trade_store_descriptor12","trade_store_descriptor13","trade_store_descriptor14","trade_store_descriptor15","trade_store_descriptor16","trade_store_descriptor17","trade_store_descriptor18","trade_store_descriptor19","trade_store_descriptor20","trade_store_descriptor21","trade_store_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","_descriptor33","_descriptor34","_descriptor35","_descriptor36","_descriptor37","proposal_requests","initial_barriers","is_initial_barrier_applied","_descriptor38","_descriptor39","_descriptor40","disablePurchaseButtons","el_purchase_value","el_purchase_buttons","changeDurationValidationRules","onAllowEqualsChange","is_symbol_in_active_symbols","processNewValuesAsync","setAppLoading","trade_store_objectSpread","setActiveSymbols","trade_store_asyncToGenerator","setDefaultSymbol","setContractTypes","validateAllProperties","trade_store_defineProperty","previous_symbol","setMarketStatus","is_over","is_purchase_enabled","_response$buy","drawContractStartTime","openPositionsDrawer","pushPurchaseData","obj_new_values","is_changed_by_user","obj_old_values","prev_currency","setPreviousSymbol","requests","new_req","current_req","createProposalRequests","setIsDigitContract","onProposalResponse","prev_proposal_info","obj_prev_contract_basis","ask_price","contract_basis","getProposalInfo","proposal_response","_proposal_response$ec","setChartBarrier","duration_options","_callee7","_context7","onLoadingMount","prepareTradeStore","is_trade_component_mounted","first_timeout","loading_message","secondary_message","setSlowLoading","second_timeout","loading_interval","smart_chart_store","restoreTradeChart","pushState","_callee10","_context10","_callee9","_context9","_this13","_this14","_this15","ModulesStore","Modules_classCallCheck","contract_replay","UIStore","ui_store_classCallCheck","ui_store_getPrototypeOf","ui_store_initializerDefineProperty","ui_store_descriptor","ui_store_assertThisInitialized","ui_store_descriptor2","ui_store_descriptor3","ui_store_descriptor4","ui_store_descriptor5","ui_store_descriptor6","ui_store_descriptor7","ui_store_descriptor8","ui_store_descriptor9","ui_store_descriptor10","ui_store_descriptor11","ui_store_descriptor12","ui_store_descriptor13","ui_store_descriptor14","ui_store_descriptor15","ui_store_descriptor16","ui_store_descriptor17","ui_store_descriptor18","ui_store_descriptor19","ui_store_descriptor20","ui_store_descriptor21","ui_store_descriptor22","ui_store_descriptor23","ui_store_descriptor24","ui_store_descriptor25","ui_store_descriptor26","ui_store_descriptor27","ui_store_descriptor28","ui_store_descriptor29","ui_store_descriptor30","ui_store_descriptor31","ui_store_descriptor32","ui_store_descriptor33","ui_store_descriptor34","ui_store_descriptor35","handleResize","autorun","screen_width","innerWidth","active_tab","tab","is_reports_visible","is_services_error_visible","is_main_drawer_on","is_notifications_drawer_on","notification","notification_messages","ui_store_toConsumableArray","push_notifications","state_change","is_unsupported_contract_modal_visible","is_account_signup_modal_visible","RootStore","Stores_classCallCheck","configure","enforceActions","initStore","hidden","setStorageEvents","isTouchDevice","App","base","basename","is_tablet","Layout_header","error_boundary","app_contents","Routes_routes","wrapper","app_App","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","FadeIn","posed","span","transition","PopoverBubble","calculatePosition","target_rectangle","_this$props$margin","bottom","right","popover_bubble","react_pose_es","initialPose","data-popover-pos","popover__bubble--error","popover_classCallCheck","popover_possibleConstructorReturn","popover_getPrototypeOf","toggleOpen","Boolean","target_reference","toggleClose","disable_target_icon","icon_class_name","Popover_popover_bubble","Fieldset","fieldset_header_class","fieldset_info_class","_common_base_server_time__WEBPACK_IMPORTED_MODULE_0__","_common_base_server_time__WEBPACK_IMPORTED_MODULE_0___default","Utils_Date__WEBPACK_IMPORTED_MODULE_1__","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","isBeforeDate","should_only_check_hour","now_moment","session","loginUrl","domain_app_ids","server_url","signup_device","date_first_contact","marketing_queries","default_binary_url","initOneAll","provider","el_button","brand","_getLastTickFromTickS","createDigitInfo","spot_time","digit","icons","IconArrowBold","IconArrow","IconBack","IconCalendarToday","IconCalendar","IconChevronDoubleLeft","IconChevronDoubleRight","IconChevronLeft","IconChevronRight","IconClear","IconClock","IconClose","IconCountryFlag","IconDanger","IconDeposit","IconDepositSmall","IconExclamation","IconFlag","IconInfoBlue","IconInfoOutline","IconInformation","IconMinimize","IconMinus","IconPlus","IconQuestion","IconRedDot","IconSuccess","IconWarning","IconWip","IconWithdrawal","IconWithdrawalSmall","ContractIconClose","IconEndTime","ContractIconFlag","IconStartTime","IconTick","IconAuthenticateWithdrawals","IconEmailSent","ModalIconClose","IconMaximize","IconPositions","IconSettings","IconAccountsCurrency","IconLogout","IconBell","IconCashier","IconDeriv","IconHamburger","IconPortfolio","IconReports","IconTrade","IconDemo","IconOpenPositions","IconProfitTable","IconStatement","IconCalendarForwardToday","IconCharts","IconLanguage","IconPurchase","IconTheme","IconBuy","IconPayout","IconSell","IconWallet","IconBarrierDown","IconBarrierUp","IconTradeCategory","TradeCategoriesGIF","TradeCategories","IconTradeType","IconLock","IconPriceMove","classNameRect","IconLazy","deriv.app","all_domains","config_app_id","is_real","server","FRXAUDCAD","FRXAUDCHF","FRXAUDJPY","FRXAUDNZD","FRXAUDPLN","FRXAUDUSD","FRXBROUSD","FRXEURAUD","FRXEURCAD","FRXEURCHF","FRXEURGBP","FRXEURJPY","FRXEURNZD","FRXEURUSD","FRXGBPAUD","FRXGBPCAD","FRXGBPCHF","FRXGBPJPY","FRXGBPNOK","FRXGBPUSD","FRXNZDJPY","FRXNZDUSD","FRXUSDCAD","FRXUSDCHF","FRXUSDJPY","FRXUSDNOK","FRXUSDPLN","FRXUSDSEK","FRXXAGUSD","FRXXAUUSD","FRXXPDUSD","FRXXPTUSD","OTC_AEX","OTC_AS51","OTC_DJI","OTC_FCHI","OTC_FTSE","OTC_GDAXI","OTC_HSI","OTC_IBEX35","OTC_N225","OTC_NDX","OTC_SPC","OTC_SSMI","OTC_SX5E","R_10","R_25","R_50","R_75","R_100","RDBEAR","RDBULL","WLDAUD","WLDEUR","WLDGBP","WLDUSD","RESETCALL","RESETPUT","TICKHIGH","TICKLOW","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","CALLSPREAD","PUTSPREAD","RUNHIGH","RUNLOW","getSupportedContracts","_common_base_currency_base__WEBPACK_IMPORTED_MODULE_3__","Money","_ref$currency","has_sign","_ref$is_formatted","is_formatted","abs_value","final_amount","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","Mondays","Tuesdays","Wednesdays","Thursdays","Fridays","Saturdays","Sundays","isEqualArray","isEqualObject","arr1","arr2","obj1","obj2","to_replace","tag_name","attributes","attr","textContent","UILoader","classNameBlock","block_class","loading_class","viewBox","strokeWidth","strokeMiterlimit","Utils_Date__WEBPACK_IMPORTED_MODULE_0__","_logout__WEBPACK_IMPORTED_MODULE_0__","_socket_general__WEBPACK_IMPORTED_MODULE_1__","_ws_methods__WEBPACK_IMPORTED_MODULE_2__","react_router__WEBPACK_IMPORTED_MODULE_0__","Constants_routes__WEBPACK_IMPORTED_MODULE_1__","routes_config","route_info","match_path","matchPath","route_path","getPath"],"mappings":"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","file":"js/main.83d586de0580c06c2de6.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\tvar prefetchChunks = data[3] || [];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\tdeferredPrefetch.push.apply(deferredPrefetch, prefetchChunks);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\tif(deferredModules.length === 0) {\n \t\t\t// chunk prefetching for javascript\n \t\t\tdeferredPrefetch.forEach(function(chunkId) {\n \t\t\t\tif(installedChunks[chunkId] === undefined) {\n \t\t\t\t\tinstalledChunks[chunkId] = null;\n \t\t\t\t\tvar link = document.createElement('link');\n\n \t\t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\t\tlink.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t\t}\n \t\t\t\t\tlink.rel = \"prefetch\";\n \t\t\t\t\tlink.as = \"script\";\n \t\t\t\t\tlink.href = jsonpScriptSrc(chunkId);\n \t\t\t\t\tdocument.head.appendChild(link);\n \t\t\t\t}\n \t\t\t});\n \t\t\tdeferredPrefetch.length = 0;\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"main\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [], deferredPrefetch = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"404\":\"404\",\"account-info\":\"account-info\",\"contract\":\"contract\",\"digits\":\"digits\",\"info-box\":\"info-box\",\"modals\":\"modals\",\"notification-messages\":\"notification-messages\",\"push-notification\":\"push-notification\",\"reports\":\"reports\",\"screen-small\":\"screen-small\",\"settings-chart\":\"settings-chart\",\"settings-language\":\"settings-language\",\"settings-theme\":\"settings-theme\",\"toggle-menu-drawer\":\"toggle-menu-drawer\",\"vendors~open_position~7c650be5\":\"vendors~open_position~7c650be5\",\"default~open_position~1833eefb\":\"default~open_position~1833eefb\",\"open_positions\":\"open_positions\",\"profit_table\":\"profit_table\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\",\"work-in-progress\":\"work-in-progress\",\"two-month-picker\":\"two-month-picker\"}[chunkId]||chunkId) + \".\" + \"83d586de0580c06c2de6\" + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"digits\":1,\"modals\":1,\"notification-messages\":1,\"reports\":1,\"screen-small\":1,\"work-in-progress\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + chunkId + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \tvar startupResult = (function() {\n \t// add entry module to deferred list\n \tdeferredModules.push([508,\"vendors~main\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n \t})();\n\n \twebpackJsonpCallback([[], {}, 0, [\"digits\",\"info-box\",\"modals\",\"settings-chart\",\"settings-language\",\"settings-theme\"]]);\n \treturn startupResult;\n","const ClientBase       = require('./client_base');\nconst SocketCache      = require('./socket_cache');\nconst getLanguage      = require('../language').get;\nconst State            = require('../storage').State;\nconst cloneObject      = require('../utility').cloneObject;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst isEmptyObject    = require('../utility').isEmptyObject;\nconst PromiseClass     = require('../utility').PromiseClass;\nconst getAppId         = require('../../config').getAppId;\nconst getSocketURL     = require('../../config').getSocketURL;\n\n/*\n * An abstraction layer over native javascript WebSocket,\n * which provides additional functionality like\n * reopen the closed connection and process the buffered requests\n */\nconst BinarySocketBase = (() => {\n    let binary_socket;\n\n    let config               = {};\n    let buffered_sends       = [];\n    let req_id               = 0;\n    let wrong_app_id         = 0;\n    let is_available         = true;\n    let is_disconnect_called = false;\n    let is_connected_before  = false;\n\n    const socket_url = `${getSocketURL()}?app_id=${getAppId()}&l=${getLanguage()}`;\n    const timeouts   = {};\n    const promises   = {};\n\n    const no_duplicate_requests = [\n        'authorize',\n        'get_settings',\n        'residence_list',\n        'landing_company',\n        'payout_currencies',\n        'asset_index',\n        'active_symbols',\n    ];\n\n    const sent_requests = {\n        items : [],\n        clear : () => { sent_requests.items = []; },\n        has   : msg_type => sent_requests.items.indexOf(msg_type) >= 0,\n        add   : (msg_type) => { if (!sent_requests.has(msg_type)) sent_requests.items.push(msg_type); },\n        remove: (msg_type) => {\n            if (sent_requests.has(msg_type)) sent_requests.items.splice(sent_requests.items.indexOf(msg_type, 1));\n        },\n    };\n\n    const waiting_list = {\n        items: {},\n        add  : (msg_type, promise_obj) => {\n            if (!waiting_list.items[msg_type]) {\n                waiting_list.items[msg_type] = [];\n            }\n            waiting_list.items[msg_type].push(promise_obj);\n        },\n        resolve: (response) => {\n            const msg_type      = response.msg_type;\n            const this_promises = waiting_list.items[msg_type];\n            if (this_promises && this_promises.length) {\n                this_promises.forEach((pr) => {\n                    if (!waiting_list.another_exists(pr, msg_type)) {\n                        pr.resolve(response);\n                    }\n                });\n                waiting_list.items[msg_type] = [];\n            }\n        },\n        another_exists: (pr, msg_type) => (\n            Object.keys(waiting_list.items)\n                .some(type => (\n                    type !== msg_type &&\n                    waiting_list.items[type].indexOf(pr) !== -1\n                ))\n        ),\n    };\n\n    const clearTimeouts = () => {\n        Object.keys(timeouts).forEach((key) => {\n            clearTimeout(timeouts[key]);\n            delete timeouts[key];\n        });\n    };\n\n    const isReady = () => hasReadyState(1);\n\n    const isClose = () => !binary_socket || hasReadyState(2, 3);\n\n    const hasReadyState = (...states) => binary_socket && states.some(s => binary_socket.readyState === s);\n\n    const sendBufferedRequests = () => {\n        while (buffered_sends.length > 0 && is_available) {\n            const req_obj = buffered_sends.shift();\n            send(req_obj.request, req_obj.options);\n        }\n    };\n\n    const wait = (...msg_types) => {\n        const promise_obj = new PromiseClass();\n        let is_resolved   = true;\n        msg_types.forEach((msg_type) => {\n            const last_response = State.get(['response', msg_type]);\n            if (!last_response) {\n                if (msg_type !== 'authorize' || ClientBase.isLoggedIn()) {\n                    waiting_list.add(msg_type, promise_obj);\n                    is_resolved = false;\n                }\n            } else if (msg_types.length === 1) {\n                promise_obj.resolve(last_response);\n            }\n        });\n        if (is_resolved) {\n            promise_obj.resolve();\n        }\n        return promise_obj.promise;\n    };\n\n    /**\n     * @param {Object} data: request object\n     * @param {Object} options:\n     *      forced  : {boolean}  sends the request regardless the same msg_type has been sent before\n     *      msg_type: {string}   specify the type of request call\n     *      callback: {function} to call on response of streaming requests\n     */\n    const send = function (data, options = {}) {\n        const promise_obj = options.promise || new PromiseClass();\n        const has_callback = typeof options.callback === 'function';\n\n        if (!data || isEmptyObject(data)) return promise_obj.promise;\n\n        const msg_type = options.msg_type || no_duplicate_requests.find(c => c in data);\n\n        // Fetch from cache\n        if (!options.forced) {\n            const response = SocketCache.get(data, msg_type);\n            if (response) {\n                State.set(['response', msg_type], cloneObject(response));\n                if (isReady() && is_available && !options.skip_cache_update && !has_callback) { // make the request to keep the cache updated\n                    binary_socket.send(JSON.stringify(data), { forced: true });\n                } else if (+data.time !== 1) { // Do not buffer all time requests\n                    buffered_sends.push({\n                        request: data,\n                        options: Object.assign(options, { promise: promise_obj, forced: true }),\n                    });\n                }\n                promise_obj.resolve(response);\n                if (has_callback) {\n                    options.callback(response);\n                } else {\n                    return promise_obj.promise;\n                }\n            }\n        }\n\n        // Fetch from state\n        if (!options.forced && msg_type && no_duplicate_requests.indexOf(msg_type) !== -1) {\n            const last_response = State.get(['response', msg_type]);\n            if (last_response) {\n                promise_obj.resolve(last_response);\n                return promise_obj.promise;\n            } else if (sent_requests.has(msg_type)) {\n                return wait(msg_type).then((response) => {\n                    promise_obj.resolve(response);\n                    return promise_obj.promise;\n                });\n            }\n        }\n\n        if (!data.req_id) {\n            data.req_id = ++req_id;\n        }\n        promises[data.req_id] = {\n            callback: (response) => {\n                if (has_callback) {\n                    options.callback(response);\n                } else {\n                    promise_obj.resolve(response);\n                }\n            },\n            subscribe: !!data.subscribe,\n        };\n\n        if (isReady() && is_available && config.isOnline()) {\n            is_disconnect_called = false;\n            if (!getPropertyValue(data, 'passthrough') && !getPropertyValue(data, 'verify_email')) {\n                data.passthrough = {};\n            }\n\n            binary_socket.send(JSON.stringify(data));\n            config.wsEvent('send');\n            if (msg_type && !sent_requests.has(msg_type)) {\n                sent_requests.add(msg_type);\n            }\n        } else if (+data.time !== 1) { // Do not buffer all time requests\n            buffered_sends.push({ request: data, options: Object.assign(options, { promise: promise_obj }) });\n        }\n\n        return promise_obj.promise;\n    };\n\n    const init = (options) => {\n        if (wrong_app_id === getAppId()) {\n            return;\n        }\n        if (typeof options === 'object' && config !== options) {\n            config         = options;\n            buffered_sends = [];\n        }\n        clearTimeouts();\n        config.wsEvent('init');\n\n        if (isClose()) {\n            binary_socket = new WebSocket(socket_url);\n            State.set('response', {});\n        }\n\n        binary_socket.onopen = () => {\n            config.wsEvent('open');\n            if (ClientBase.isLoggedIn()) {\n                send({ authorize: ClientBase.get('token') }, { forced: true });\n            } else {\n                sendBufferedRequests();\n            }\n\n            if (typeof config.onOpen === 'function') {\n                config.onOpen(isReady());\n            }\n\n            if (typeof config.onReconnect === 'function' && is_connected_before) {\n                config.onReconnect();\n            }\n\n            if (!is_connected_before) {\n                is_connected_before = true;\n            }\n        };\n\n        binary_socket.onmessage = (msg) => {\n            config.wsEvent('message');\n            const response = msg.data ? JSON.parse(msg.data) : undefined;\n            if (response) {\n                SocketCache.set(response);\n                const msg_type = response.msg_type;\n\n                // store in State\n                if (!getPropertyValue(response, ['echo_req', 'subscribe']) || /balance|website_status/.test(msg_type)) {\n                    State.set(['response', msg_type], cloneObject(response));\n                }\n                // resolve the send promise\n                const this_req_id = response.req_id;\n                const pr          = this_req_id ? promises[this_req_id] : null;\n                if (pr && typeof pr.callback === 'function') {\n                    pr.callback(response);\n                    if (!pr.subscribe) {\n                        delete promises[this_req_id];\n                    }\n                }\n                // resolve the wait promise\n                waiting_list.resolve(response);\n\n                if (getPropertyValue(response, ['error', 'code']) === 'InvalidAppID') {\n                    wrong_app_id = getAppId();\n                }\n\n                if (typeof config.onMessage === 'function') {\n                    config.onMessage(response);\n                }\n            }\n        };\n\n        binary_socket.onclose = () => {\n            sent_requests.clear();\n            clearTimeouts();\n            config.wsEvent('close');\n\n            if (wrong_app_id !== getAppId() && typeof config.onDisconnect === 'function' && !is_disconnect_called) {\n                config.onDisconnect();\n                is_disconnect_called = true;\n            }\n        };\n    };\n\n    const clear = (msg_type) => {\n        buffered_sends = [];\n        if (msg_type) {\n            State.set(['response', msg_type], undefined);\n            sent_requests.remove(msg_type);\n        }\n    };\n\n    const availability = (status) => {\n        if (typeof status !== 'undefined') {\n            is_available = !!status;\n        }\n        return is_available;\n    };\n\n    return {\n        init,\n        wait,\n        send,\n        clear,\n        clearTimeouts,\n        availability,\n        hasReadyState,\n        sendBuffered      : sendBufferedRequests,\n        get               : () => binary_socket,\n        setOnDisconnect   : (onDisconnect) => { config.onDisconnect = onDisconnect; },\n        setOnReconnect    : (onReconnect) => { config.onReconnect = onReconnect; },\n        removeOnReconnect : () => { delete config.onReconnect; },\n        removeOnDisconnect: () => { delete config.onDisconnect; },\n    };\n})();\n\nmodule.exports = BinarySocketBase;\n","const moment           = require('moment');\nconst getLanguage      = require('../language').get;\nconst LocalStore       = require('../storage').LocalStore;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst getStaticHash    = require('../utility').getStaticHash;\nconst isEmptyObject    = require('../utility').isEmptyObject;\n\n/*\n * Caches WS responses to reduce delay time and number of requests\n * Stores data in LocalStore which is the first one available in: localStorage, sessionStorage, InScriptStore\n *\n * 1. It caches only the response of those calls which determined in `config`\n * 2. It doesn't cache responses which returned error\n * 3. The value is requested by BinarySocket,\n *    if this returns a value according to the logic here, socket code take it as response\n *    but also triggers an async `send` request, to keep the cache updated for next time\n * 4. Uses client's time to set and check for expiry, as the expire durations are not so long to need a more precise one\n *    (And doesn't worth to wait for the response of time call)\n * 5. Some responses should be cached by a particular value from request (e.g. contracts_for_frxAUDJPY)\n *    so there can be more than one value for a particular call\n * 6. Clears the whole cache regardless their expire time on the following events:\n *    6.1. Client changes: login / logout / switch loginid\n *    6.2. Detect a new release (static hash changed)\n */\nconst SocketCache = (() => {\n    // keys are msg_type\n    // expire: how long to keep the value (in minutes)\n    // map_to: to store different responses of the same key, should be array of:\n    //     string  : the property value from echo_req\n    //     function: return value of the function\n    const config = {\n        payout_currencies     : { expire: 120 },\n        proposal_open_contract: { expire: 10,  map_to: ['contract_id'] },\n        active_symbols        : { expire: 10,  map_to: ['product_type', 'landing_company', getLanguage] },\n        contracts_for         : { expire: 10,  map_to: ['contracts_for', 'product_type', 'currency'] },\n        exchange_rates        : { expire: 60,  map_to: ['base_currency'] },\n        ticks_history         : { expire: 10,  map_to: ['ticks_history', 'granularity', 'start', 'end', 'style'] },\n        trading_times         : { expire: 120, map_to: ['trading_times'] },\n        // TODO: Enable statement and profit table caching once we have UI design for handling\n        // transitions between cached table and newly added data to table\n        // statement             : { expire: 10,   map_to: ['limit', 'offset'] },\n        // profit_table          : { expire: 10,   map_to: ['date_from', 'limit', 'offset'] },\n    };\n\n    const storage_key = 'ws_cache';\n\n    let data_obj = {};\n\n    const msg_type_mapping = {\n        history: 'ticks_history',\n        candles: 'ticks_history',\n    };\n\n    const isMarketClosed = (active_symbols = [], symbol) => {\n        if (!active_symbols.length) return false;\n        return (active_symbols.filter(x => x.symbol === symbol)[0]) ?\n            !active_symbols.filter(symbol_info => symbol_info.symbol === symbol)[0].exchange_is_open\n            :\n            false;\n    };\n\n    const set = (response) => {\n        const msg_type = msg_type_mapping[response.msg_type] || response.msg_type;\n\n        // Excluding closed markets from caching once we have ws_cache and active_symbols cache set up\n        const ws_cache = JSON.parse(localStorage.getItem('ws_cache'));\n        // TODO: Update method of getting language from cookies once we have it in ui_store localStorage\n        const curr_lang = document.cookie.replace(/(?:(?:^|.*;\\s*)language\\s*=\\s*([^;]*).*$)|^.*$/, '$1');\n\n        const active_symbols_obj = curr_lang ? `active_symbols___${curr_lang}` : null;\n\n        if (!isEmptyObject(ws_cache)) {\n            if (msg_type === 'ticks_history' && !isEmptyObject(ws_cache[active_symbols_obj])) {\n                const active_symbols = ws_cache[active_symbols_obj].value.active_symbols;\n                const curr_symbol    = response.echo_req.ticks_history;\n                if (isMarketClosed(active_symbols, curr_symbol)) {\n                    return;\n                }\n            }\n        }\n\n        // check if response has subscription, since we only want to cache non-streaming responses\n        if (response.subscription || (response.echo_req.end === 'latest')) return;\n\n        if (!config[msg_type]) return;\n        // prevent unwanted page behaviour\n        // if a cached version already exists but it gives an error after being called for updating the cache\n        const cached_response = get(response.echo_req) || {};\n        const cached_message  = cached_response[msg_type];\n        const new_message     = response[msg_type];\n\n        const has_error_or_missing = response.error; // || !(msg_type in response);\n        const has_new_value        = cached_message && isEmptyValue(cached_message) && !isEmptyValue(new_message);\n        const has_old_cache        = cached_message && isEmptyValue(new_message) && !isEmptyValue(cached_message);\n        const has_valid_cache      = !isEmptyValue(cached_response) && !cached_response.error;\n\n        if ((has_error_or_missing || has_new_value || has_old_cache) && has_valid_cache) {\n            clear();\n            // window.location.reload();\n            return;\n        }\n\n        const key      = makeKey(response.echo_req, msg_type);\n        const expires  = moment().add(config[msg_type].expire, 'm').valueOf();\n\n        if (!data_obj.static_hash) {\n            data_obj.static_hash = getStaticHash();\n        }\n\n        data_obj[key] = { value: response, expires };\n        LocalStore.setObject(storage_key, data_obj);\n    };\n\n    const isEmptyValue = (data) => {\n        let is_empty_data = false;\n        if (Array.isArray(data)) {\n            if (!data.length) {\n                is_empty_data = true;\n            }\n        } else if (typeof response_data === 'object') {\n            if (!Object.keys(data).length) {\n                is_empty_data = true;\n            }\n        }\n        return is_empty_data;\n    };\n\n    const get = (request, msg_type) => {\n        let response;\n\n        if (isEmptyObject(data_obj)) {\n            data_obj = LocalStore.getObject(storage_key);\n            if (isEmptyObject(data_obj)) return undefined;\n        }\n\n        if (data_obj.static_hash !== getStaticHash()) { // new release\n            clear();\n        }\n\n        const key          = makeKey(request, msg_type);\n        const response_obj = getPropertyValue(data_obj, key) || {};\n\n        if (moment().isBefore(response_obj.expires)) {\n            response = response_obj.value;\n        } else { // remove if expired\n            remove(key);\n        }\n\n        return response;\n    };\n\n    const makeKey = (source_obj = {}, msg_type = '') => {\n        let key = msg_type || Object.keys(source_obj).find(type => config[type]);\n\n        if (key && !isEmptyObject(source_obj)) {\n            ((config[key] || {}).map_to || []).forEach((map_key) => {\n                const value = typeof map_key === 'function' ? map_key() : source_obj[map_key];\n                key += map_key ? `_${value || ''}` : '';\n            });\n        }\n\n        return key;\n    };\n\n    const remove = (key, should_match_all) => {\n        if (should_match_all) {\n            Object.keys(data_obj).forEach((data_key) => {\n                if (data_key.indexOf(key) !== -1) {\n                    delete data_obj[data_key];\n                }\n            });\n        } else if (key in data_obj) {\n            delete data_obj[key];\n        }\n        LocalStore.setObject(storage_key, data_obj);\n    };\n\n    const clear = () => {\n        LocalStore.remove(storage_key);\n        data_obj = {};\n    };\n\n    return {\n        set,\n        get,\n        remove,\n        clear,\n    };\n})();\n\nmodule.exports = SocketCache;\n","import { getMarketNamesMap, getContractConfig } from 'Constants';\n\n/**\n * Fetch market information from shortcode\n * @param shortcode: string\n * @returns {{underlying: string, category: string}}\n */\nexport const getMarketInformation = (shortcode) => {\n    const market_info = {\n        category  : '',\n        underlying: '',\n    };\n\n    const pattern = new RegExp('^([A-Z]+)_((OTC_[A-Z0-9]+)|R_[\\\\d]{2,3}|[A-Z]+)_'); // Used to get market name from shortcode\n    const extracted = pattern.exec(shortcode);\n    if (extracted !== null) {\n        market_info.category   = extracted[1].toLowerCase();\n        market_info.underlying = extracted[2];\n    }\n\n    return market_info;\n};\n\nexport const getMarketName = (underlying) => underlying ? getMarketNamesMap()[underlying.toUpperCase()] : null;\n\nexport const getTradeTypeName = (category) => category ? getContractConfig()[category.toUpperCase()].name : null;\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws-methods';\n\nexport const requestLogout = () =>\n    WS.logout().then(doLogout);\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n};\n","const createElement = require('./utility').createElement;\n\n/*\n * function to check if element is visible or not\n *\n */\nconst isVisible = elem => !(!elem || (elem.offsetWidth === 0 && elem.offsetHeight === 0));\n\n/*\n * @param  {String}  id_selector   the selector for the element\n * @param  {Element} parent        optional selector to use for parent, defaults to document\n * @return {Element}               return element if it exists, if it doesn't return a dummy element\n */\nconst getElementById = (id_selector, parent = document) => parent.getElementById(id_selector) || createElement('div');\n\nmodule.exports = {\n    isVisible,\n    getElementById,\n};\n","const toTitleCase = str => (\n    (str || '').replace(/\\w[^\\s/\\\\]*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase())\n);\n\nconst padLeft = (txt, len, char) => {\n    const text = String(txt || '');\n    return text.length >= len ? text : `${Array((len - text.length) + 1).join(char)}${text}`;\n};\n\nconst compareBigUnsignedInt = (a, b) => {\n    let first_num  = numberToString(a);\n    let second_num = numberToString(b);\n    if (!first_num || !second_num) {\n        return '';\n    }\n    const max_length = Math.max(first_num.length, second_num.length);\n    first_num        = padLeft(first_num, max_length, '0');\n    second_num       = padLeft(second_num, max_length, '0');\n\n    // lexicographical comparison\n    let order = 0;\n    if (first_num !== second_num) {\n        order = first_num > second_num ? 1 : -1;\n    }\n\n    return order;\n};\n\nconst numberToString = n => (typeof n === 'number' ? String(n) : n);\n\nmodule.exports = {\n    toTitleCase,\n    padLeft,\n    numberToString,\n    compareBigUnsignedInt,\n};\n","import { localize } from 'App/i18n';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall      : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['stake', 'payout'], components: ['start_date'], barrier_count: 0 },\n        rise_fall_equal: { title: localize('Rise/Fall'),                  trade_types: ['CALLE', 'PUTE'],             basis: ['stake', 'payout'], components: ['start_date'], barrier_count: 0 },\n        high_low       : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['stake', 'payout'], components: ['barrier'],    barrier_count: 1 },\n        touch          : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['stake', 'payout'], components: ['barrier'] },\n        end            : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['stake', 'payout'], components: ['barrier'] },\n        stay           : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['stake', 'payout'], components: ['barrier'] },\n        asian          : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['stake', 'payout'], components: [] },\n        match_diff     : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['stake', 'payout'], components: ['last_digit'] },\n        even_odd       : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['stake', 'payout'], components: [] },\n        over_under     : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['stake', 'payout'], components: ['last_digit'] },\n        lb_call        : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put         : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low    : { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'rise_fall_equal', 'high_low'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        gtm       : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","import { localize }        from 'App/i18n';\nimport { unique }          from '_common/utility';\nimport {\n    epochToMoment,\n    formatMiliseconds,\n    getDiffDuration }      from 'Utils/Date';\nimport { isDigitContract } from '../../Contract/Helpers/digits';\n\nexport const getCurrentTick = (contract_info) => {\n    const tick_stream = unique(contract_info.tick_stream, 'epoch');\n    const current_tick = isDigitContract(contract_info.contract_type) ? tick_stream.length : tick_stream.length - 1;\n    return (!current_tick || current_tick < 0) ? 0 : current_tick;\n};\n\nexport const getDurationUnitValue = (obj_duration) => {\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n    // Check with isEndTime to find out if value of duration has decimals\n    // for days we do not require precision for End Time value since users cannot select with timepicker if not in same day\n    // Seconds is the smallest End Time duration displayed thus we can keep the same formatting as normal Duration\n\n    if (duration_ms >= 86400000) {\n        const duration = duration_ms / (1000 * 60 * 60 * 24);\n        return Math.floor(duration);\n    } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n        const duration      = duration_ms / (1000 * 60 * 60);\n        const is_end_time   = isEndTime(duration);\n        const has_seconds   = isEndTime(duration_ms / (1000 * 60));\n        const string_format = has_seconds ? 'HH[h] mm[m] ss[s]' : 'HH[h] mm[m]';\n\n        return is_end_time ?\n            formatMiliseconds(duration_ms, string_format)\n            :\n            Math.floor(duration_ms / (1000 * 60 * 60));\n    } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n        const duration = duration_ms / (1000 * 60);\n        const is_end_time = isEndTime(duration);\n        return is_end_time ?\n            formatMiliseconds(duration_ms, 'mm[m] ss[s]')\n            :\n            Math.floor(duration_ms / (1000 * 60));\n    } else if (duration_ms >= 1000 && duration_ms < 60000) {\n        return Math.floor(duration_ms / 1000);\n    }\n    return Math.floor(duration_ms / 1000);\n};\n\nexport const isEndTime = (duration) => (duration % 1) !== 0;\n\nexport const getDurationUnitText = (obj_duration) => {\n    const unit_map = {\n        d: { name_plural: localize('days'),    name_singular: localize('day') },\n        h: { name_plural: localize('hours'),   name_singular: localize('hour') },\n        m: { name_plural: localize('minutes'), name_singular: localize('minute') },\n        s: { name: localize('seconds') },\n    };\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n    // return empty suffix string if duration is End Time set except for days and seconds, refer to L18 and L19\n\n    if (duration_ms) {\n        if (duration_ms >= 86400000) {\n            const days_value = duration_ms / 86400000;\n            return (days_value <= 2) ? unit_map.d.name_singular : unit_map.d.name_plural;\n        } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n            if (isEndTime(duration_ms / (1000 * 60 * 60))) return '';\n            return (duration_ms === 3600000) ? unit_map.h.name_singular : unit_map.h.name_plural;\n        } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n            if (isEndTime(duration_ms / (1000 * 60))) return '';\n            return (duration_ms === 60000) ? unit_map.m.name_singular : unit_map.m.name_plural;\n        } else if (duration_ms >= 1000 && duration_ms < 60000) {\n            return unit_map.s.name;\n        }\n    }\n    return unit_map.s.name;\n};\n\nexport const getDurationPeriod = (contract_info) => (\n    getDiffDuration(\n        epochToMoment(contract_info.purchase_time || contract_info.date_start),\n        epochToMoment(contract_info.date_expiry)\n    )\n);\n\nexport const getDurationTime = (contract_info) => (\n    contract_info.tick_count ?\n        contract_info.tick_count\n        :\n        getDurationUnitValue(getDurationPeriod(contract_info))\n);\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 1024;\n","const getLanguage      = require('../language').get;\nconst localize         = require('../../App/i18n').localize;\nconst getPropertyValue = require('../utility').getPropertyValue;\n\nlet currencies_config = {};\n\nconst getTextFormat = (number, currency) => `${currency} ${addComma(number, getDecimalPlaces(currency), isCryptocurrency(currency))}`;\n\nconst formatMoney = (currency_value, amount, exclude_currency, decimals = 0, minimumFractionDigits = 0) => {\n    let money = amount;\n    if (money) money = String(money).replace(/,/g, '');\n    const sign           = money && Number(money) < 0 ? '-' : '';\n    const decimal_places = decimals || getDecimalPlaces(currency_value);\n\n    money = isNaN(money) ? 0 : Math.abs(money);\n    if (typeof Intl !== 'undefined') {\n        const options = {\n            minimumFractionDigits: minimumFractionDigits || decimal_places,\n            maximumFractionDigits: decimal_places,\n        };\n        money = new Intl.NumberFormat(getLanguage().toLowerCase().replace('_', '-'), options).format(money);\n    } else {\n        money = addComma(money, decimal_places);\n    }\n\n    return sign + (exclude_currency ? '' : formatCurrency(currency_value)) + money;\n};\n\nconst formatCurrency = currency => `<span class=\"symbols ${(currency || '').toLowerCase()}\"></span>`;\n\nconst addComma = (num, decimal_points, is_crypto) => {\n    let number = String(num || 0).replace(/,/g, '');\n    if (typeof decimal_points !== 'undefined') {\n        number = (+number).toFixed(decimal_points);\n    }\n    if (is_crypto) {\n        number = parseFloat(+number);\n    }\n\n    return number.toString().replace(/(^|[^\\w.])(\\d{4,})/g, ($0, $1, $2) => (\n        $1 + $2.replace(/\\d(?=(?:\\d\\d\\d)+(?!\\d))/g, '$&,')\n    ));\n};\n\nconst calcDecimalPlaces = (currency) => isCryptocurrency(currency) ? 8 : 2;\n\nconst getDecimalPlaces = (currency) => (\n    // need to check currencies_config[currency] exists instead of || in case of 0 value\n    currencies_config[currency] ? getPropertyValue(currencies_config, [currency, 'fractional_digits']) : calcDecimalPlaces(currency)\n);\n\nconst setCurrencies = (website_status) => {\n    currencies_config = website_status.currencies_config;\n};\n\n// (currency in crypto_config) is a back-up in case website_status doesn't include the currency config, in some cases where it's disabled\nconst isCryptocurrency = currency => /crypto/i.test(getPropertyValue(currencies_config, [currency, 'type'])) || (currency in CryptoConfig.get());\n\nconst CryptoConfig = (() => {\n    let crypto_config;\n\n    const initCryptoConfig = () => ({\n        BTC: { name: localize('Bitcoin'),       min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        BCH: { name: localize('Bitcoin Cash'),  min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        ETH: { name: localize('Ether'),         min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        ETC: { name: localize('Ether Classic'), min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        LTC: { name: localize('Litecoin'),      min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        UST: { name: localize('Tether'),        min_withdrawal: 0.02,  pa_max_withdrawal: 2000, pa_min_withdrawal: 10 },\n        USB: { name: localize('Binary Coin'),   min_withdrawal: 0.02,  pa_max_withdrawal: 2000, pa_min_withdrawal: 10 },\n    });\n\n    return {\n        get: () => {\n            if (!crypto_config) {\n                crypto_config = initCryptoConfig();\n            }\n            return crypto_config;\n        },\n    };\n})();\n\nconst getMinWithdrawal = currency => (isCryptocurrency(currency) ? (getPropertyValue(CryptoConfig.get(), [currency, 'min_withdrawal']) || 0.002) : 1);\n\n/**\n * Returns the transfer limits for the account.\n * @param currency\n * @param {string} max|undefined\n * @returns numeric|undefined\n */\nconst getTransferLimits = (currency, which) => {\n    const transfer_limits = getPropertyValue(currencies_config, [currency, 'transfer_between_accounts', 'limits']) || getMinWithdrawal(currency);\n    const decimals        = getDecimalPlaces(currency);\n    if (which === 'max') {\n        return transfer_limits.max ? transfer_limits.max.toFixed(decimals) : undefined;\n    }\n\n    return transfer_limits.min ? transfer_limits.min.toFixed(decimals) : undefined;\n};\n\nconst getTransferFee = (currency_from, currency_to) => {\n    const transfer_fee = getPropertyValue(currencies_config, [currency_from, 'transfer_between_accounts', 'fees', currency_to]);\n    return `${typeof transfer_fee === 'undefined' ? '1' : transfer_fee}%`;\n};\n\n// returns in a string format, e.g. '0.00000001'\nconst getMinimumTransferFee = (currency) => {\n    const decimals = getDecimalPlaces(currency);\n    return `${currency} ${(1 / Math.pow(10, decimals)).toFixed(decimals)}`; // we need toFixed() so that it doesn't display in scientific notation, e.g. 1e-8 for currencies with 8 decimal places\n};\n\n// @param {String} limit = max|min\nconst getPaWithdrawalLimit = (currency, limit) => {\n    if (isCryptocurrency(currency)) {\n        return getPropertyValue(CryptoConfig.get(), [currency, `pa_${limit}_withdrawal`]); // pa_min_withdrawal and pa_max_withdrawal used here\n    }\n    return limit === 'max' ? 2000 : 10; // limits for fiat currency\n};\n\nconst getCurrencyName = currency => getPropertyValue(CryptoConfig.get(), [currency, 'name']) || '';\n\nconst getMinPayout = currency => getPropertyValue(currencies_config, [currency, 'stake_default']);\n\nmodule.exports = {\n    formatMoney,\n    formatCurrency,\n    addComma,\n    getDecimalPlaces,\n    setCurrencies,\n    isCryptocurrency,\n    getCurrencyName,\n    getMinWithdrawal,\n    getTransferLimits,\n    getTransferFee,\n    getMinimumTransferFee,\n    getTextFormat,\n    getMinPayout,\n    getPaWithdrawalLimit,\n    getCurrencies: () => currencies_config,\n};\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport { Link }   from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to, onClick }) => (\n    <Link\n        className={classNames('btn btn--link', className, 'effect')}\n        to={to}\n        onClick={onClick}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import classNames                  from 'classnames';\nimport React                       from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Icon                        from 'Assets/icon.jsx';\nimport routes                      from 'Constants/routes';\n\nclass VerticalTabContentContainer extends React.PureComponent {\n    render() {\n        const {\n            action_bar,\n            action_bar_classname,\n            is_routed,\n            items,\n            selected,\n        } = this.props;\n        const selected_item = items.find(item => item.label === selected.label);\n        const TabContent    = selected_item.value;\n\n        return (\n            <div className='vertical-tab__content'>\n                { action_bar &&\n                    <div className={classNames('vertical-tab__action-bar', {\n                        [action_bar_classname]: !!action_bar_classname,\n                    })}\n                    >\n                        {\n                            action_bar.map(({ component, icon, onClick, title }) => {\n                                const Component = component;\n                                return (\n                                    component ?\n                                        <Component key={title} />\n                                        :\n                                        <div\n                                            className='vertical-tab__action-bar-wrapper'\n                                            key={title}\n                                            onClick={onClick}\n                                        >\n                                            <Icon\n                                                className='vertical-tab__action-bar--icon'\n                                                icon={icon}\n                                            />\n                                        </div>\n                                );\n                            })\n                        }\n                    </div>\n                }\n                { is_routed ?\n                    <Switch>\n                        <Redirect exact from={routes.reports} to={routes.positions} />\n                        {\n                            items.map(({ value, path, icon }) => {\n                                const Component = value;\n                                return (\n                                    <Route\n                                        key={path}\n                                        path={path}\n                                        render={() => <Component component_icon={icon} />}\n                                    />\n                                );\n                            })\n                        }\n                    </Switch>\n                    :\n                    <TabContent\n                        key={selected_item.label}\n                        className='item-id'\n                    />\n                }\n            </div>\n        );\n    }\n}\n\nexport { VerticalTabContentContainer };\n","import classNames  from 'classnames';\nimport React       from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Icon        from 'Assets/icon.jsx';\n\nclass VerticalTabHeaders extends React.PureComponent {\n    render() {\n        return (\n            <div className='vertical-tab__tab'>\n                {this.props.header_title &&\n                    <div className='vertical-tab__header-title'>\n                        <p>{ this.props.header_title }</p>\n                    </div>\n                }\n\n                {this.props.items.map(item => {\n                    // Capitalize only the first letter of the label and make the rest lowercase\n                    const label = item.label.charAt(0).toUpperCase() + item.label.slice(1).toLowerCase();\n\n                    return (\n                        this.props.is_routed ?\n                            <NavLink\n                                key={item.path}\n                                to={item.path}\n                                onClick={() => this.props.onChange(item)}\n                                className='vertical-tab__header'\n                                activeClassName={\n                                    classNames({\n                                        'vertical-tab__header--active': this.props.selected.label === item.label,\n                                    })\n                                }\n                            >\n                                <Icon\n                                    icon={item.icon}\n                                    className={classNames('vertical-tab__header__icon', {\n                                        'vertical-tab__header__icon--active': this.props.selected.label === item.label,\n                                    })}\n                                />\n                                <span className='vertical-tab__header__link'>{label}</span>\n                            </NavLink>\n                            :\n                            <div\n                                className={\n                                    classNames('vertical-tab__header', {\n                                        'vertical-tab__header--active': this.props.selected.label === item.label,\n                                    })\n                                }\n                                key={item.label}\n                                onClick={() => this.props.onChange(item)}\n                            >\n                                <Icon\n                                    icon={item.icon}\n                                    className={classNames('vertical-tab__header__icon', {\n                                        'vertical-tab__header__icon--active': this.props.selected.label === item.label,\n                                    })}\n                                />\n                                <a\n                                    key={item.label}\n                                    className='vertical-tab__header__link'\n                                >\n                                    {label}\n                                </a>\n                            </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport { VerticalTabHeaders };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Icon       from 'Assets/icon.jsx';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children, wrapperClassName } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('deriv_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('deriv_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <Icon icon='IconClose' className='fullscreen-dialog__close-btn-icon' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className={`fullscreen-dialog__${wrapperClassName || 'contracts-modal-list'}`}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children        : PropTypes.any,\n    onClose         : PropTypes.func,\n    title           : PropTypes.string,\n    visible         : PropTypes.bool,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default FullScreenDialog;\n","import { action, flow }     from 'mobx';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { localize }         from 'App/i18n';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws-methods';\n\nlet client_store,\n    common_store,\n    gtm_store;\n\n// TODO: update commented statements to the corresponding functions from app\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    // is_populating_account_list is a check to avoid logout on the first logged-in session\n                    // In any other case, if the response loginid does not match the store's loginid, user must be logged out\n                    if (response.authorize.loginid !== client_store.loginid &&\n                        !client_store.is_populating_account_list) {\n                        requestLogout();\n                    } else if (response.authorize.loginid === client_store.loginid) {\n                        // All other cases continue with the loginid and authorize the profile\n                        authorizeAccount(response);\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    gtm_store.eventHandler(response.get_settings);\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                gtm_store.pushTransactionData(response);\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: localize('You have reached the rate limit of requests per second. Please try later.') });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n        gtm_store    = store.gtm;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    const authorizeAccount = (response) => {\n        client_store.responseAuthorize(response);\n        WS.subscribeBalance(ResponseHandlers.balance, true);\n        WS.sendRequest({ get_settings: 1 }, { forced: true });\n        WS.getAccountStatus();\n        WS.payoutCurrencies();\n        WS.mt5LoginList();\n        setResidence(\n            response.authorize.country ||\n            client_store.accounts[client_store.loginid].residence\n        );\n        if (!client_store.is_virtual) {\n            WS.getSelfExclusion();\n        }\n        BinarySocket.sendBuffered();\n        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n            // showPopup({\n            //     url        : urlFor('user/warning'),\n            //     popup_id   : 'warning_popup',\n            //     form_id    : '#frm_warning',\n            //     content_id : '#warning_content',\n            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n            // });\n        }\n    };\n\n    return {\n        init,\n        setBalance,\n        authorizeAccount,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            client_store.setWebsiteStatus(response);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import PropTypes      from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect }    from 'Stores/connect';\nimport routes         from '../../../Constants/routes';\n\nconst Redirect = ({\n    history,\n    setCashierActiveTab,\n    setVerificationCode,\n    toggleAccountSignupModal,\n    toggleCashierModal,\n}) => {\n    const url_params = new URLSearchParams(window.location.search);\n\n    setVerificationCode(url_params.get('code'));\n\n    switch (url_params.get('action')) {\n        case 'signup': {\n            toggleAccountSignupModal(true);\n            break;\n        }\n        case 'payment_withdraw': {\n            setCashierActiveTab('withdraw');\n            toggleCashierModal();\n            break;\n        }\n        default: break;\n    }\n\n    // Clear URL search params and route to root (currently set to `trade`)\n    window.history.replaceState({}, document.title, '/');\n    history.push(routes.root);\n\n    return null;\n};\n\nRedirect.propTypes = {\n    history                 : PropTypes.object,\n    setVerificationCode     : PropTypes.func,\n    toggleAccountSignupModal: PropTypes.func,\n    toggleCashierModal      : PropTypes.func,\n};\n\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        setCashierActiveTab     : ui.setCashierActiveTab,\n        setVerificationCode     : client.setVerificationCode,\n        toggleAccountSignupModal: ui.toggleAccountSignupModal,\n        toggleCashierModal      : ui.toggleCashierModal,\n    }),\n)(Redirect));\n","import React        from 'react';\nimport { localize } from 'App/i18n';\nimport Icon         from 'Assets/icon.jsx';\n\nconst EmptyPortfolioMessage = ({ error }) => (\n    <div className='portfolio-empty'>\n        <div className='portfolio-empty__wrapper'>\n            { error ?\n                <span className='portfolio-empty__text'>{error}</span>\n                :\n                <React.Fragment>\n                    <Icon icon='IconPositions' className='portfolio-empty__icon' />\n                    <span className='portfolio-empty__text'>{localize('No open positions')}</span>\n                </React.Fragment>\n            }\n        </div>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nconst ContractLink = ({\n    contract_id,\n    children,\n    className,\n    openContract,\n}) => (\n    <a\n        className={className}\n        onClick={() => openContract(contract_id, true)}\n    >\n        {children}\n    </a>\n);\n\nContractLink.propTypes = {\n    children   : PropTypes.node,\n    className  : PropTypes.string,\n    contract_id: PropTypes.number,\n    onMount    : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        openContract: modules.contract_trade.onMount,\n    }),\n)(ContractLink);\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" {...props}><g fill=\"none\" fillRule=\"evenodd\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4BBFAB\" /><path fill=\"#FFF\" fillRule=\"nonzero\" d=\"M6.5 10.8l5.65-5.65a.5.5 0 0 1 .7.7l-6 6a.5.5 0 0 1-.7 0l-3-3a.5.5 0 1 1 .7-.7l2.65 2.64z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" {...props}><g fill=\"none\" fillRule=\"evenodd\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#E31C4B\" fillRule=\"nonzero\" /><path stroke=\"#FFF\" strokeLinecap=\"round\" d=\"M10.5 5.5l-5 5m5 0l-5-5\" /></g></svg>);","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { NavLink }         from 'react-router-dom';\nimport { getContractPath } from 'App/Components/Routes/helpers';\nimport IconCheck           from 'Assets/SvgComponents/portfolio/ic-check.svg';\nimport IconCross           from 'Assets/SvgComponents/portfolio/ic-cross.svg';\nimport { localize }        from 'App/i18n';\n\nclass ResultOverlay extends React.PureComponent {\n\n    handleClick = (e) => {\n        if (this.props.is_unsupported) {\n            e.preventDefault();\n            this.props.onClick();\n        }\n    }\n\n    render() {\n        const {\n            contract_id,\n            is_visible,\n            onClickRemove,\n            result } = this.props;\n        const is_contract_won = (result === 'won');\n        return (\n            <React.Fragment>\n                <CSSTransition\n                    in={is_visible}\n                    timeout={250}\n                    classNames={{\n                        enter    : 'positions-drawer-card__result--enter',\n                        enterDone: 'positions-drawer-card__result--enter-done',\n                        exit     : 'positions-drawer-card__result--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div className={classNames('positions-drawer-card__result', {\n                        'positions-drawer-card__result--won' : is_contract_won,\n                        'positions-drawer-card__result--lost': !is_contract_won,\n                    })}\n                    >\n                        <span\n                            className='result__close-btn'\n                            onClick={() => onClickRemove(contract_id)}\n                        />\n                        <NavLink\n                            className='result__caption-wrapper'\n                            to={getContractPath(contract_id)}\n                            onClick={this.handleClick}\n                        >\n                            <span\n                                className={classNames('result__caption', {\n                                    'result__caption--won' : is_contract_won,\n                                    'result__caption--lost': !is_contract_won,\n                                }\n                                )}\n                            >\n                                {\n                                    (is_contract_won) ?\n                                        <React.Fragment>\n                                            {localize('won')}\n                                            <IconCheck className='result__icon' />\n                                        </React.Fragment>\n                                        :\n                                        <React.Fragment>\n                                            {localize('lost')}\n                                            <IconCross className='result__icon' />\n                                        </React.Fragment>\n                                }\n                            </span>\n                        </NavLink>\n                    </div>\n                </CSSTransition>\n            </React.Fragment>\n        );\n    }\n}\n\nResultOverlay.propTypes = {\n    contract_id              : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    has_same_contract_mounted: PropTypes.bool,\n    is_unsupported           : PropTypes.bool,\n    is_visible               : PropTypes.bool,\n    onClick                  : PropTypes.func,\n    onClickRemove            : PropTypes.func,\n    result                   : PropTypes.string,\n};\n\nexport default ResultOverlay;\n","import classNames              from 'classnames';\nimport PropTypes               from 'prop-types';\nimport React                   from 'react';\nimport { CSSTransition }       from 'react-transition-group';\nimport Button                  from 'deriv-components/lib/button';\nimport ContractLink            from 'Modules/Contract/Containers/contract-link.jsx';\nimport Shortcode               from 'Modules/Reports/Helpers/shortcode';\nimport { isCryptocurrency }    from '_common/base/currency_base';\nimport { localize }            from 'App/i18n';\nimport Icon                    from 'Assets/icon.jsx';\nimport Money                   from 'App/Components/Elements/money.jsx';\nimport { UnderlyingIcon }      from 'App/Components/Elements/underlying-icon.jsx';\nimport { PositionsCardLoader } from 'App/Components/Elements/ContentLoader';\nimport ContractTypeCell        from './contract-type-cell.jsx';\nimport ProgressSlider          from './ProgressSlider';\nimport ResultOverlay           from './result-overlay.jsx';\n\nconst PositionsDrawerCard = ({\n    active_position,\n    className,\n    contract_info,\n    currency,\n    current_tick,\n    indicative,\n    id,\n    is_dark_theme,\n    is_loading,\n    is_sell_requested,\n    is_unsupported,\n    is_valid_to_sell,\n    profit_loss,\n    onClickSell,\n    onClickRemove,\n    result,\n    sell_price,\n    status,\n    toggleUnsupportedContractModal,\n    type,\n}) => {\n    const loader_el = (\n        <div className='positions-drawer-card__content-loader'>\n            <PositionsCardLoader\n                is_dark_theme={is_dark_theme}\n                speed={2}\n            />\n        </div>\n    );\n    const fallback_result = (profit_loss < 0) ? 'lost' : 'won';\n    const contract_el = (\n        <React.Fragment>\n            <div className={classNames(\n                'positions-drawer-card__grid',\n                'positions-drawer-card__grid-underlying-trade'\n            )}\n            >\n                <div className='positions-drawer-card__underlying-name'>\n                    <UnderlyingIcon market={contract_info.underlying} />\n                    <span className='positions-drawer-card__symbol'>\n                        {contract_info.display_name}\n                    </span>\n                </div>\n                <div className='positions-drawer-card__type'>\n                    <ContractTypeCell\n                        type={type}\n                        is_high_low={Shortcode.isHighLow({ shortcode: contract_info.shortcode })}\n                    />\n                </div>\n            </div>\n            {(result || !!(contract_info.is_sold)) ?\n                <div className='progress-slider--completed' />\n                :\n                <ProgressSlider\n                    is_loading={is_loading}\n                    start_time={contract_info.date_start}\n                    expiry_time={contract_info.date_expiry}\n                    current_tick={current_tick}\n                    ticks_count={contract_info.tick_count}\n                />\n            }\n            <div className={classNames(\n                'positions-drawer-card__grid',\n                'positions-drawer-card__grid-profit-payout'\n            )}\n            >\n                <div className={classNames(\n                    'positions-drawer-card__profit-loss',\n                    'positions-drawer-card__profit-loss-label',\n                )}\n                >\n                    {result ? localize('Profit/Loss:') : localize('Potential profit/loss:')}\n                </div>\n                <div className={classNames(\n                    'positions-drawer-card__indicative',\n                    'positions-drawer-card__indicative-label',\n                )}\n                >\n                    {!result ? localize('Indicative price:') : localize('Payout:')}\n                </div>\n                <div className={classNames(\n                    'positions-drawer-card__profit-loss', {\n                        'positions-drawer-card__profit-loss--is-crypto': isCryptocurrency(currency),\n                        'positions-drawer-card__profit-loss--negative' : (profit_loss < 0),\n                        'positions-drawer-card__profit-loss--positive' : (profit_loss > 0),\n                    })}\n                >\n                    <Money amount={Math.abs(profit_loss)} currency={currency} />\n                    <div className={classNames(\n                        'positions-drawer-card__indicative--movement', {\n                            'positions-drawer-card__indicative--movement-complete': !!result,\n                        },\n                    )}\n                    >\n                        <Icon\n                            icon='IconPriceMove'\n                            type={(status !== 'complete') ? status : null}\n                        />\n                    </div>\n                </div>\n                <div className='positions-drawer-card__indicative'>\n                    <Money amount={sell_price || indicative} currency={currency} />\n                    <div className={classNames(\n                        'positions-drawer-card__indicative--movement', {\n                            'positions-drawer-card__indicative--movement-complete': !!result,\n                        },\n                    )}\n                    >\n                        <Icon\n                            icon='IconPriceMove'\n                            type={(status !== 'complete') ? status : null}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className={classNames(\n                'positions-drawer-card__grid',\n                'positions-drawer-card__grid-price-payout',\n            )}\n            >\n                <div className='positions-drawer-card__purchase-price'>\n                    <span className='positions-drawer-card__purchase-label'>\n                        {localize('Purchase price:')}\n                    </span>\n                    <span className='positions-drawer-card__purchase-value'>\n                        <Money amount={contract_info.buy_price} currency={currency} />\n                    </span>\n                </div>\n                <div className='positions-drawer-card__payout-price'>\n                    <span className='positions-drawer-card__payout-label'>\n                        {localize('Potential payout:')}\n                    </span>\n                    <span className='positions-drawer-card__payout-value'>\n                        {contract_info.payout ?\n                            <Money amount={contract_info.payout} currency={currency} />\n                            :\n                            <strong>-</strong>\n                        }\n                    </span>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n\n    return (\n        <div className={classNames(\n            'positions-drawer-card__wrapper', {\n                'positions-drawer-card__wrapper--active': (parseInt(active_position) === id),\n            },\n            className)}\n        >\n            <ResultOverlay\n                contract_id={id}\n                is_unsupported={is_unsupported}\n                is_visible={!!(contract_info.is_sold)}\n                has_same_contract_mounted={id === parseInt(active_position)}\n                onClickRemove={onClickRemove}\n                onClick={() => toggleUnsupportedContractModal(true)}\n                result={(result || fallback_result)}\n            />\n            {is_unsupported ?\n                <div\n                    className={classNames(\n                        'positions-drawer-card', {\n                            'positions-drawer-card--active': (parseInt(active_position) === id),\n                            'positions-drawer-card--green' : (profit_loss > 0) && !result,\n                            'positions-drawer-card--red'   : (profit_loss < 0) && !result,\n                        }\n                    )}\n                    onClick={() => toggleUnsupportedContractModal(true)}\n                >\n                    {contract_info.underlying ? contract_el : loader_el}\n                </div>\n                :\n                <ContractLink\n                    className={classNames(\n                        'positions-drawer-card', {\n                            'positions-drawer-card--active': (parseInt(active_position) === id),\n                            'positions-drawer-card--green' : (profit_loss > 0) && !result,\n                            'positions-drawer-card--red'   : (profit_loss < 0) && !result,\n                        }\n                    )}\n                    contract_id={id}\n                >\n                    {contract_info.underlying ? contract_el : loader_el}\n                </ContractLink>\n            }\n            <CSSTransition\n                in={!!(is_valid_to_sell)}\n                timeout={250}\n                classNames={{\n                    enter    : 'positions-drawer-card__sell-button--enter',\n                    enterDone: 'positions-drawer-card__sell-button--enter-done',\n                    exit     : 'positions-drawer-card__sell-button--exit',\n                }}\n                unmountOnExit\n            >\n                <div className='positions-drawer-card__sell-button'>\n                    <Button\n                        className={classNames(\n                            'btn--primary',\n                            'btn--primary--green',\n                            'btn--sell', {\n                                'btn--loading': is_sell_requested,\n                            })}\n                        is_disabled={!is_valid_to_sell || is_sell_requested}\n                        text={localize('Sell contract')}\n                        onClick={() => onClickSell(id)}\n                    />\n                </div>\n            </CSSTransition>\n        </div>\n    );\n};\n\nPositionsDrawerCard.propTypes = {\n    active_position: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className                     : PropTypes.string,\n    contract_info                 : PropTypes.object,\n    currency                      : PropTypes.string,\n    current_tick                  : PropTypes.number,\n    duration                      : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    duration_unit                 : PropTypes.string,\n    exit_spot                     : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    id                            : PropTypes.number,\n    indicative                    : PropTypes.number,\n    is_dark_theme                 : PropTypes.bool,\n    is_loading                    : PropTypes.bool,\n    is_sell_requested             : PropTypes.bool,\n    is_unsupported                : PropTypes.bool,\n    is_valid_to_sell              : PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClickRemove                 : PropTypes.func,\n    onClickSell                   : PropTypes.func,\n    profit_loss                   : PropTypes.number,\n    result                        : PropTypes.string,\n    sell_time                     : PropTypes.number,\n    status                        : PropTypes.string,\n    toggleUnsupportedContractModal: PropTypes.func,\n    type                          : PropTypes.string,\n};\n\nexport default PositionsDrawerCard;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { NavLink }                    from 'react-router-dom';\nimport { TransitionGroup,\n    CSSTransition }                   from 'react-transition-group';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport { localize }                   from 'App/i18n';\nimport Icon                           from 'Assets/icon.jsx';\nimport routes                         from 'Constants/routes';\nimport EmptyPortfolioMessage          from 'Modules/Reports/Components/empty-portfolio-message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PositionsDrawerCard            from './positions-drawer-card.jsx';\n\nclass PositionsDrawer extends React.Component {\n    componentDidMount()    {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const {\n            all_positions,\n            active_contract_id,\n            error,\n            currency,\n            is_contract_mode,\n            is_dark_theme,\n            is_empty,\n            is_positions_drawer_on,\n            onClickSell,\n            onClickRemove,\n            openContract,\n            toggleDrawer,\n            toggleUnsupportedContractModal,\n        } = this.props;\n\n        // Show only 5 most recent open contracts\n        const body_content = (\n            <React.Fragment>\n                <TransitionGroup component='div'>\n                    {all_positions.slice(0, 5).map((portfolio_position) => (\n                        <CSSTransition\n                            appear\n                            key={portfolio_position.id}\n                            in={true}\n                            timeout={150}\n                            classNames={{\n                                appear   : 'positions-drawer-card__wrapper--enter',\n                                enter    : 'positions-drawer-card__wrapper--enter',\n                                enterDone: 'positions-drawer-card__wrapper--enter-done',\n                                exit     : 'positions-drawer-card__wrapper--exit',\n                            }}\n                            unmountOnExit\n                        >\n                            <PositionsDrawerCard\n                                active_position={active_contract_id}\n                                is_dark_theme={is_dark_theme}\n                                onClickSell={onClickSell}\n                                onClickRemove={onClickRemove}\n                                openContract={openContract}\n                                key={portfolio_position.id}\n                                currency={currency}\n                                toggleUnsupportedContractModal={toggleUnsupportedContractModal}\n                                {...portfolio_position}\n                            />\n                        </CSSTransition>\n                    ))}\n                </TransitionGroup>\n            </React.Fragment>\n        );\n\n        return (\n            <div className={classNames(\n                'positions-drawer', {\n                    'positions-drawer--open'         : is_positions_drawer_on,\n                    'positions-drawer--contract-mode': is_contract_mode,\n                })}\n            >\n                <div className='positions-drawer__header'>\n                    <span className='positions-drawer__title'>{localize('Recent Positions')}</span>\n                    <div\n                        className='positions-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <Icon icon='IconMinimize' />\n                    </div>\n                </div>\n                <div className='positions-drawer__body'>\n                    <Scrollbars\n                        style={{ width: '100%', height: '100%' }}\n                        autoHide\n                    >\n                        {(is_empty || error) ? <EmptyPortfolioMessage error={error} />  : body_content}\n                    </Scrollbars>\n                </div>\n                <div className='positions-drawer__footer'>\n                    <NavLink className='btn btn--link btn--alternate' to={routes.reports}>\n                        <span className='btn__text'>\n                            {localize('Go to Reports')}\n                        </span>\n                    </NavLink>\n                </div>\n            </div>\n        );\n    }\n}\n\nPositionsDrawer.propTypes = {\n    active_contract_id    : PropTypes.number,\n    all_positions         : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_contract_mode      : PropTypes.bool,\n    is_dark_theme         : PropTypes.bool,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    onClickRemove         : PropTypes.func,\n    onClickSell           : PropTypes.func,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    openContract          : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        currency                      : client.currency,\n        active_contract_id            : modules.contract_trade.contract_id,\n        all_positions                 : modules.portfolio.all_positions,\n        error                         : modules.portfolio.error,\n        is_contract_mode              : modules.smart_chart.is_contract_mode,\n        is_empty                      : modules.portfolio.is_empty,\n        is_loading                    : modules.portfolio.is_loading,\n        onClickSell                   : modules.portfolio.onClickSell,\n        onClickRemove                 : modules.portfolio.removePositionById,\n        openContract                  : modules.contract_trade.onMount,\n        onMount                       : modules.portfolio.onMount,\n        onUnmount                     : modules.portfolio.onUnmount,\n        is_dark_theme                 : ui.is_dark_mode_on,\n        is_positions_drawer_on        : ui.is_positions_drawer_on,\n        toggleDrawer                  : ui.togglePositionsDrawer,\n        toggleUnsupportedContractModal: ui.toggleUnsupportedContractModal,\n    })\n)(PositionsDrawer);\n","import React        from 'react';\nimport Button       from 'deriv-components/lib/button';\nimport { localize } from 'App/i18n';\nimport Localize     from './localize.jsx';\n\nconst toggleFade = ({ node, opacity, direction, color }) => {\n    const sub_or_add = direction === -1 && opacity > 0.1 ? -1 : 1;\n    let reduction = 0.05;\n    if (opacity < 0.3 && opacity > 0.1) {\n        reduction = 0.01;\n    }\n    const new_opacity = parseFloat(Number(opacity + (sub_or_add * reduction)).toFixed(2));\n\n    node.style.backgroundColor = color.replace(`${opacity})`, `${Number(new_opacity).toFixed(2)})`);\n\n    const stopId = requestAnimationFrame(toggleFade.bind(this,\n        {\n            node,\n            opacity  : new_opacity,\n            direction: sub_or_add,\n            color    : node.style.backgroundColor,\n        },\n    ));\n    if (new_opacity >= 1) {\n        cancelAnimationFrame(stopId);\n        // Set the initial value to follow CSS\n        node.querySelectorAll('div')\n            .forEach(element => {\n                element.style.backgroundColor = '';\n            });\n        node.style.backgroundColor = '';\n    }\n};\n\nconst startAnimation = (node) => {\n    const children_background_color = getComputedStyle(node.firstElementChild).getPropertyValue('background-color');\n    const converted_rgba = children_background_color.startsWith('rgba') ?\n        children_background_color :\n        `rgba(${children_background_color\n            .replace('rgb(', '')\n            .replace(')', '')\n            .split(', ')\n            .join(',')},1)`;\n\n    // Set initial value for individual rows\n    node.querySelectorAll('div')\n        .forEach(element => {\n            element.style.backgroundColor = 'transparent';\n        });\n    node.style.backgroundColor = converted_rgba; // compensate for removal background of individual rows\n\n    const direction            = -1; // lower the opacity\n    requestAnimationFrame(toggleFade.bind(this,\n        {\n            node,\n            opacity: 1,\n            direction,\n            color  : converted_rgba,\n        },\n    ));\n};\n\n/**\n * Handle animation for dropdown, this is imperative, with DOM manipulation.\n */\nconst onClick = () => {\n    const dropdown = document.querySelector('.cq-menu-dropdown');\n    if (dropdown.classList.contains('open')) return;\n    document.querySelector('.cq-symbol-select-btn').click();\n    const left_panel = document.querySelector('.cq-filter-panel');\n    left_panel.querySelector('.ic-volidx').parentNode.click();\n\n    const node = document\n        .querySelector('.category-volidx')\n        .querySelector('.category-content');\n    setTimeout(startAnimation.bind(this, node), 600);\n};\n\nconst MarketIsClosedOverlay = () => (\n    <div className='market-is-closed-overlay'>\n        <p><Localize i18n_default_text='Market is closed.' /></p>\n        <p><Localize i18n_default_text='Try Volatility Indices which simulate real-world market volatility and are open 24/7.' /></p>\n        <Button\n            className='market-is-closed-overlay__button'\n            classNameSpan='market-is-closed-overlay__button--span'\n            onClick={onClick}\n            text={localize('Try Volatility Indices')}\n        />\n    </div>\n);\n\nexport default MarketIsClosedOverlay;\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui-loader.jsx';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport ContractType from '../../Containers/contract-type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade-params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_market_closed, is_trade_enabled }) => (\n    <div className={classNames('sidebar__items', {\n        'sidebar__items--is-disabled'  : is_contract_visible,\n        'sidebar__items--market-closed': is_market_closed,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <Fieldset className='trade-container__fieldset trade-types'>\n                    <ContractType />\n                </Fieldset>\n                <TradeParams />\n                <div className='purchase-container'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_market_closed   : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport Lazy        from 'App/Containers/Lazy';\nimport ScreenLarge from './screen-large.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_market_closed,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <Lazy\n            ctor={() => import(/* webpackChunkName: \"screen-small\" */'./screen-small.jsx')}\n            should_load={is_mobile}\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n            is_market_closed={is_market_closed}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_market_closed   : PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport ChartLoader           from 'App/Components/Elements/chart-loader.jsx';\nimport UILoader              from 'App/Components/Elements/ui-loader.jsx';\nimport { connect }           from 'Stores/connect';\nimport PositionsDrawer       from 'App/Components/Elements/PositionsDrawer';\nimport MarketIsClosedOverlay from 'App/Components/Elements/market-is-closed-overlay.jsx';\nimport Lazy                  from 'App/Containers/Lazy';\nimport Test                  from './test.jsx';\nimport FormLayout            from '../Components/Form/form-layout.jsx';\nimport { isDigitTradeType }  from '../Helpers/digits';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.showPositions();\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.hidePositions();\n        if (this.props.is_contract_mode) {\n            this.props.onCloseContract();\n        }\n        this.props.onUnmount();\n    }\n\n    render() {\n        const form_wrapper_class           = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar__container desktop-only';\n        const should_show_bottom_widgets   = this.props.is_digit_contract && this.props.is_contract_mode;\n        const should_show_last_digit_stats = isDigitTradeType(this.props.contract_type) && !this.props.is_contract_mode;\n        const is_chart_visible             = (this.props.is_chart_loading || !this.props.is_chart_ready);\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <PositionsDrawer />\n                <div className='chart-container'>\n                    <Lazy\n                        ctor={() => import(/* webpackChunkName: \"notification-messages\" */'App/Containers/notification-messages.jsx')}\n                        has_progress={false}\n                        should_load={true}\n                    />\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <ChartLoader is_visible={is_chart_visible} />\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                chart_type={this.props.chart_type}\n                                Digits={\n                                    <Lazy\n                                        ctor={() => import(/* webpackChunkName: \"digits\", webpackPrefetch: true */'Modules/Contract/Components/Digits')}\n                                        should_load={this.props.is_digit_contract}\n                                        is_trade_page\n                                        contract_info={this.props.contract_info}\n                                        digits_info={this.props.digits_info}\n                                        display_status={this.props.display_status}\n                                        is_digit_contract={this.props.is_digit_contract}\n                                        is_ended={this.props.is_ended}\n                                    />\n                                }\n                                InfoBox={\n                                    <Lazy\n                                        ctor={() => import(/* webpackChunkName: \"info-box\", webpackPrefetch: true */'Modules/Contract/Components/InfoBox')}\n                                        should_load={true}\n                                        has_progress={false}\n                                        is_trade_page\n                                        contract_info={this.props.contract_info}\n                                        error_message={this.props.error_message}\n                                        is_contract_mode={this.props.is_contract_mode}\n                                        removeError={this.props.removeError}\n                                        onClose={this.props.onCloseContract}\n                                    />\n                                }\n                                end_epoch={this.props.end_epoch}\n                                granularity={this.props.granularity}\n                                is_trade_page\n                                is_static_chart={this.props.is_static_chart}\n                                onSymbolChange={this.props.onSymbolChange}\n                                scroll_to_epoch={this.props.scroll_to_epoch}\n                                start_epoch={this.props.start_epoch}\n                                should_show_bottom_widgets={should_show_bottom_widgets}\n                                should_show_last_digit_stats={should_show_last_digit_stats}\n                                symbol={this.props.symbol}\n                            />\n                        </React.Suspense>\n                    }\n                    {/* Remove Test component for debugging below for production release */}\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                    onClick={this.props.is_contract_mode ? () => {\n                        this.props.onCloseContract();\n                    } : null}\n                    style={{ cursor: this.props.is_contract_mode ? 'pointer' : 'initial' }}\n                >\n                    { this.props.is_market_closed && <MarketIsClosedOverlay />}\n                    <FormLayout\n                        is_contract_visible={this.props.is_contract_mode}\n                        is_market_closed={this.props.is_market_closed}\n                        is_mobile={this.props.is_mobile}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id         : PropTypes.string,\n    chart_type       : PropTypes.string,\n    contract_info    : PropTypes.object,\n    contract_type    : PropTypes.string,\n    digits_info      : PropTypes.object,\n    display_status   : PropTypes.string,\n    end_epoch        : PropTypes.number,\n    granularity      : PropTypes.number,\n    hidePositions    : PropTypes.func,\n    is_chart_loading : PropTypes.bool,\n    is_chart_ready   : PropTypes.bool,\n    is_contract_mode : PropTypes.bool,\n    is_digit_contract: PropTypes.bool,\n    is_ended         : PropTypes.bool,\n    is_market_closed : PropTypes.bool,\n    is_mobile        : PropTypes.bool,\n    is_static_chart  : PropTypes.bool,\n    is_trade_enabled : PropTypes.bool,\n    onCloseContract  : PropTypes.func,\n    onMount          : PropTypes.func,\n    onSymbolChange   : PropTypes.func,\n    onUnmount        : PropTypes.func,\n    purchase_info    : PropTypes.object,\n    scroll_to_epoch  : PropTypes.number,\n    showPositions    : PropTypes.func,\n    start_epoch      : PropTypes.number,\n    symbol           : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_info                      : modules.contract_trade.contract_info,\n        digits_info                        : modules.contract_trade.digits_info,\n        display_status                     : modules.contract_trade.display_status,\n        error_message                      : modules.contract_trade.error_message,\n        is_ended                           : modules.contract_trade.is_ended,\n        is_digit_contract                  : modules.contract_trade.is_digit_contract,\n        onCloseContract                    : modules.contract_trade.onCloseContract,\n        removeError                        : modules.contract_trade.removeErrorMessage,\n        chart_id                           : modules.smart_chart.chart_id,\n        chart_type                         : modules.smart_chart.chart_type,\n        scroll_to_epoch                    : modules.smart_chart.scroll_to_left_epoch,\n        granularity                        : modules.smart_chart.granularity,\n        end_epoch                          : modules.smart_chart.end_epoch,\n        start_epoch                        : modules.smart_chart.start_epoch,\n        is_chart_loading                   : modules.smart_chart.is_chart_loading,\n        is_chart_ready                     : modules.smart_chart.is_chart_ready,\n        is_contract_mode                   : modules.smart_chart.is_contract_mode,\n        is_static_chart                    : modules.smart_chart.is_static_chart,\n        contract_type                      : modules.trade.contract_type,\n        is_market_closed                   : modules.trade.is_market_closed,\n        is_trade_enabled                   : modules.trade.is_trade_enabled,\n        onMount                            : modules.trade.onMount,\n        onSymbolChange                     : modules.trade.onChange,\n        onUnmount                          : modules.trade.onUnmount,\n        purchase_info                      : modules.trade.purchase_info,\n        symbol                             : modules.trade.symbol,\n        hidePositions                      : ui.hidePositionsFooterToggle,\n        showPositions                      : ui.showPositionsFooterToggle,\n        has_only_forward_starting_contracts: ui.has_only_forward_starting_contracts,\n        is_mobile                          : ui.is_mobile,\n        setHasOnlyForwardingContracts      : ui.setHasOnlyForwardingContracts,\n    })\n)(Trade);\n","import { lazy }                       from 'react';\nimport { Redirect as RouterRedirect } from 'react-router-dom';\nimport { Redirect }                   from 'App/Containers/Redirect';\nimport { localize }                   from 'App/i18n';\nimport { routes }                     from 'Constants';\n\nimport Trade from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\n\n// Reports Routes\nconst Reports       = lazy(() => import(/* webpackChunkName: \"reports\" */        'Modules/Reports'));\nconst OpenPositions = lazy(() => import(/* webpackChunkName: \"open_positions\" */ 'Modules/Reports/Containers/open-positions.jsx'));\nconst ProfitTable   = lazy(() => import(/* webpackChunkName: \"profit_table\" */   'Modules/Reports/Containers/profit-table.jsx'));\nconst Statement     = lazy(() => import(/* webpackChunkName: \"statement\" */      'Modules/Reports/Containers/statement.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: RouterRedirect,  title: '',                            to: routes.trade },\n    {\n        path            : routes.reports,\n        component       : Reports,\n        is_authenticated: true,\n        title           : localize('Reports'),\n        routes          : [\n            { path: routes.positions, component: OpenPositions, title: localize('Open Positions'), icon_component: 'IconOpenPositions', default: true },\n            { path: routes.profit,    component: ProfitTable,   title: localize('Profit Table'),   icon_component: 'IconProfitTable' },\n            { path: routes.statement, component: Statement,     title: localize('Statement'),      icon_component: 'IconStatement' },\n        ],\n    },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),    exact: true },\n    { path: routes.error404,  component: Page404,         title: localize('Error 404') },\n    { path: routes.redirect,  component: Redirect,        title: localize('Redirect') },\n]);\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n    }\n    routesConfig.push(route_default);\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ active_class, to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName={active_class || 'active'} exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    active_class: PropTypes.string,\n    children    : PropTypes.object,\n    to          : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { urlFor }   from '_common/url';\nimport PageError    from 'Modules/PageError';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    onLogin,\n    onSignup,\n    page_title,\n}) => (\n    <PageError\n        header={\n            <Localize\n                i18n_default_text='{{page_title}} page is only<0 />available for existing clients.'\n                values={{ page_title: page_title || 'This' }}\n                components={[ <br key={0} /> ]}\n            />\n        }\n        messages={[\n            <Localize\n                key={0}\n                i18n_default_text='If you have an active account, please <0>Log in</0> for full access. Otherwise, please <1>Sign up</1> to start trading.'\n                components={[\n                    <a key={0} className='link' onClick={onLogin} />,\n                    <a key={1} className='link' onClick={onSignup} />,\n                ]}\n            />,\n        ]}\n    />\n);\n\nLoginPrompt.propTypes = {\n    onLogin   : PropTypes.func,\n    onSignup  : PropTypes.func,\n    page_title: PropTypes.string,\n};\n\n// TODO - Remove this default setting once sign-up has been integrated to app 2\nLoginPrompt.defaultProps = {\n    onSignup: () => { window.open(urlFor('new-account', undefined, undefined, true)); },\n};\n\nexport default LoginPrompt;\n\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport BinarySocket        from '_common/base/socket_base';\nimport Language            from '_common/language';\nimport routes              from 'Constants/routes';\nimport { connect }         from 'Stores/connect';\nimport LoginPrompt         from '../Elements/login-prompt.jsx';\nimport { default_title }   from '../../Constants/app-config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt onLogin={redirectToLogin} page_title={route.title} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        Language.setCookie();\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        BinarySocket.wait('website_status').then(() => {\n            route.pushDataLayer({ event: 'page_load' });\n        });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport { RouteWithSubRoutes as RouteWithSubRoutesRender }; // For tests\n\nexport default connect(({ gtm }) => ({\n    pushDataLayer: gtm.pushDataLayer,\n}))(RouteWithSubRoutes);\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes-config';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<div />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ButtonLink   from 'App/Components/Routes/button-link.jsx';\nimport Localize     from 'App/Components/Elements/localize.jsx';\n\nconst PageError = ({\n    buttonOnClick,\n    error_code,\n    messages,\n    header,\n    redirect_label,\n    redirect_url,\n}) => (\n    <div className='page-error__container'>\n        <div className='page-error__box'>\n            <h3 className='page-error__header'>\n                {header}\n            </h3>\n            <div className='page-error__message-wrapper'>\n                <span className='page-error__message'>\n                    { messages.map((message, index) => (\n                        message.has_html ?\n                            <p key={index} dangerouslySetInnerHTML={{ __html: message.message }} />\n                            :\n                            <p key={index}>{ message }</p>\n                    ))}\n                    { error_code &&\n                    <React.Fragment>\n                        <br />\n                        <p className='page-error__code'><Localize i18n_default_text={'Error Code: {{error_code}}'} values={{ error_code }} /></p>\n                    </React.Fragment>\n                    }\n                </span>\n            </div>\n            { redirect_label &&\n            <ButtonLink\n                className='page-error__btn btn--primary btn--primary--orange'\n                to={redirect_url}\n                onClick={buttonOnClick}\n            >\n                <span className='page-error__btn-text btn__text'>\n                    {redirect_label}\n                </span>\n            </ButtonLink>\n            }\n        </div>\n    </div>\n);\n\nPageError.propTypes = {\n    buttonOnClick : PropTypes.func,\n    error_code    : PropTypes.number,\n    header        : PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    messages      : PropTypes.array,\n    redirect_label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    redirect_url  : PropTypes.string,\n};\n\nexport default PageError;\n","const digitTypesMap = [ 'even_odd', 'match_diff', 'over_under' ];\n\nexport const isDigitTradeType = (contract_type) => digitTypesMap.includes(contract_type);\n","const Shortcode = (() => {\n    const extractInfoFromShortcode = (shortcode) => {\n        const info_from_shortcode = {\n            category  : '',\n            underlying: '',\n            barrier_1 : '',\n        };\n\n        const pattern = new RegExp('^([A-Z]+)_((OTC_[A-Z0-9]+)|R_[\\\\d]{2,3}|[A-Z]+)'); // Used to get market name from shortcode\n        const extracted = pattern.exec(shortcode);\n        if (extracted !== null) {\n            info_from_shortcode.category   = extracted[1].toLowerCase();\n            info_from_shortcode.underlying = extracted[2];\n\n            if (/^(CALL|PUT)$/i.test(info_from_shortcode.category)) {\n                info_from_shortcode.barrier_1 = shortcode.split('_').slice(-2)[0];\n            }\n        }\n\n        return info_from_shortcode;\n    };\n\n    const isHighLow = ({ shortcode = '', shortcode_info = '' }) => {\n        const info_from_shortcode = shortcode ? extractInfoFromShortcode(shortcode) : shortcode_info;\n        return (info_from_shortcode && info_from_shortcode.barrier_1) ? !/^S0P$/.test(info_from_shortcode.barrier_1) : false;\n    };\n\n    return {\n        extractInfoFromShortcode,\n        isHighLow,\n    };\n})();\n\nmodule.exports = Shortcode;\n","export const website_domain = 'Deriv.app';\nexport const website_name   = 'Deriv';\nexport const default_title  = website_name;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport Icon              from 'Assets/icon.jsx';\n\nclass Tooltip extends React.PureComponent {\n    state = {\n        show_tooltip_balloon_icon: false,\n    }\n\n    onMouseEnter = () => {\n        this.setState({ show_tooltip_balloon_icon: true });\n    }\n\n    onMouseLeave = () => {\n        this.setState({ show_tooltip_balloon_icon: false });\n    }\n\n    render() {\n        const {\n            alignment,\n            children,\n            className,\n            classNameIcon,\n            has_error,\n            icon, // only question or info accepted\n            message,\n        } = this.props;\n\n        const icon_class = classNames(classNameIcon, icon);\n        return (\n            <span\n                className={classNames(className, 'tooltip', { 'tooltip--error': has_error })}\n                data-tooltip={message || undefined}\n                data-tooltip-pos={alignment}\n            >\n                {icon === 'info' &&\n                    <React.Fragment>\n                        <Icon\n                            icon='IconInfoOutline'\n                            className={icon_class}\n                            onMouseEnter={this.onMouseEnter}\n                            onMouseLeave={this.onMouseLeave}\n                        />\n                        <Icon\n                            icon='IconInfoBlue'\n                            className={classNames(`${classNameIcon}-balloon-icon`, 'tooltip__balloon-icon', {\n                                'tooltip__balloon-icon--show': this.state.show_tooltip_balloon_icon,\n                            })}\n                        />\n                    </React.Fragment>\n                }\n                {icon === 'question' && <Icon icon='IconQuestion' className={icon_class} />}\n                {icon === 'dot'      && <Icon icon='IconRedDot' className={icon_class} />}\n                {children}\n            </span>\n        );\n    }\n}\n\nTooltip.propTypes = {\n    alignment    : PropTypes.string,\n    children     : PropTypes.node,\n    className    : PropTypes.string,\n    classNameIcon: PropTypes.string,\n    has_error    : PropTypes.bool,\n    icon         : PropTypes.string,\n    message      : PropTypes.string,\n};\n\nexport default Tooltip;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Button    from 'deriv-components/lib/button';\nimport Icon      from 'Assets/icon.jsx';\n\nconst IncrementButtons = ({\n    decrementValue,\n    incrementValue,\n    max_is_disabled,\n    min_is_disabled,\n}) => (\n    <React.Fragment>\n        <Button\n            className={'input-wrapper__button input-wrapper__button--increment'}\n            is_disabled={max_is_disabled}\n            onClick={incrementValue}\n            tabIndex='-1'\n        >\n            <Icon icon='IconPlus' className={'input-wrapper__icon input-wrapper__icon--plus' } is_disabled={max_is_disabled} />\n        </Button>\n        <Button\n            className={'input-wrapper__button input-wrapper__button--decrement'}\n            is_disabled={min_is_disabled}\n            onClick={decrementValue}\n            tabIndex='-1'\n        >\n            <Icon icon='IconMinus' className={'input-wrapper__icon input-wrapper__icon--minus'} is_disabled={min_is_disabled} />\n        </Button>\n    </React.Fragment>\n);\n\nIncrementButtons.propTypes = {\n    decrementValue : PropTypes.func,\n    incrementValue : PropTypes.func,\n    max_is_disabled: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    min_is_disabled: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n};\n\nexport default IncrementButtons;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst Input = ({\n    changeValue,\n    checked,\n    className,\n    classNameInlinePrefix,\n    data_value,\n    data_tip,\n    display_value,\n    fractional_digits,\n    id,\n    inline_prefix,\n    is_autocomplete_disabled,\n    is_disabled,\n    is_hj_whitelisted,\n    is_incrementable,\n    is_read_only,\n    max_length,\n    name,\n    onClick,\n    onKeyPressed,\n    placeholder,\n    required,\n    type,\n}) => {\n    const onChange = (e) => {\n        /**\n         * fix for Safari\n         * we have to keep track of the current cursor position, update the value in store,\n         * then reset the cursor position to the current cursor position\n         */\n        // TODO: find better ways to target browsers\n        if (navigator.userAgent.indexOf('Safari') !== -1 && type !== 'checkbox') {\n            const cursor = e.target.selectionStart;\n            changeValue(e, (evt) => {\n                evt.target.selectionEnd = cursor; // reset the cursor position in callback\n            });\n        } else {\n            changeValue(e);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            {!!inline_prefix &&\n            <div className={classNameInlinePrefix}>\n                <span className={classNames(classNameInlinePrefix ? `${classNameInlinePrefix}--symbol` : '', 'symbols', `symbols--${inline_prefix.toLowerCase()}`)} />\n            </div>\n            }\n            <input\n                autoComplete={is_autocomplete_disabled ? 'off' : undefined}\n                checked={checked}\n                className={classNames(className)}\n                data-for={`error_tooltip_${name}`}\n                data-hj-whitelist={is_hj_whitelisted}\n                data-tip={data_tip}\n                data-value={data_value}\n                disabled={is_disabled}\n                id={id}\n                maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n                name={name}\n                onChange={onChange}\n                onClick={onClick}\n                onKeyDown={is_incrementable ? onKeyPressed : undefined}\n                placeholder={placeholder || undefined}\n                readOnly={is_read_only}\n                required={required || undefined}\n                type={type === 'number' ? 'text' : type}\n                value={display_value || ''}\n            />\n        </React.Fragment>\n    );\n};\n\nInput.propTypes = {\n    changeValue: PropTypes.func,\n    checked    : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className            : PropTypes.string,\n    classNameInlinePrefix: PropTypes.string,\n    data_tip             : PropTypes.string,\n    data_value           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    display_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    fractional_digits       : PropTypes.number,\n    id                      : PropTypes.string,\n    inline_prefix           : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_hj_whitelisted       : PropTypes.bool,\n    is_incrementable        : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onClick                 : PropTypes.func,\n    onKeyPressed            : PropTypes.func,\n    placeholder             : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Input;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { isCryptocurrency }      from '_common/base/currency_base';\nimport Tooltip                   from 'App/Components/Elements/tooltip.jsx';\nimport IncrementButtons          from './increment-buttons.jsx';\nimport Input                     from './input.jsx';\n\nclass InputField extends React.Component {\n    render () {\n        const {\n            checked,\n            className,\n            classNameInlinePrefix,\n            classNameInput,\n            classNamePrefix,\n            currency,\n            data_tip,\n            data_value,\n            error_messages,\n            fractional_digits,\n            helper,\n            id,\n            inline_prefix,\n            is_autocomplete_disabled,\n            is_disabled,\n            is_float,\n            is_hj_whitelisted = false,\n            is_incrementable,\n            is_negative_disabled,\n            is_read_only = false,\n            is_signed = false,\n            is_unit_at_right = false,\n            label,\n            max_length,\n            max_value,\n            min_value,\n            name,\n            onChange,\n            onClick,\n            placeholder,\n            prefix,\n            required,\n            type,\n            unit,\n            value,\n        } = this.props;\n        const Icon = this.props.icon;\n        const has_error       = error_messages && !!error_messages.length;\n        let has_valid_length  = true;\n        const max_is_disabled = max_value && +value >= +max_value;\n        const min_is_disabled = min_value && +value <= +min_value;\n\n        const changeValue = (e, callback) => {\n            if (unit) {\n                e.target.value = e.target.value.replace(unit, '').trim();\n            }\n\n            if (e.target.value === value && type !== 'checkbox') {\n                return;\n            }\n\n            if (type === 'number' || type === 'tel') {\n                const is_empty = !e.target.value || e.target.value === '' || e.target.value === '  ';\n                const signed_regex = is_signed ? '^([+-.0-9])' : '^';\n\n                const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                    .test(e.target.value);\n\n                const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                    .test(e.target.value);\n                // This regex check whether there is any zero at the end of fractional part or not.\n                const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                    .test(e.target.value);\n\n                const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n                if (max_length && fractional_digits) {\n                    has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                        .test(e.target.value);\n                }\n\n                if (((is_number) || is_empty) && has_valid_length) {\n                    e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation || type === 'tel'\n                        ? e.target.value\n                        : +e.target.value;\n                } else if (!is_not_completed_number) {\n                    e.target.value = value;\n                    return;\n                }\n            }\n\n            onChange(e);\n            if (callback) {\n                callback(e);\n            }\n        };\n\n        const getDecimals = (val) => {\n            const array_value = typeof val === 'string' ? val.split('.') : val.toString().split('.');\n            return array_value && array_value.length > 1 ? array_value[1].length : 0;\n        };\n\n        const incrementValue = () => {\n            if (max_is_disabled) return;\n            let increment_value;\n\n            const decimal_places = value ? getDecimals(value) : 0;\n            const is_crypto      = !!currency && isCryptocurrency(currency);\n\n            if (is_crypto || (!currency && is_float)) {\n                const new_value = parseFloat(+value) + parseFloat(1 * 10 ** (0 - decimal_places));\n                increment_value = parseFloat(new_value).toFixed(decimal_places);\n            } else {\n                increment_value = parseFloat((+value) + 1).toFixed(decimal_places);\n            }\n            onChange({ target: { value: increment_value, name } });\n        };\n\n        const calculateDecrementedValue = () => {\n            let decrement_value;\n\n            const decimal_places = value ? getDecimals(value) : 0;\n            const is_crypto      = !!currency && isCryptocurrency(currency);\n\n            if (is_crypto || (!currency && is_float)) {\n                const new_value = parseFloat(+value) - parseFloat(1 * 10 ** (0 - decimal_places));\n                decrement_value = parseFloat(new_value).toFixed(decimal_places);\n            } else {\n                decrement_value = parseFloat((+value) - 1).toFixed(decimal_places);\n            }\n            return decrement_value;\n        };\n\n        const decrementValue = () => {\n            if (!value || min_is_disabled) return;\n            const decrement_value = calculateDecrementedValue();\n            if (is_negative_disabled && decrement_value < 0) return;\n            onChange({ target: { value: decrement_value, name } });\n        };\n\n        const onKeyPressed = (e) => {\n            if (e.keyCode === 38) incrementValue(); // up-arrow pressed\n            if (e.keyCode === 40) decrementValue(); // down-arrow pressed\n        };\n\n        let display_value = value;\n\n        if (unit) {\n            display_value = is_unit_at_right ? `${value} ${unit}` : `${unit} ${value}`;\n        }\n\n        const is_increment_input = is_incrementable && (type === 'number' || type === 'tel');\n\n        const input =\n            <Input\n                changeValue={changeValue}\n                checked={checked}\n                className={classNames(is_increment_input ? 'input-wrapper__input' : '', inline_prefix ? 'input--has-inline-prefix' : '', 'input', { 'input--error': has_error }, classNameInput)}\n                classNameInlinePrefix={classNameInlinePrefix}\n                data_tip={data_tip}\n                data_value={data_value}\n                display_value={display_value}\n                fractional_digits={fractional_digits}\n                has_error={has_error}\n                id={id}\n                inline_prefix={inline_prefix}\n                is_autocomplete_disabled={is_autocomplete_disabled}\n                is_disabled={is_disabled}\n                is_hj_whitelisted={is_hj_whitelisted}\n                is_incrementable={is_increment_input}\n                is_read_only={is_read_only}\n                max_length={max_length}\n                name={name}\n                onClick={onClick}\n                onKeyPressed={onKeyPressed}\n                placeholder={placeholder}\n                required={required}\n                type={type}\n            />;\n\n        const increment_buttons =\n            <IncrementButtons\n                max_is_disabled={max_is_disabled}\n                incrementValue={incrementValue}\n                min_is_disabled={min_is_disabled || (is_negative_disabled && calculateDecrementedValue() < 0)}\n                decrementValue={decrementValue}\n            />;\n\n        const input_tooltip =\n            <Tooltip\n                className={classNames('', { 'tooltip--with-label': label })}\n                alignment='left'\n                message={has_error ? error_messages[0] : null}\n                has_error={has_error}\n            >\n                {!!label &&\n                <label htmlFor={name} className='input-field__label'>{label}</label>\n                }\n                {!!helper &&\n                <span className='input-field__helper'>{helper}</span>\n                }\n                {is_increment_input ?\n                    <div className='input-wrapper'>\n                        {increment_buttons}\n                        {input}\n                    </div>\n                    :\n                    input\n                }\n            </Tooltip>;\n\n        return (\n            <React.Fragment>\n                {!!prefix &&\n                <div className={classNamePrefix}>\n                    <span className={classNames(`${classNamePrefix}--symbol`, 'symbols', `symbols--${prefix.toLowerCase()}`)} />\n                </div>\n                }\n                <div\n                    className={classNames('input-field', className)}\n                >\n                    {this.props.icon &&\n                    <Icon onClick={onClick} />\n                    }\n                    {input_tooltip}\n                </div>\n            </React.Fragment>\n        );\n\n    }\n}\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    checked: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className            : PropTypes.string,\n    classNameInlinePrefix: PropTypes.string,\n    classNameInput       : PropTypes.string,\n    classNamePrefix      : PropTypes.string,\n    currency             : PropTypes.string,\n    error_messages       : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits    : PropTypes.number,\n    helper               : PropTypes.string,\n    icon                 : PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.node,\n    ]),\n    id                      : PropTypes.string,\n    inline_prefix           : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_float                : PropTypes.bool,\n    is_hj_whitelisted       : PropTypes.bool,\n    is_incrementable        : PropTypes.bool,\n    is_negative_disabled    : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    is_signed               : PropTypes.bool,\n    is_unit_at_right        : PropTypes.bool,\n    label                   : PropTypes.string,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onChange                : PropTypes.func,\n    onClick                 : PropTypes.func,\n    placeholder             : PropTypes.string,\n    prefix                  : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    unit                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import classNames                      from 'classnames';\nimport PropTypes                       from 'prop-types';\nimport React                           from 'react';\nimport { VerticalTabContentContainer } from './vertical-tab-content-container.jsx';\nimport { VerticalTabHeaders }          from './vertical-tab-headers.jsx';\n\nclass VerticalTab extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        if (props.is_routed) {\n            const applicable_routes = props.list.filter(item => (\n                item.path === props.current_path || item.default\n            ));\n            const selected = applicable_routes.length > 1\n                ? applicable_routes[applicable_routes.length - 1]\n                : applicable_routes[0];\n\n            this.state = {\n                selected,\n            };\n        } else {\n            this.state = {\n                selected: props.list[props.selected_index || 0],\n            };\n        }\n    }\n\n    changeSelected = (e) => {\n        this.setState({\n            selected: e,\n        });\n    };\n\n    render() {\n        return (\n            <div\n                className={classNames('vertical-tab', {\n                    'vertical-tab--full-screen': this.props.is_full_width,\n                })}\n            >\n                <VerticalTabHeaders\n                    items={this.props.list}\n                    onChange={this.changeSelected}\n                    selected={this.state.selected}\n                    is_routed={this.props.is_routed}\n                    header_title={this.props.header_title}\n                />\n                <VerticalTabContentContainer\n                    action_bar={this.props.action_bar}\n                    action_bar_classname={this.props.action_bar_classname}\n                    items={this.props.list}\n                    selected={this.state.selected}\n                    is_routed={this.props.is_routed}\n                />\n            </div>\n        );\n    }\n}\n\nVerticalTab.propTypes = {\n    action_bar: PropTypes.arrayOf(\n        PropTypes.shape({\n            component: PropTypes.func,\n            icon     : PropTypes.string,\n            onClick  : PropTypes.func,\n            title    : PropTypes.string,\n        })\n    ),\n    action_bar_classname: PropTypes.string,\n    current_path        : PropTypes.string,\n    header_title        : PropTypes.string,\n    is_full_width       : PropTypes.bool,\n    is_routed           : PropTypes.bool,\n    list                : PropTypes.arrayOf(\n        PropTypes.shape({\n            default: PropTypes.bool,\n            icon   : PropTypes.string,\n            label  : PropTypes.string,\n            path   : PropTypes.string,\n            value  : PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n        })\n    ).isRequired,\n    selected_index: PropTypes.number,\n};\n\nexport default VerticalTab;\n","import classNames from 'classnames';\nimport React      from 'react';\n\nconst UnderlyingIcon = ({ market }) => (\n    <div\n        className={classNames(\n            'icons-underlying',\n            `icons-underlying__ic-${market ? market.toUpperCase() : 'unknown'}`\n        )}\n    />\n);\n\nexport { UnderlyingIcon };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from 'App/Components/Elements/localize.jsx';\n\nconst ProgressTicks = ({\n    current_tick,\n    ticks_count,\n}) => {\n    const arr_ticks   = [...Array(ticks_count).keys()];\n    return (\n        <div className='progress-slider__ticks'>\n            <span className='progress-slider__ticks-caption'>\n                <Localize i18n_default_text='Tick {{current_tick}}' values={{ current_tick: current_tick.toString() }} />\n            </span>\n            <div className='progress-slider__ticks-wrapper'>\n                {arr_ticks.map(idx =>\n                    <div\n                        key={idx}\n                        className={classNames('progress-slider__ticks-step', {\n                            'progress-slider__ticks-step--marked': (idx + 1) <= parseInt(current_tick),\n                        })}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n\nProgressTicks.propTypes = {\n    current_tick: PropTypes.number,\n    ticks_count : PropTypes.number,\n};\n\nexport default ProgressTicks;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { connect }           from 'Stores/connect';\nimport ProgressTicks         from './positions-progress-ticks.jsx';\nimport { getTimePercentage } from '../helpers';\nimport RemainingTime         from '../../../../Containers/remaining-time.jsx';\n\nconst ProgressSlider = ({\n    className,\n    current_tick,\n    is_loading,\n    start_time,\n    expiry_time,\n    server_time,\n    ticks_count,\n}) => {\n    const percentage = getTimePercentage(server_time, start_time, expiry_time);\n    return (\n        <div className={classNames('progress-slider', className)}>\n            {(ticks_count) ?\n                <ProgressTicks\n                    current_tick={current_tick}\n                    ticks_count={ticks_count}\n                />\n                :\n                <React.Fragment>\n                    <span className='positions-drawer-card__remaining-time'>\n                        <RemainingTime end_time={expiry_time} />\n                    </span>\n                    {(is_loading || (percentage < 1)) ?\n                        <div className='progress-slider__infinite-loader'>\n                            <div className='progress-slider__infinite-loader--indeterminate' />\n                        </div>\n                        :\n                        /* Calculate line width based on percentage of time left */\n                        <div className='progress-slider__track'>\n                            <div\n                                className={classNames('progress-slider__line', {\n                                    'progress-slider__line--green' : (percentage >= 50),\n                                    'progress-slider__line--orange': (percentage < 50 && percentage >= 20),\n                                    'progress-slider__line--red'   : (percentage < 20),\n                                })}\n                                style={{ width: `${percentage}%` }}\n                            />\n                        </div>\n                    }\n                </React.Fragment>\n            }\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nProgressSlider.propTypes = {\n    className   : PropTypes.string,\n    current_tick: PropTypes.number,\n    expiry_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_loading : PropTypes.bool,\n    server_time: PropTypes.object,\n    start_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    ticks_count: PropTypes.number,\n};\n\nexport default connect(({ common }) => ({\n    server_time: common.server_time,\n}))(ProgressSlider);\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { Trans }        from 'react-i18next';\n\nconst Localize = ({ i18n_default_text, values, components }) => (\n    <Trans defaults={i18n_default_text} values={values} components={components} />\n);\n\nLocalize.propTypes = {\n    components       : PropTypes.arrayOf(PropTypes.node),\n    i18n_default_text: PropTypes.string,\n    values           : PropTypes.object,\n};\n\nexport default Localize;\n","import moment            from 'moment';\nimport { isEmptyObject } from '_common/utility';\nimport ServerTime        from '_common/base/server_time';\n\nexport const getChartConfig = (\n    contract_info,\n    is_digit_contract,\n    is_from_purchase,\n) => {\n    if (isEmptyObject(contract_info)) return null;\n    const start       = contract_info.date_start;\n    const end         = getEndTime(contract_info);\n    const granularity = getChartGranularity(start, end || null);\n    const chart_type  = getChartType(start, end || null);\n\n    return {\n        chart_type                : contract_info.tick_count ? 'mountain' : chart_type,\n        granularity               : contract_info.tick_count ? 0 : granularity,\n        end_epoch                 : end,\n        start_epoch               : !is_from_purchase ? start : null,\n        scroll_to_epoch           : contract_info.purchase_time,\n        should_show_bottom_widgets: is_digit_contract,\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\n\nconst getExpiryTime = (time) => time || ServerTime.get().unix();\n\nexport const getChartType = (start_time, expiry_time) => {\n    const duration = moment.duration(moment.unix(getExpiryTime(expiry_time)).diff(moment.unix(start_time))).asHours();\n    // use line chart if duration is equal or less than 1 hour\n    return (duration <= 1) ? 'mountain' : 'candle';\n};\n\nexport const getChartGranularity = (start_time, expiry_time) =>\n    calculateGranularity(getExpiryTime(expiry_time) - start_time);\n\nexport const calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const getLastTickFromTickStream = (tick_stream = []) => (\n    tick_stream[tick_stream.length - 1] || {}\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n\nexport const getEndTime = (contract_info) => {\n    const {\n        exit_tick_time,\n        date_expiry,\n        is_expired,\n        is_path_dependent,\n        sell_time,\n        status,\n        tick_count: is_tick_contract,\n    } = contract_info;\n\n    const is_finished = is_expired && (status !== 'open');\n\n    if (!is_finished && !isUserSold(contract_info)) return undefined;\n\n    if (isUserSold(contract_info)) {\n        return (sell_time > date_expiry) ?\n            date_expiry : sell_time;\n    } else if (!is_tick_contract && (sell_time > date_expiry)) {\n        return date_expiry;\n    }\n\n    return (date_expiry > exit_tick_time && !(+is_path_dependent)) ? date_expiry : exit_tick_time;\n};\n","const Cookies          = require('js-cookie');\nconst getPropertyValue = require('./utility').getPropertyValue;\nconst isEmptyObject    = require('./utility').isEmptyObject;\nconst isProduction     = require('../config').isProduction;\n\nconst getObject = function (key) {\n    return JSON.parse(this.getItem(key) || '{}');\n};\n\nconst setObject = function (key, value) {\n    if (value && value instanceof Object) {\n        try {\n            this.setItem(key, JSON.stringify(value));\n        } catch (e) { /* do nothing */ }\n    }\n};\n\nif (typeof Storage !== 'undefined') {\n    Storage.prototype.getObject = getObject;\n    Storage.prototype.setObject = setObject;\n}\n\nconst isStorageSupported = (storage) => {\n    if (typeof storage === 'undefined') {\n        return false;\n    }\n\n    const test_key = 'test';\n    try {\n        storage.setItem(test_key, '1');\n        storage.removeItem(test_key);\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\n\nconst Store = function (storage) {\n    this.storage           = storage;\n    this.storage.getObject = getObject;\n    this.storage.setObject = setObject;\n};\n\nStore.prototype = {\n    get(key) {\n        return this.storage.getItem(key) || undefined;\n    },\n    set(key, value) {\n        if (typeof value !== 'undefined') {\n            this.storage.setItem(key, value);\n        }\n    },\n    getObject(key) {\n        return typeof this.storage.getObject === 'function' // Prevent runtime error in IE\n            ? this.storage.getObject(key)\n            : JSON.parse(this.storage.getItem(key) || '{}');\n    },\n    setObject(key, value) {\n        if (typeof this.storage.setObject === 'function') { // Prevent runtime error in IE\n            this.storage.setObject(key, value);\n        } else {\n            this.storage.setItem(key, JSON.stringify(value));\n        }\n    },\n    remove(key) { this.storage.removeItem(key); },\n    clear()     { this.storage.clear(); },\n};\n\nconst InScriptStore = function (object) {\n    this.store = typeof object !== 'undefined' ? object : {};\n};\n\nInScriptStore.prototype = {\n    get(key) {\n        return getPropertyValue(this.store, key);\n    },\n    set(k, value, obj = this.store) {\n        let key = k;\n        if (!Array.isArray(key)) key = [key];\n        if (key.length > 1) {\n            if (!(key[0] in obj) || isEmptyObject(obj[key[0]])) obj[key[0]] = {};\n            this.set(key.slice(1), value, obj[key[0]]);\n        } else {\n            obj[key[0]] = value;\n        }\n    },\n    getObject(key) {\n        return JSON.parse(this.get(key) || '{}');\n    },\n    setObject(key, value) {\n        this.set(key, JSON.stringify(value));\n    },\n    remove(...keys) {\n        keys.forEach((key) => { delete this.store[key]; });\n    },\n    clear()   { this.store = {}; },\n    has(key)  { return this.get(key) !== undefined; },\n    keys()    { return Object.keys(this.store); },\n    call(key) { if (typeof this.get(key) === 'function') this.get(key)(); },\n};\n\nconst State     = new InScriptStore();\nState.prototype = InScriptStore.prototype;\n/**\n * Shorthand function to get values from response object of State\n *\n * @param {String} pathname\n *     e.g. getResponse('authorize.currency') == get(['response', 'authorize', 'authorize', 'currency'])\n */\nState.prototype.getResponse = function (pathname) {\n    let path = pathname;\n    if (typeof path === 'string') {\n        const keys = path.split('.');\n        path = ['response', keys[0]].concat(keys);\n    }\n    return this.get(path);\n};\nState.set('response', {});\n\nconst CookieStorage = function (cookie_name, cookie_domain) {\n    const hostname = window.location.hostname;\n\n    this.initialized = false;\n    this.cookie_name = cookie_name;\n    this.domain      = cookie_domain || (isProduction() ? `.${hostname.split('.').slice(-2).join('.')}` : hostname);\n    this.path        = '/';\n    this.expires     = new Date('Thu, 1 Jan 2037 12:00:00 GMT');\n    this.value       = {};\n};\n\nCookieStorage.prototype = {\n    read() {\n        const cookie_value = Cookies.get(this.cookie_name);\n        try {\n            this.value = cookie_value ? JSON.parse(cookie_value) : {};\n        } catch (e) {\n            this.value = {};\n        }\n        this.initialized = true;\n    },\n    write(val, expireDate, isSecure) {\n        if (!this.initialized) this.read();\n        this.value = val;\n        if (expireDate) this.expires = expireDate;\n        Cookies.set(this.cookie_name, this.value, {\n            expires: this.expires,\n            path   : this.path,\n            domain : this.domain,\n            secure : !!isSecure,\n        });\n    },\n    get(key) {\n        if (!this.initialized) this.read();\n        return this.value[key];\n    },\n    set(key, val) {\n        if (!this.initialized) this.read();\n        this.value[key] = val;\n        Cookies.set(this.cookie_name, this.value, {\n            expires: new Date(this.expires),\n            path   : this.path,\n            domain : this.domain,\n        });\n    },\n    remove() {\n        Cookies.remove(this.cookie_name, {\n            path  : this.path,\n            domain: this.domain,\n        });\n    },\n};\n\nconst removeCookies = (...cookie_names) => {\n    const domains = [\n        `.${document.domain.split('.').slice(-2).join('.')}`,\n        `.${document.domain}`,\n    ];\n\n    let parent_path = window.location.pathname.split('/', 2)[1];\n    if (parent_path !== '') {\n        parent_path = `/${parent_path}`;\n    }\n\n    cookie_names.forEach((c) => {\n        Cookies.remove(c, { path: '/', domain: domains[0] });\n        Cookies.remove(c, { path: '/', domain: domains[1] });\n        Cookies.remove(c);\n        if (new RegExp(c).test(document.cookie) && parent_path) {\n            Cookies.remove(c, { path: parent_path, domain: domains[0] });\n            Cookies.remove(c, { path: parent_path, domain: domains[1] });\n            Cookies.remove(c, { path: parent_path });\n        }\n    });\n};\n\nlet SessionStore,\n    LocalStore;\n\nif (isStorageSupported(window.localStorage)) {\n    LocalStore = new Store(window.localStorage);\n}\nif (isStorageSupported(window.sessionStorage)) {\n    SessionStore = new Store(window.sessionStorage);\n}\n\nif (!LocalStore) {\n    LocalStore = new InScriptStore();\n}\nif (!SessionStore) {\n    SessionStore = new InScriptStore();\n}\n\nmodule.exports = {\n    isStorageSupported,\n    CookieStorage,\n    removeCookies,\n    State,\n    SessionStore,\n    LocalStore,\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import ServerTime               from '_common/base/server_time';\nimport { localize }             from 'App/i18n';\nimport {\n    cloneObject,\n    getPropertyValue }          from '_common/utility';\nimport { WS }                   from 'Services';\nimport {\n    isTimeValid,\n    minDate,\n    toMoment }                  from 'Utils/Date';\nimport { buildBarriersConfig }  from './barrier';\nimport {\n    buildDurationConfig,\n    hasIntradayDurationUnit }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }        from './start-date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }         from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n    const trading_times          = {};\n    let has_only_forward_starting_contracts = false;\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const has_contracts = getPropertyValue(r, ['contracts_for']);\n        has_only_forward_starting_contracts = has_contracts && !r.contracts_for.available.find((contract) => contract.start_type !== 'forward');\n        if (!has_contracts || has_only_forward_starting_contracts) return;\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = isTimeValid(time) ? time.split(':') : [0, 0];\n        return toMoment(date || ServerTime.get()).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingTimes = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response = await WS.getTradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times]) {\n                                        trading_times[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times][symbol.symbol] = {\n                                        'open' : symbol.times.open,\n                                        'close': symbol.times.close,\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (duration_units_list, expiry_type) => {\n        if (duration_units_list && duration_units_list.length === 1 && duration_units_list[0].value === 't') {\n            return { expiry_type: 'duration' };\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (duration_units_list, expiry_date, expiry_type, start_date) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start  = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format('YYYY-MM-DD');\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    ) => {\n        let end_time = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (market_close_times && market_close_times.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get().isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date ? buildMoment(start_date, start_time) : ServerTime.get();\n                const end_moment   = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [{\n                    open : start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                    close: minDate(start_moment.clone().add(24, 'hour'), buildMoment(expiry_date, market_close_time)),\n                }];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes');\n                    // Set the end_time to be multiple of 5 to be equal as the SELECTED_TIME that shown to the client.\n                    end_time = setMinuteMultipleByFive(end_time).format('HH:mm');\n                }\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n        return { expiry_time: end_time };\n    };\n\n    const setMinuteMultipleByFive = (moment_obj) => (\n        moment_obj.minute((Math.ceil(moment_obj.minute() / 5) * 5))\n    );\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingTimes,\n        getContractCategories: () => ({\n            contract_types_list: available_categories,\n            has_only_forward_starting_contracts,\n        }),\n    };\n})();\n\nexport default ContractType;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Loading   from '../../../templates/_common/components/loading.jsx';\n\nconst ChartLoader = ({ is_visible }) => (\n    is_visible &&\n    <div className='chart-container__loader'>\n        <Loading theme='chart-loader' />\n    </div>\n);\n\nChartLoader.propTypes = {\n    is_visible: PropTypes.bool,\n};\n\nexport default ChartLoader;\n","import React from 'react';\n\nconst Loading = ({ is_invisible, theme, id }) => (\n    <div id={id} className={`barspinner barspinner--${ theme || 'dark'}${is_invisible ? ' invisible' : ''}`}>\n        { Array.from(new Array(5)).map((x, inx) => (\n            <div key={inx} className={`barspinner__rect barspinner__rect--${inx + 1} rect${inx + 1}`} />\n        ))}\n    </div>\n);\n\nexport default Loading;\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport Icon                       from 'Assets/icon.jsx';\n\nconst ContractTypeCell = ({ type, is_high_low }) => (\n    <div className='contract-type'>\n        <div className='contract-type__type-wrapper'>\n            <Icon\n                icon='IconTradeType'\n                type={(is_high_low) ? `${type.toLowerCase()}_barrier` : type.toLowerCase()}\n                className='category-type'\n            />\n        </div>\n        <span className='contract-type__type-label'>\n            {getContractTypeDisplay(type, is_high_low) || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Icon         from 'Assets/icon.jsx';\nimport { localize } from 'App/i18n';\n\nconst FooterIcon = (use_icon) => use_icon || 'IconCalendarToday';\n\nconst CalendarFooter = ({\n    footer,\n    has_today_btn,\n    has_range_selection,\n    duration_date,\n    is_minimum,\n    onClick,\n    use_icon,\n}) => (\n    <React.Fragment>\n        { (has_today_btn || footer || has_range_selection) &&\n            <div className='calendar__footer'>\n                { footer && <span className='calendar__text'>{footer}</span>}\n                { has_range_selection && <span className='calendar__text'>{ `${!is_minimum ? localize('Duration: ') : ''}${duration_date}` }</span> }\n                { has_today_btn &&\n                    <Icon\n                        icon={FooterIcon(use_icon)}\n                        className='calendar__icon'\n                        onClick={onClick}\n                    />\n                }\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarFooter.propTypes = {\n    duration_date      : PropTypes.string,\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    is_minimum         : PropTypes.bool,\n    onClick            : PropTypes.func,\n    use_icon           : PropTypes.string,\n};\n\nexport default CalendarFooter;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst Highlight = ({ left, width }) => {\n    const border_radius_size = '4px';\n    const left_offset        = (left < 110) ? 0 : left;\n    const width_offset       = (width < 110) ? 111 : width;\n    const highlight_style = {\n        width                    : width_offset,\n        left                     : 0,\n        transform                : `translate3d(${left_offset}px, 0, 0)`,\n        'borderTopLeftRadius'    : (left_offset === 0) ? border_radius_size : 0,\n        'borderTopRightRadius'   : (left_offset === 0) ? 0 : border_radius_size ,\n        'borderBottomLeftRadius' : (left_offset === 0) ? border_radius_size  : 0,\n        'borderBottomRightRadius': (left_offset === 0) ? 0 : border_radius_size ,\n    };\n\n    return (\n        <span style={highlight_style} className='button-menu--highlight' />\n    );\n};\n\nHighlight.propTypes = {\n    left : PropTypes.number,\n    width: PropTypes.number,\n};\n\nexport { Highlight };\n","import classnames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { Highlight } from './button-highlight.jsx';\n\nclass HighlightWrapper extends React.PureComponent {\n    state = {\n        left : 0,\n        width: 0,\n    }\n\n    componentDidMount() {\n        const active_button_el = [...this.node.getElementsByClassName('button-menu__button--active')][0];\n        if (!this.node) return;\n        this.updateHighlightPosition(active_button_el);\n    }\n\n    componentDidUpdate() {\n        const active_button_el = [...this.node.getElementsByClassName('button-menu__button--active')][0];\n        if (active_button_el) {\n            this.updateHighlightPosition(active_button_el);\n        } else if (this.state.left !== 0 || this.state.width !== 0) {\n            this.resetHighlight(); // clear highlight when active element doesn't exist\n        }\n    }\n\n    componentWillUnMount() {\n        this.resetHighlight();\n    }\n\n    onClick = (e, buttonClick) => {\n        if (!e.target) return;\n        this.updateHighlightPosition(e.target.closest('button'));\n        if (typeof buttonClick  === 'function') {\n            buttonClick();\n        }\n    };\n\n    resetHighlight = () => {\n        this.setState({\n            left : 0,\n            width: 0,\n        });\n    };\n\n    updateHighlightPosition = (el) => {\n        if (!el) return;\n        const { offsetLeft: left, offsetWidth: width } = el;\n        if (this.state.width !== width) {\n            this.setState({ width });\n        }\n        if (this.state.left !== left) {\n            this.setState({ left });\n        }\n    };\n\n    render() {\n        const { className, ...other_props } = this.props;\n        const props = {\n            className: classnames('button-menu__wrapper', className),\n            ...other_props,\n        };\n\n        return (\n            <div ref={(node) => this.node = node} {...props}>\n                {\n                    React.Children.map(this.props.children, child => (\n                        React.cloneElement(child, {\n                            onClick: (e) => this.onClick(e, child.props.onClick),\n                        })\n                    ))\n                }\n                <Highlight left={this.state.left} width={this.state.width} />\n            </div>\n        );\n    }\n}\n\nHighlightWrapper.propTypes = {\n    children : PropTypes.array,\n    className: PropTypes.string,\n    timeout  : PropTypes.number,\n};\n\nexport default HighlightWrapper;\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport Button           from 'deriv-components/lib/button';\nimport HighlightWrapper from './button-highlight-wrapper.jsx';\n\nconst ButtonToggleMenu = ({\n    buttons_arr,\n    is_animated,\n    name,\n    onChange,\n    value,\n}) => {\n    const changeValue = (selected_value) => {\n        if (value === selected_value) return;\n        onChange({ target: { value: selected_value, name } });\n    };\n    const menu = buttons_arr.map((val, idx) => {\n        const className = classNames('button-menu__button', {\n            'button-menu__button--active': val.value === value,\n        });\n        return (\n            <Button\n                key={idx}\n                text={`${val.text.charAt(0).toUpperCase()}${val.text.slice(1)}`}\n                onClick={() => changeValue(val.value)}\n                className={className}\n            />\n        );\n    });\n    return (\n        <div className='button-menu'>\n            {is_animated ?\n                <HighlightWrapper>\n                    {menu}\n                </HighlightWrapper>\n                :\n                <React.Fragment>\n                    {menu}\n                </React.Fragment>\n            }\n        </div>\n    );\n};\n\nButtonToggleMenu.propTypes = {\n    buttons_arr: PropTypes.array,\n    is_animated: PropTypes.bool,\n    name       : PropTypes.string,\n    onChange   : PropTypes.func,\n    value      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default ButtonToggleMenu;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { Popover }         from 'App/Components/Elements/Popover';\nimport { getCurrencyName } from '_common/base/currency_base';\n\nconst Items = ({\n    index,\n    handleSelect,\n    has_symbol,\n    items,\n    name,\n    value,\n}) =>  items.map((item, idx) => {\n    const symbol_type_class_name = item.text ? `symbols--${(item.text).toLowerCase()}` : '';\n    return (\n        <div\n            className={classNames(\n                'list__item',\n                { 'list__item--highlighted': idx === index },\n                { 'list__item--selected': value === item.value },\n                { 'list__item--disabled': item.disabled }\n            )}\n            name={name}\n            value={item.value}\n            onClick={item.disabled ? null : handleSelect.bind(null, item)}\n            key={idx}\n        >\n            {!!has_symbol && item.has_tooltip &&\n                <Popover\n                    alignment='left'\n                    message={getCurrencyName(item.value)}\n                >\n                    <span\n                        className={classNames(\n                            'symbols',\n                            'list__item-symbol',\n                            symbol_type_class_name\n                        )}\n                    />\n                </Popover>\n            }\n\n            {!!has_symbol && !item.has_tooltip &&\n                <span\n                    className={classNames(\n                        'symbols',\n                        'list__item-text',\n                        symbol_type_class_name,\n                    )}\n                />\n            }\n\n            {!has_symbol &&\n                <span className='list__item-text'>{item.text}</span>\n            }\n        </div>\n    );\n});\n\nItems.propTypes = {\n    handleSelect: PropTypes.func,\n    has_symbol  : PropTypes.bool,\n    name        : PropTypes.string,\n    value       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Items;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst NativeSelect = ({\n    name,\n    list,\n    value,\n    onChange,\n}) => (\n    <div className='native-select native-select__wrapper'>\n        <select className='select native-select__select' name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default NativeSelect;\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import classNames        from 'classnames';\nimport { isArrayLike }   from 'mobx';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Scrollbars }    from 'tt-react-custom-scrollbars';\nimport Icon              from 'Assets/icon.jsx';\nimport Items             from './items.jsx';\nimport NativeSelect      from './native-select.jsx';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex }       from './helpers';\n\nclass Dropdown extends React.PureComponent {\n    list_ref = React.createRef();\n    state = {\n        curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        is_list_visible: false,\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    setWrapperRef = (node) => this.wrapper_ref = node;\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n        }\n    }\n\n    handleVisibility = () => {\n        this.setState((state) =>({  is_list_visible: !state.is_list_visible }));\n    }\n\n    onKeyPressed = (event) => {\n        if (this.is_single_option) return;\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                } else if (!this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 37: // Left arrow is pressed\n                if (!this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 39: // Right Arrow is pressed\n                if (this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <NativeSelect\n                    name={this.props.name}\n                    value={this.props.value}\n                    list={this.props.list}\n                    onChange={this.props.onChange}\n                />\n            );\n        }\n\n        // we are calculating the offset for the dropdown list based on it's width here\n        const left_alignment_style = {\n            transform: `translate3d(calc(-${this.state.list_width}px - 12px), 0, 0px)`,\n        };\n\n        // upon render via css transition group, we use this as a callback to set the width of the dropdown list in the state\n        const setListWidth = () => this.setState({ list_width: this.list_ref.current.offsetWidth });\n\n        const is_single_option = isArrayLike(this.props.list) ?\n            !!(this.props.list.length < 2)\n            :\n            !!(Object.keys(this.props.list).length < 2);\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={classNames('dropdown-container', this.props.className, {\n                    'dropdown--left'    : this.props.is_alignment_left,\n                    'dropdown--show'    : this.state.is_list_visible,\n                    'dropdown--disabled': is_single_option,\n                })}\n            >\n                <div\n                    className={classNames('dropdown__display', this.props.classNameDisplay, {\n                        'dropdown__display--clicked'   : this.state.is_list_visible,\n                        'dropdown__display--has-symbol': this.props.has_symbol,\n                    })}\n                    tabIndex={is_single_option ? '-1' : '0'}\n                    onClick={this.handleVisibility}\n                    onKeyDown={this.onKeyPressed}\n                >\n                    {this.props.has_symbol &&\n                    <span name={this.props.name} value={this.props.value} className={`symbols dropdown__display-symbol symbols--${(this.props.value || '').toLowerCase()}`} />\n                    }\n                    {!this.props.has_symbol &&\n                    <span name={this.props.name} value={this.props.value} className='dropdown__display-text'>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                    }\n                </div>\n                {\n                    !is_single_option && <Icon\n                        icon='IconArrow'\n                        className={classNames('dropdown__select-arrow', {\n                            'dropdown__select-arrow--left': this.props.is_alignment_left,\n                        })}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `dropdown__list--enter ${this.props.is_alignment_left ? 'dropdown__list--left--enter' : ''}`,\n                        enterDone: `dropdown__list--enter-done ${this.props.is_alignment_left ? 'dropdown__list--left--enter-done' : ''}`,\n                        exit     : `dropdown__list--exit ${this.props.is_alignment_left ? 'dropdown__list--left--exit' : ''}`,\n                    }}\n                    onEntered={setListWidth}\n                    unmountOnExit\n                >\n                    <div className={classNames('dropdown__list', {\n                        'dropdown__list--left': this.props.is_alignment_left,\n                    })}\n                    >\n                        <div\n                            className={classNames('list', {\n                                'list--left': this.props.is_alignment_left,\n                            })}\n                            ref={this.list_ref}\n                            style={this.props.is_alignment_left ? left_alignment_style : undefined}\n                        >\n                            <Scrollbars\n                                autoHeight\n                                autoHide\n                                autoHeightMax={200}\n                                renderTrackHorizontal={props => <div {...props} className='track-horizontal' style={{ display: 'none' }} />}\n                                renderThumbHorizontal={props => <div {...props} className='thumb-horizontal' style={{ display: 'none' }} />}\n                            >\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        index={this.state.curr_index}\n                                        handleSelect={this.handleSelect}\n                                        has_symbol={this.props.has_symbol}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list__label'>{key}</div>\n                                            <Items\n                                                index={this.state.curr_index}\n                                                handleSelect={this.handleSelect}\n                                                has_symbol={this.props.has_symbol}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </Scrollbars>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDropdown.propTypes = {\n    className        : PropTypes.string,\n    classNameDisplay : PropTypes.string,\n    has_symbol       : PropTypes.bool,\n    is_alignment_left: PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    list             : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Dropdown;\n","import { getPropertyValue } from '_common/utility';\nimport ContractType         from './contract-type';\n\nexport const hasCallPutEqual = (contract_type_list) => {\n    if (!contract_type_list) return false;\n\n    return getPropertyValue(contract_type_list, 'Up/Down')\n        .some(contract => contract.value === 'rise_fall_equal');\n};\n\nexport const hasDurationForCallPutEqual = (contract_type_list, duration_unit, contract_start_type) => {\n    if (!contract_type_list || !duration_unit || !contract_start_type) return false;\n\n    const contract_list = Object.keys(contract_type_list || {})\n        .reduce((key, list) => ([...key, ...contract_type_list[list].map(contract => contract.value)]), []);\n\n    const contract_duration_list = contract_list\n        .map(list => ({ [list]: getPropertyValue(ContractType.getFullContractTypes(), [list, 'config', 'durations', 'units_display', contract_start_type]) }));\n\n    // Check whether rise fall equal is exists and has the current store duration unit\n    return hasCallPutEqual(contract_type_list) ? contract_duration_list\n        .filter(contract => contract.rise_fall_equal)[0].rise_fall_equal\n        .some(duration => duration.value === duration_unit) : false;\n};\n\nexport const isRiseFallEqual = (contract_type) => /^(rise_fall|rise_fall_equal)$/.test(contract_type);\n","import React                    from 'react';\nimport PropTypes                from 'prop-types';\nimport { localize }             from 'App/i18n';\nimport { Popover }              from 'App/Components/Elements/Popover';\nimport InputField               from 'App/Components/Form/InputField';\nimport {\n    hasCallPutEqual,\n    hasDurationForCallPutEqual,\n    isRiseFallEqual }           from 'Stores/Modules/Trading/Helpers/allow-equals';\n\nconst AllowEquals = ({\n    contract_start_type,\n    contract_type,\n    contract_types_list,\n    duration_unit,\n    expiry_type,\n    onChange,\n    value,\n}) => {\n    const has_callputequal_duration = hasDurationForCallPutEqual(contract_types_list,\n        duration_unit, contract_start_type);\n    const has_callputequal          = hasCallPutEqual(contract_types_list);\n\n    const has_allow_equals = isRiseFallEqual(contract_type) &&\n            ((has_callputequal_duration || expiry_type === 'endtime') && has_callputequal);\n\n    const changeValue = (e) => {\n        const { name, checked } = e.target;\n        onChange({ target: { name, value: Number(checked) } });\n    };\n\n    return (\n        has_allow_equals &&\n            <div className='allow-equals'>\n                <InputField\n                    className='allow-equals__input-field'\n                    classNameInput='allow-equals__input trade-container__input'\n                    checked={value}\n                    id='allow_equals'\n                    name='is_equal'\n                    onChange={changeValue}\n                    type='checkbox'\n                    value={value}\n                />\n                <label className='allow-equals__label' htmlFor='allow_equals'>{localize('Allow equals')}</label>\n                <Popover\n                    alignment='left'\n                    classNameTarget='allow-equals__tooltip'\n                    icon='info'\n                    message={localize('Win payout if exit spot is also equal to entry spot.')}\n                    margin={113}\n                />\n            </div>\n    );\n};\n\nAllowEquals.propTypes = {\n    contract_start_type: PropTypes.string,\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    duration_unit      : PropTypes.string,\n    expiry_type        : PropTypes.string,\n    onChange           : PropTypes.func,\n    value              : PropTypes.number,\n};\n\nexport default AllowEquals;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }                from '_common/base/currency_base';\nimport ButtonToggleMenu               from 'App/Components/Form/ButtonToggleMenu';\nimport Dropdown                       from 'App/Components/Form/DropDown';\nimport Fieldset                       from 'App/Components/Form/fieldset.jsx';\nimport InputField                     from 'App/Components/Form/InputField';\nimport { connect }                    from 'Stores/connect';\nimport AllowEquals                    from './allow-equals.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    contract_start_type,\n    contract_type,\n    contract_types_list,\n    currencies_list,\n    currency,\n    duration_unit,\n    expiry_type,\n    is_equal,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized fieldset-minimized__amount'>\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={classNames('fieldset-minimized__currency', 'symbols', { [`symbols--${(currency || '').toLowerCase()}`]: currency })} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n\n    const input =\n        <InputField\n            className='trade-container__amount'\n            classNameInlinePrefix='trade-container__currency'\n            classNameInput='trade-container__input'\n            currency={currency}\n            error_messages={validation_errors.amount}\n            fractional_digits={getDecimalPlaces(currency)}\n            id='amount'\n            inline_prefix={is_single_currency ? currency : null}\n            is_autocomplete_disabled\n            is_float\n            is_hj_whitelisted\n            is_incrementable\n            is_nativepicker={is_nativepicker}\n            is_negative_disabled\n            max_length={10}\n            name='amount'\n            onChange={onChange}\n            type='tel'\n            value={amount}\n        />;\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <ButtonToggleMenu\n                buttons_arr={basis_list}\n                className='dropdown--no-margin'\n                is_animated={true}\n                name='basis'\n                onChange={onChange}\n                value={basis}\n            />\n            {!is_single_currency ?\n                <div className='trade-container__currency-options'>\n                    <Dropdown\n                        className={classNames({ 'trade-container__currency-options-dropdown': !is_single_currency })}\n                        classNameDisplay='trade-container__currency-options--display'\n                        has_symbol\n                        is_alignment_left\n                        is_nativepicker={false}\n                        list={currencies_list}\n                        name='currency'\n                        value={currency}\n                        onChange={onChange}\n                    />\n                    {input}\n                </div>\n                :\n                input\n\n            }\n            <AllowEquals\n                contract_start_type={contract_start_type}\n                contract_type={contract_type}\n                contract_types_list={contract_types_list}\n                duration_unit={duration_unit}\n                expiry_type={expiry_type}\n                onChange={onChange}\n                value={parseInt(is_equal)}\n            />\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis              : PropTypes.string,\n    basis_list         : MobxPropTypes.arrayOrObservableArray,\n    contract_start_type: PropTypes.string,\n    contract_type      : PropTypes.string,\n    contract_types_list: MobxPropTypes.observableObject,\n    currencies_list    : MobxPropTypes.observableObject,\n    currency           : PropTypes.string,\n    duration_unit      : PropTypes.string,\n    expiry_type        : PropTypes.string,\n    is_equal           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default connect(({ modules, client }) => ({\n    amount             : modules.trade.amount,\n    basis              : modules.trade.basis,\n    basis_list         : modules.trade.basis_list,\n    contract_start_type: modules.trade.contract_start_type,\n    contract_type      : modules.trade.contract_type,\n    contract_types_list: modules.trade.contract_types_list,\n    currencies_list    : client.currencies_list,\n    currency           : modules.trade.currency,\n    duration_unit      : modules.trade.duration_unit,\n    expiry_type        : modules.trade.expiry_type,\n    is_equal           : modules.trade.is_equal,\n    is_single_currency : client.is_single_currency,\n    onChange           : modules.trade.onChange,\n    validation_errors  : modules.trade.validation_errors,\n}))(Amount);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Icon         from 'Assets/icon.jsx';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport InputField   from 'App/Components/Form/InputField';\nimport { connect }  from 'Stores/connect';\nimport { localize } from 'App/i18n';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    const barrier_title = barrier_count === 1 ? localize('Barrier') : localize('Barriers');\n\n    if (is_minimized) {\n        return barrier_count !== 2 ? (\n            <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                {barrier_1}\n            </div>\n        ) : (\n            <React.Fragment>\n                <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized fieldset-minimized__barrier2'>\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    const input_class = barrier_count === 2 ? 'multiple' : 'single';\n    return (\n        <Fieldset\n            className='trade-container__fieldset trade-container__barriers'\n            header={barrier_title}\n            is_center\n        >\n            <div>\n                <InputField\n                    type='number'\n                    name='barrier_1'\n                    value={barrier_1}\n                    className={`trade-container__barriers-${input_class}`}\n                    classNameInput={classNames('trade-container__input', 'trade-container__barriers-input', `trade-container__barriers-${input_class}-input`)}\n                    onChange={onChange}\n                    error_messages={validation_errors.barrier_1 || []}\n                    is_float\n                    is_signed\n                />\n\n                {barrier_count === 2 &&\n                    <React.Fragment>\n                        <InputField\n                            type='number'\n                            name='barrier_2'\n                            value={barrier_2}\n                            className='multiple'\n                            classNameInput='trade-container__input'\n                            onChange={onChange}\n                            error_messages={validation_errors.barrier_2}\n                            is_float\n                            is_signed\n                        />\n                        <Icon icon='IconBarrierUp'   className='trade-container__barriers--up' />\n                        <Icon icon='IconBarrierDown' className='trade-container__barriers--down' />\n                    </React.Fragment>\n                }\n            </div>\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(({ modules }) => (\n    {\n        barrier_1        : modules.trade.barrier_1,\n        barrier_2        : modules.trade.barrier_2,\n        barrier_count    : modules.trade.barrier_count,\n        onChange         : modules.trade.onChange,\n        validation_errors: modules.trade.validation_errors,\n    }\n))(Barrier);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst TickSteps = ({\n    hover_value,\n    max_value,\n    min_value,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    value,\n}) => {\n    const arr_ticks = [...Array((max_value - min_value) + 1).keys()];\n\n    const isActive = (idx) => (idx + min_value) === value;\n    const isMarked = (idx) => (idx + min_value) < value;\n    const isMarkedOnHover = (idx) => (isMarked(idx)) ? false : (idx + min_value) <= hover_value;\n\n    return (\n        <React.Fragment>\n            {arr_ticks.map(idx =>\n                <span\n                    key={idx}\n                    className={classNames('range-slider__ticks-step', {\n                        'range-slider__ticks-step--active'      : isActive(idx),\n                        'range-slider__ticks-step--marked'      : isMarked(idx),\n                        'range-slider__ticks-step--marked-hover': isMarkedOnHover(idx),\n                    })}\n                    onClick={() => onClick(idx + min_value)}\n                    onMouseEnter={() => onMouseEnter(idx + min_value)}\n                    onMouseLeave={onMouseLeave}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nTickSteps.propTypes = {\n    hover_value : PropTypes.number,\n    max_value   : PropTypes.number,\n    min_value   : PropTypes.number,\n    onClick     : PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    value       : PropTypes.number,\n};\n\nexport default TickSteps;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport TickSteps    from './tick-steps.jsx';\n\nclass RangeSlider extends React.PureComponent {\n    state = {\n        hover_value: 0,\n    }\n\n    handleChange = (e) => {\n        // e.target.value returns string, we need to convert them to number\n        const value = +e.target.value;\n        if (value !== this.props.value) {\n            this.resetOnHover();\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    handleClick = (index) => {\n        if (index !== this.props.value) {\n            this.resetOnHover();\n            this.props.onChange({ target: { name: this.props.name, value: index } });\n        }\n    };\n\n    onMouseEnter = (index) => {\n        if (index) {\n            this.setState({ hover_value: index });\n            this.rangeSliderTrack.style.width = this.getRangeSliderTrackWidth(index, true);\n        }\n    };\n\n    onMouseLeave = (e) => {\n        const { offsetX, offsetY } = e.nativeEvent;\n        if (offsetY <= -3 || offsetY >= 3 || offsetX < -3 || offsetX > 3) {\n            this.resetOnHover();\n        }\n    };\n\n    getRangeSliderTrackWidth = (value, is_hover) => {\n        const width = (value - this.props.min_value) * (10 / (this.props.max_value - this.props.min_value));\n        return `${(width * 2) + (is_hover ? 0.8 : 1.4)}em`;\n    };\n\n    resetOnHover = () => {\n        if (this.state.hover_value) {\n            this.setState({ hover_value: 0 });\n            this.rangeSliderTrack.style.width = 0;\n        }\n    };\n\n    render() {\n        const {\n            className,\n            max_value,\n            min_value,\n            name,\n            value,\n        } = this.props;\n\n        const display_value = this.state.hover_value || value;\n        return (\n            <div className={classNames('range-slider', className, { 'range-slider__error': ((value < min_value) || (value > max_value)) })}>\n                <label className='range-slider__label' htmlFor='range'>\n                    <input\n                        className='input trade-container__input range-slider__track'\n                        id='range'\n                        max={max_value}\n                        max_value={max_value}\n                        min={min_value}\n                        min_value={min_value}\n                        name={name}\n                        onChange={this.handleChange}\n                        tabIndex='0'\n                        type='range'\n                        steps={max_value - min_value}\n                        value={value}\n                    />\n                    {/* this element to be placed before <TickSteps /> to prevent overlapping colors */}\n                    <span\n                        ref={node => this.rangeSliderTrack = node}\n                        className='range-slider__line range-slider__line--fill'\n                        onMouseLeave={this.onMouseLeave}\n                    />\n                    <div className='range-slider__ticks'>\n                        <TickSteps\n                            hover_value={this.state.hover_value}\n                            max_value={max_value}\n                            min_value={min_value}\n                            onClick={this.handleClick}\n                            onMouseLeave={this.onMouseLeave}\n                            onMouseEnter={this.onMouseEnter}\n                            value={value}\n                        />\n                    </div>\n                    {/* Calculate line width based on active value and size of range thumb */}\n                    <div\n                        className='range-slider__line'\n                        style={{ width: `${this.getRangeSliderTrackWidth(value)}` }}\n                    />\n                </label>\n                <div className='range-slider__caption'>\n                    {\n                        !!display_value &&\n                        <span className='range-slider__caption-title'>\n                            {display_value === 1 && localize('{{display_value}} Tick', { display_value })}\n                            {display_value > 1 && localize('{{display_value}} Ticks', { display_value })}\n                        </span>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nRangeSlider.propTypes = {\n    className: PropTypes.string,\n    max_value: PropTypes.number,\n    min_value: PropTypes.number,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.number,\n};\n\nexport default RangeSlider;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React, { Fragment } from 'react';\nimport Icon                from 'Assets/icon.jsx';\n\nconst DurationToggle = ({\n    name,\n    onChange,\n    value,\n}) => {\n    const toggle = () => {\n        onChange({ target: { value: !value, name } });\n    };\n    const icon_className = classNames(\n        'advanced-simple-toggle__icon',\n        'select-arrow',\n        { 'advanced-simple-toggle__icon--active': value },\n    );\n    return (\n        <Fragment>\n            <button className='advanced-simple-toggle' onClick={toggle}>\n                <Icon icon='IconArrow' className={icon_className} classNamePath={'advanced-simple-toggle__icon-path'} />\n            </button>\n        </Fragment>);\n};\n\nDurationToggle.propTypes = {\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.bool,\n};\n\nexport default DurationToggle;\n","\nimport { WS }               from 'Services';\nimport { getPropertyValue } from '_common/utility';\n\nconst trading_events = {};\nexport const getTradingEvents = async (date, underlying = null) => {\n    if (!date) {\n        return [];\n    }\n\n    if (!(date in trading_events)) {\n        const trading_times_response = await WS.getTradingTimes(date);\n\n        if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n            for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                if (submarkets) {\n                    for (let j = 0; j < submarkets.length; j++) {\n                        const symbols = submarkets[j].symbols;\n                        if (symbols) {\n                            for (let k = 0; k < symbols.length; k++) {\n                                const symbol = symbols[k];\n                                if (!trading_events[trading_times_response.echo_req.trading_times]) {\n                                    trading_events[trading_times_response.echo_req.trading_times] = {};\n                                }\n                                trading_events[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                    symbol.events;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return trading_events[date][underlying];\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    getStartOfMonth,\n    toMoment }        from 'Utils/Date';\nimport { localize }   from 'App/i18n';\nimport CalendarBody   from './calendar-body.jsx';\nimport CalendarFooter from './calendar-footer.jsx';\nimport CalendarHeader from './calendar-header.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date, value } = props;\n        const current_date = toMoment(value || start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: value,        // selected date\n            calendar_view: 'date',\n            hovered_date : '',\n            duration_date: '',\n        };\n    }\n\n    switchView = (view) => {\n        this.setState({ calendar_view: view });\n    };\n\n    navigateTo = (new_date) => {\n        this.setState({\n            calendar_date: toMoment(new_date).format(this.props.date_format),\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(new_date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    onMouseOver = (event) => {\n        const target = event.currentTarget;\n\n        if (!target.classList.contains('calendar__cell--disabled') && !target.classList.contains('calendar__cell--hover')) {\n            target.className += ' calendar__cell--hover';\n            this.setState({\n                hovered_date : target.getAttribute('data-date'),\n                duration_date: target.getAttribute('data-duration'),\n            });\n        }\n    };\n\n    onMouseLeave = (event) => {\n        const target = event.currentTarget;\n\n        if (target.classList.contains('calendar__cell--hover')) {\n            target.classList.remove('calendar__cell--hover');\n\n            this.setState({\n                hovered_date : null,\n                duration_date: null,\n            });\n        }\n    };\n\n    updateSelectedDate = (e) => {\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = toMoment(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(toMoment(min_date));\n        const is_after    = moment_date.isAfter(toMoment(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        if (e) e.stopPropagation();\n\n        if (type === 'day') {\n            this.updateSelectedDate(e);\n            return;\n        }\n\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = toMoment(this.state.calendar_date)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = toMoment(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = toMoment().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = toMoment(date).clone().startOf(unit);\n        const end_of_period   = toMoment(date).clone().endOf(unit);\n        return end_of_period.isBefore(toMoment(min_date))\n            || start_of_period.isAfter(toMoment(max_date));\n    };\n\n    render() {\n        const { date_format, duration_date, footer, has_today_btn, has_range_selection,\n            holidays, start_date, weekends } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n        let default_message, is_minimum;\n\n        if (duration_date) {\n            default_message = `${duration_date} ${duration_date === 1 ? localize('Day') : localize('Days')}`;\n            is_minimum = false;\n        } else {\n            default_message = localize('Minimum duration is 1 day');\n            is_minimum = true;\n        }\n        \n        return (\n            <div className='calendar' data-value={selected_date}>\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    navigateTo={this.navigateTo}\n                    switchView={this.switchView}\n                />\n                <CalendarBody\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    start_date={start_date}\n                    selected_date={selected_date}\n                    updateSelected={this.updateSelected}\n                    holidays={holidays}\n                    has_range_selection={has_range_selection}\n                    hovered_date={this.state.hovered_date}\n                    weekends={weekends}\n                    onMouseOver={this.onMouseOver}\n                    onMouseLeave={this.onMouseLeave}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    duration_date={this.state.duration_date || default_message}\n                    is_minimum={is_minimum}\n                    has_today_btn={has_today_btn}\n                    has_range_selection={has_range_selection}\n                    onClick={this.setToday}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : toMoment(0).format('YYYY-MM-DD'),               // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : toMoment().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    date_format  : PropTypes.string,\n    duration_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    max_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onChangeCalendarMonth: PropTypes.func,\n    onSelect             : PropTypes.func,\n    start_date           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value   : PropTypes.string,\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport default Calendar;\n","import classNames           from 'classnames';\nimport { observer }         from 'mobx-react';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport Icon                 from 'Assets/icon.jsx';\nimport InputField           from 'App/Components/Form/InputField';\nimport {\n    addDays,\n    daysFromTodayTo,\n    formatDate,\n    getStartOfMonth,\n    isDateValid,\n    toMoment }              from 'Utils/Date';\nimport { localize }         from 'App/i18n';\nimport { getTradingEvents } from './helpers';\nimport Calendar             from '../../Elements/Calendar';\n\nclass DatePicker extends React.Component {\n    state = {\n        date_value           : '',\n        holidays             : [],\n        is_datepicker_visible: false,\n        is_clear_btn_visible : false,\n        value                : this.props.value,\n        weekends             : [],\n    };\n\n    is_mounted = false;\n\n    componentDidMount() {\n        this.is_mounted = true;\n\n        document.addEventListener('click', this.onClickOutside, true);\n        const { mode, value } = this.props;\n        const initial_value = mode === 'duration' ? formatDate(addDays(toMoment(), value || 1), 'DD MMM YYYY') : formatDate(value, 'DD MMM YYYY');\n\n        this.updateDatePickerValue(initial_value);\n\n        if (this.props.disable_trading_events) {\n            this.onChangeCalendarMonth(getStartOfMonth(this.state.value));\n        }\n    }\n\n    componentWillUnmount() {\n        this.is_mounted = false;\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState(state => ({ is_datepicker_visible: !state.is_datepicker_visible }));\n    };\n\n    onClickOutside = (e) => {\n        if (/purchase_/ig.test(e.target.id)) {\n            return;\n        }\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value, 'DD MMM YYYY'));\n            }\n        }\n    };\n\n    onMouseEnter = () => {\n        if (this.state.value && (('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_clear_btn_visible: true });\n        }\n    };\n\n    onMouseLeave = () => {\n        this.setState({ is_clear_btn_visible: false });\n    };\n\n    onSelectCalendar = (selected_date, is_datepicker_visible = true) => {\n        let value = selected_date;\n        if (!isDateValid(value)) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(value);\n        } else {\n            this.updateDatePickerValue(formatDate(value, 'DD MMM YYYY'));\n        }\n        this.setState({ is_datepicker_visible });\n    };\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        const formatted_value = formatDate(addDays(toMoment(), value), 'DD MMM YYYY');\n        this.updateDatePickerValue(formatted_value);\n        this.props.onChange(e);\n    };\n\n    clearDatePickerInput = () => {\n        this.setState({ value: null }, this.updateStore);\n        if (this.calendar) {\n            this.calendar.resetCalendar();\n        }\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value) => {\n        const { date_format, mode, start_date } = this.props;\n        this.setState({ value }, this.updateStore);\n\n        if (mode === 'duration') {\n            const new_value      = daysFromTodayTo(value);\n            const new_date_value = formatDate(value, 'DD MMM YYYY');\n            this.setState({ value: new_value, date_value: new_date_value }, this.updateStore);\n        }\n\n        // update Calendar\n        const new_date = (mode === 'duration') ? formatDate(value, 'DD MMM YYYY') : value;\n        if (this.calendar && (isDateValid(new_date) || !new_date)) {\n            if (!new_date) {\n                const current_date = formatDate(start_date, date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    };\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    async onChangeCalendarMonth(calendar_date) {\n        const trading_events = await getTradingEvents(calendar_date, this.props.underlying);\n        const holidays = [];\n        let weekends   = [];\n        trading_events.forEach(events => {\n            const dates = events.dates.split(', '); // convert dates str into array\n            const idx = dates.indexOf('Fridays');\n            if (idx !== -1) {\n                weekends = [6, 0]; // Sat, Sun\n            }\n            holidays.push({\n                dates,\n                descrip: events.descrip,\n            });\n        });\n\n        if (this.is_mounted) {\n            this.setState({\n                holidays,\n                weekends,\n            });\n        }\n    }\n\n    renderInputField = () => {\n        const { is_read_only, mode, name, label, error_messages } = this.props;\n        let { placeholder } = this.props;\n        let value, type, onChange;\n\n        switch (mode) {\n            case 'duration':\n                onChange = this.onChangeInput;\n                type = 'text';\n                value = this.state.value;\n                break;\n            default:\n                placeholder = placeholder || localize('Select a date');\n                type = 'text';\n                value = formatDate(this.props.value, 'DD MMM YYYY');\n        }\n\n        return (\n            <InputField\n                className='datepicker__input-field'\n                classNameInput='datepicker__input trade-container__input'\n                data-tip={false}\n                data-value={this.state.value}\n                error_messages={error_messages}\n                is_autocomplete_disabled={true}\n                is_hj_whitelisted\n                label={label}\n                is_read_only={is_read_only}\n                name={name}\n                onChange={onChange}\n                onClick={this.handleVisibility}\n                placeholder={placeholder}\n                type={type}\n                value={value}\n            />\n        );\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='input trade-container__input datepicker__input'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker__native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <Icon icon='IconArrow' className='datepicker__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                id={this.props.id}\n                ref={node => { this.mainNode = node; }}\n                className='datepicker'\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n            >\n                { this.renderInputField() }\n                <Icon\n                    icon='IconCalendar'\n                    className={classNames('datepicker__icon datepicker__icon--calendar', {\n                        'datepicker__icon--is-hidden' : this.state.is_clear_btn_visible,\n                        'datepicker__icon--with-label': this.props.label,\n                    })}\n                    onClick={this.handleVisibility}\n                />\n                {this.props.is_clearable &&\n                    <Icon\n                        icon='IconClear'\n                        className={classNames('datepicker__icon datepicker__icon--clear', {\n                            'datepicker__icon--is-hidden': !this.state.is_clear_btn_visible,\n                        })}\n                        onClick={this.state.is_clear_btn_visible ? this.clearDatePickerInput : undefined}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_datepicker_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `datepicker__picker--enter datepicker__picker--${this.props.alignment}-enter`,\n                        enterDone: `datepicker__picker--enter-done datepicker__picker--${this.props.alignment}-enter-done`,\n                        exit     : `datepicker__picker--exit datepicker__picker--${this.props.alignment}-exit`,\n                    }}\n                    unmountOnExit\n                >\n                    <div\n                        className={classNames('datepicker__picker', {\n                            'datepicker__picker--left': this.props.alignment === 'left',\n                        })}\n                    >\n                        <Calendar\n                            ref={node => { this.calendar = node; }}\n                            onSelect={this.onSelectCalendar}\n                            onChangeCalendarMonth={this.props.disable_trading_events ?\n                                this.onChangeCalendarMonth.bind(this) : undefined}\n                            holidays={this.state.holidays}\n                            weekends={this.state.weekends}\n                            duration_date={this.state.value}\n                            date_format={this.props.date_format}\n                            has_today_btn={this.props.has_today_btn}\n                            has_range_selection={this.props.has_range_selection}\n                            footer={this.props.footer}\n                            max_date={this.props.max_date}\n                            min_date={this.props.min_date}\n                            start_date={this.props.start_date}\n                            value={this.props.mode === 'duration' ? this.state.date_value : this.props.value}\n                        />\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...Calendar.propTypes,\n    error_messages: PropTypes.array,\n    label         : PropTypes.string,\n};\n\nexport default observer(DatePicker);\n","import PropTypes                      from 'prop-types';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport React                          from 'react';\nimport DatePicker                     from 'App/Components/Form/DatePicker';\nimport { connect }                    from 'Stores/connect';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport {\n    isTimeValid,\n    setTime,\n    toMoment }                        from 'Utils/Date';\n\nconst TradingDatePicker = ({\n    duration_d,\n    duration_min_max,\n    duration_units_list,\n    expiry_date,\n    expiry_type,\n    is_24_hours_contract,\n    mode,\n    name,\n    onChange,\n    server_time,\n    start_time,\n    start_date,\n    symbol,\n    validation_errors,\n}) => {\n    let max_date_duration,\n        min_date_expiry,\n        has_today_btn,\n        is_read_only;\n    const has_intraday_unit = hasIntradayDurationUnit(duration_units_list);\n    const min_duration = has_intraday_unit ? toMoment(server_time).clone() : toMoment(server_time).clone().add(duration_min_max.daily.min, 'second');\n    const moment_contract_start_date_time =\n        setTime(toMoment(min_duration), (isTimeValid(start_time) ? start_time : server_time.format('HH:mm:ss')));\n\n    const max_daily_duration   = duration_min_max.daily ? duration_min_max.daily.max : 365 * 24 * 3600;\n    const is_duration_contract = expiry_type === 'duration';\n\n    if (is_24_hours_contract) {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(\n            start_date ? 24 * 3600 : (max_daily_duration), 'second');\n    } else {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(max_daily_duration, 'second');\n    }\n    if (is_duration_contract) {\n        if (has_intraday_unit) {\n            min_date_expiry.add(1, 'day');\n        }\n        has_today_btn = false;\n        is_read_only = false;\n    } else {\n        has_today_btn = true;\n        is_read_only = true;\n    }\n\n    const error_messages = is_duration_contract ? validation_errors.duration : validation_errors.expiry_date;\n    const date_value = is_duration_contract ? (duration_d || '').toString() : expiry_date;\n\n    return (\n        <DatePicker\n            alignment='left'\n            disable_year_selector\n            disable_trading_events\n            error_messages={error_messages || []}\n            has_today_btn={has_today_btn}\n            has_range_selection={mode === 'duration'}\n            is_nativepicker={false}\n            is_read_only={is_read_only}\n            label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n            mode={mode}\n            name={name}\n            onChange={onChange}\n            min_date={min_date_expiry}\n            max_date={max_date_duration}\n            start_date={start_date}\n            underlying={symbol}\n            value={date_value}\n        />\n    );\n};\n\nTradingDatePicker.propTypes = {\n    duration: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_type         : PropTypes.string,\n    is_24_hours_contract: PropTypes.bool,\n    mode                : PropTypes.string,\n    name                : PropTypes.string,\n    onChange            : PropTypes.func,\n    server_time         : PropTypes.object,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common, ui }) => ({\n        duration_min_max   : modules.trade.duration_min_max,\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_date        : modules.trade.expiry_date,\n        expiry_type        : modules.trade.expiry_type,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n        start_date         : modules.trade.start_date,\n        start_time         : modules.trade.start_time,\n        symbol             : modules.trade.symbol,\n        validation_errors  : modules.trade.validation_errors,\n        duration_d         : ui.duration_d,\n    })\n)(TradingDatePicker);\n","import PropTypes    from 'prop-types';\nimport classNames   from 'classnames';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport { toMoment } from 'Utils/Date';\n\nconst Dialog = ({\n    preClass,\n    selected_time,\n    end_time,\n    start_time,\n    onChange,\n    className,\n}) => {\n    const start_time_moment     = start_time\n        ? toMoment(start_time)\n        : toMoment();\n    const end_time_moment       = end_time\n        ? toMoment(end_time)\n        : toMoment().hour('23').minute('59').seconds('59').milliseconds('999');\n    const to_compare_moment     = toMoment();\n    const [ hour, minute ]      = selected_time.split(':');\n    const hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const selectOption = (type, current_value, prev_value, is_enabled = true) => {\n        if (is_enabled && prev_value) {\n            const [ prev_hour, prev_minute ] = prev_value.split(':');\n            if ((type === 'h' && current_value !== prev_hour) || (type === 'm' && current_value !== prev_minute)) {\n                onChange(`${type === 'h' ? current_value : prev_hour}:${type === 'm' ? current_value : prev_minute}`);\n            }\n        }\n    };\n\n    return (\n        <div className={classNames(`${preClass}__dialog`, `${className}`)}>\n            <div className={`${preClass}__selector`}>\n                <div className={`${preClass}__selector--hours`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Hour')}</strong></div>\n                    <div>\n                        {hours.map((h, key) => {\n                            to_compare_moment.hour(h);\n                            const start_time_reset_minute = start_time_moment.clone().minute(0);\n                            const is_hour_enabled = to_compare_moment.isBetween(\n                                start_time_reset_minute,\n                                end_time_moment);\n                            const is_minute_enabled = to_compare_moment.isBetween(\n                                start_time_moment,\n                                end_time_moment,\n                                'minute');\n                            // The minute number after which the last block/interval of `Minutes` selection will be disabled\n                            const last_interval_of_hour = 52;\n                            const is_enabled = to_compare_moment.minutes() > last_interval_of_hour\n                                ? is_hour_enabled && is_minute_enabled\n                                : is_hour_enabled;\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (hour === h) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('h', h, selected_time, is_enabled); }}\n                                >\n                                    {h}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                <div className={`${preClass}__selector--minutes`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Minute')}</strong></div>\n                    <div>\n                        {minutes.map((mm, key) => {\n                            to_compare_moment.hour(hour).minute(mm);\n                            const is_enabled = to_compare_moment.isBetween(start_time_moment, end_time_moment, 'minute');\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (minute === mm) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('m', mm, selected_time, is_enabled); }}\n                                >\n                                    {mm}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDialog.propTypes = {\n    className: PropTypes.string,\n    end_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    onChange     : PropTypes.func,\n    preClass     : PropTypes.string,\n    selected_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    start_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default Dialog;\n","import classNames        from 'classnames';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport Icon              from 'Assets/icon.jsx';\nimport Dialog            from './dialog.jsx';\nimport InputField        from '../InputField';\n\nclass TimePicker extends React.Component {\n    state = { is_open: false };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState((state) => ({ is_open: !state.is_open }));\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.selected_time : arg;\n\n        if (value !== this.props.selected_time) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            selected_time,\n            name,\n            is_nativepicker,\n            placeholder,\n            end_time,\n            start_time,\n            validation_errors,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={classNames(prefix_class,\n                    { [`${prefix_class}--padding`]: this.props.padding })}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={selected_time}\n                            onChange={this.handleChange}\n                            name={name}\n                            min={start_time}\n                            max={end_time}\n                        />\n                        : (\n                            <React.Fragment>\n                                <InputField\n                                    error_messages={validation_errors}\n                                    type='text'\n                                    is_hj_whitelisted\n                                    is_read_only\n                                    id={`${prefix_class}-input`}\n                                    className={classNames(`${prefix_class}-input`)}\n                                    value={`${selected_time} GMT`}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <Icon icon='IconClock' className={`${prefix_class}__icon`} />\n                                <CSSTransition\n                                    in={ this.state.is_open }\n                                    classNames={{\n                                        enter    : 'time-picker__dialog--enter',\n                                        enterDone: 'time-picker__dialog--enter-done',\n                                        exit     : 'time-picker__dialog--exit',\n                                    }}\n                                    timeout={100}\n                                    unmountOnExit\n                                >\n                                    <Dialog\n                                        end_time={end_time}\n                                        start_time={start_time}\n                                        className={'from-left'}\n                                        onChange={this.handleChange}\n                                        preClass={prefix_class}\n                                        selected_time={selected_time}\n                                    />\n                                </CSSTransition>\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    selected_time  : PropTypes.string,\n    start_time     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default observer(TimePicker);\n","const getClosestTime = (\n    time,\n    interval,\n) => time.minute((Math.ceil(time.minute() / interval) * interval));\n\nexport const getSelectedTime = (\n    server_time,\n    selected_time,\n    market_open_time,\n) => {\n    if (selected_time.isAfter(market_open_time)) {\n        return getClosestTime(selected_time, 5).format('HH:mm');\n    }\n    if (market_open_time.isAfter(server_time)) {\n        return getClosestTime(market_open_time, 5).format('HH:mm');\n    }\n\n    return getClosestTime(server_time, 5).format('HH:mm');\n};\n\nexport const getBoundaries = (\n    server_time,\n    market_open_time,\n    market_close_time,\n) => {\n    const boundaries = {\n        start: server_time.isBefore(market_open_time)\n            ? market_open_time\n            : server_time,\n        end: market_close_time,\n    };\n\n    boundaries.start = getClosestTime(boundaries.start, 5);\n    return boundaries;\n};\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport {\n    setTime,\n    toMoment }     from 'Utils/Date';\nimport TimePicker  from 'App/Components/Form/TimePicker';\nimport {\n    getSelectedTime,\n    getBoundaries } from 'Stores/Modules/Trading/Helpers/end-time';\n\nconst TradingTimePicker = ({\n    expiry_date,\n    expiry_time,\n    market_close_times,\n    market_open_times,\n    onChange,\n    server_time,\n}) => {\n    const moment_expiry_date = toMoment(expiry_date);\n    const market_open_datetime = setTime(moment_expiry_date.clone(), market_open_times.slice(-1)[0]);\n    const market_close_datetime = setTime(moment_expiry_date.clone(), market_close_times.slice(-1)[0]);\n    const expiry_datetime = setTime(moment_expiry_date.clone(), expiry_time);\n    const server_datetime = toMoment(server_time);\n\n    const boundaries = getBoundaries(\n        server_datetime.clone(),\n        market_open_datetime.clone(),\n        market_close_datetime);\n    const selected_time = getSelectedTime(\n        server_datetime.clone(),\n        expiry_datetime,\n        market_open_datetime);\n    return (\n        <TimePicker\n            end_time={boundaries.end}\n            onChange={onChange}\n            name='expiry_time'\n            placeholder='12:00'\n            start_time={boundaries.start}\n            selected_time={selected_time}\n        />\n    );\n};\n\nTradingTimePicker.propTypes = {\n    expiry_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time       : PropTypes.string,\n    market_close_times: PropTypes.array,\n    name              : PropTypes.string,\n    onChange          : PropTypes.func,\n    server_time       : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_time        : modules.trade.expiry_time,\n        expiry_date        : modules.trade.expiry_date,\n        market_close_times : modules.trade.market_close_times,\n        market_open_times  : modules.trade.market_open_times,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n    })\n)(TradingTimePicker);\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport Dropdown                       from 'App/Components/Form/DropDown';\nimport ButtonToggleMenu               from 'App/Components/Form/ButtonToggleMenu';\nimport InputField                     from 'App/Components/Form/InputField';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { connect }                    from 'Stores/connect';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport TradingDatePicker              from '../../DatePicker';\nimport TradingTimePicker              from '../../TimePicker';\n\nconst AdvancedDuration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    duration_units_list,\n    duration_t,\n    changeDurationUnit,\n    getDurationFromUnit,\n    expiry_date,\n    expiry_list,\n    expiry_type,\n    number_input_props,\n    onChange,\n    onChangeUiStore,\n    server_time,\n    shared_input_props,\n    start_date,\n    validation_errors,\n}) => {\n    let is_24_hours_contract = false;\n\n    if (expiry_type === 'endtime') {\n        const has_intraday_duration_unit = hasIntradayDurationUnit(duration_units_list);\n        is_24_hours_contract = (!!start_date || toMoment(expiry_date || server_time).isSame(toMoment(server_time), 'day')) && has_intraday_duration_unit;\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_24_hours_contract,\n    });\n\n    const changeExpiry = ({ target }) => {\n        const { name, value } = target;\n\n        onChange({ target: { name: 'expiry_type', value } });\n        onChangeUiStore({ name, value });\n    };\n\n    return (\n        <Fragment>\n            { expiry_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={expiry_list}\n                    name='advanced_expiry_type'\n                    is_animated={true}\n                    onChange={changeExpiry}\n                    value={advanced_expiry_type}\n                />\n            }\n            { expiry_type === 'duration' ?\n                <Fragment>\n                    <div className='duration-container'>\n                        { duration_units_list.length > 1 &&\n                            <Dropdown\n                                is_alignment_left\n                                is_nativepicker={false}\n                                list={duration_units_list}\n                                name='advanced_duration_unit'\n                                onChange={changeDurationUnit}\n                                value={advanced_duration_unit}\n                            />\n                        }\n                        { advanced_duration_unit === 't' &&\n                            <RangeSlider\n                                name='duration'\n                                ticks={10}\n                                value={duration_t}\n                                {...shared_input_props}\n                            />\n                        }\n                        { advanced_duration_unit === 'd' &&\n                            <TradingDatePicker\n                                mode='duration'\n                                name='duration'\n                                is_24_hours_contract={is_24_hours_contract}\n                            />\n                        }\n                        { (advanced_duration_unit !== 't' && advanced_duration_unit !== 'd') &&\n                            <InputField\n                                classNameInput='trade-container__input'\n                                error_messages={validation_errors.duration}\n                                label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n                                name='duration'\n                                value={getDurationFromUnit(advanced_duration_unit)}\n                                {...number_input_props}\n                                {...shared_input_props}\n                            />\n                        }\n                    </div>\n                </Fragment> :\n                <Fragment>\n                    <div className={endtime_container_class}>\n                        <TradingDatePicker\n                            name='expiry_date'\n                            is_24_hours_contract={is_24_hours_contract}\n                        />\n                        {is_24_hours_contract &&\n                            <TradingTimePicker />\n                            // validation_errors={validation_errors.end_time} TODO: add validation_errors for end time\n                        }\n                    </div>\n                </Fragment>\n            }\n        </Fragment>\n    );\n};\n\nAdvancedDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    changeDurationUnit    : PropTypes.func,\n    duration_t            : PropTypes.number,\n    duration_units_list   : MobxPropTypes.arrayOrObservableArray,\n    expiry_date           : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_list        : PropTypes.array,\n    expiry_type        : PropTypes.string,\n    getDurationFromUnit: PropTypes.func,\n    number_input_props : PropTypes.object,\n    onChange           : PropTypes.func,\n    onChangeUiStore    : PropTypes.func,\n    server_time        : PropTypes.object,\n    shared_input_props : PropTypes.object,\n    start_date         : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        validation_errors: modules.trade.validation_errors,\n    })\n)(AdvancedDuration);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport ButtonToggleMenu               from 'App/Components/Form/ButtonToggleMenu';\nimport InputField                     from 'App/Components/Form/InputField';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { connect }                    from 'Stores/connect';\nimport TradingDatePicker              from '../../DatePicker';\n\nconst SimpleDuration = ({\n    changeDurationUnit,\n    duration_t,\n    duration_units_list,\n    getDurationFromUnit,\n    number_input_props,\n    shared_input_props,\n    simple_duration_unit,\n    validation_errors,\n}) => {\n    const filterMinutesAndTicks = (arr) => {\n        const filtered_arr = arr.filter(du => du.value === 't' || du.value === 'm');\n        if (filtered_arr.length <= 1) return [];\n\n        return filtered_arr;\n    };\n    const has_label = !duration_units_list.some(du => du.value === 't');\n\n    return (\n        <Fragment>\n            { duration_units_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={filterMinutesAndTicks(duration_units_list)}\n                    is_animated={true}\n                    name='simple_duration_unit'\n                    onChange={changeDurationUnit}\n                    value={simple_duration_unit}\n                />\n            }\n            { simple_duration_unit === 't' &&\n                <RangeSlider\n                    name='duration'\n                    value={duration_t}\n                    ticks={10}\n                    {...shared_input_props}\n                />\n            }\n            { simple_duration_unit === 'd' &&\n                <TradingDatePicker\n                    alignment='left'\n                    mode='duration'\n                    name='duration'\n                />\n            }\n            { (simple_duration_unit !== 't' && simple_duration_unit !== 'd') &&\n                <InputField\n                    classNameInput='trade-container__input'\n                    error_messages={validation_errors.duration}\n                    name='duration'\n                    label={has_label ? duration_units_list[0].text : null}\n                    value={getDurationFromUnit(simple_duration_unit)}\n                    {...number_input_props}\n                    {...shared_input_props}\n                />\n            }\n        </Fragment>\n    );\n};\n\nSimpleDuration.propTypes = {\n    changeDurationUnit  : PropTypes.func,\n    duration_t          : PropTypes.number,\n    duration_units_list : MobxPropTypes.arrayOrObservableArray,\n    getDurationFromUnit : PropTypes.func,\n    number_input_props  : PropTypes.object,\n    shared_input_props  : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n    validation_errors   : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        validation_errors: modules.trade.validation_errors,\n    })\n)(SimpleDuration);\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport { localize }                   from 'App/i18n';\nimport Fieldset                       from 'App/Components/Form/fieldset.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { toMoment }                   from 'Utils/Date';\nimport DurationToggle                 from './duration-toggle.jsx';\nimport AdvancedDuration               from './advanced-duration.jsx';\nimport SimpleDuration                 from './simple-duration.jsx';\n\nconst Duration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_t,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    getDurationFromUnit,\n    hasDurationUnit,\n    is_advanced_duration,\n    is_minimized,\n    min_value,\n    max_value,\n    onChange,\n    onChangeUiStore,\n    onChangeMultiple,\n    simple_duration_unit,\n    server_time,\n    start_date,\n    market_open_times,\n}) => {\n    const expiry_list = [\n        { text: localize('Duration'), value: 'duration' },\n    ];\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End time'), value: 'endtime' });\n    }\n\n    if (is_minimized) {\n        const moment_expiry = toMoment(expiry_date);\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized fieldset-minimized__duration'>\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n\n    const changeDurationUnit = ({ target }) => {\n        const { name, value } = target;\n        const duration_value  = getDurationFromUnit(value);\n\n        onChangeUiStore({ name, value });\n        onChangeMultiple({\n            duration_unit: value,\n            duration     : duration_value,\n        });\n    };\n\n    const changeDurationValue = ({ target }) => {\n        const { name, value } = target;\n        const duration_name   = `duration_${is_advanced_duration ? advanced_duration_unit : simple_duration_unit}`;\n\n        // e.target.value returns string, we need to convert them to number\n        onChangeUiStore({ name: duration_name, value: +value });\n        onChange({ target: { name, value: +value } });\n    };\n\n    const onToggleDurationType = ({ target }) => {\n        const { name, value } = target;\n        onChangeUiStore({ name, value });\n\n        // replace selected duration unit and duration if the contract doesn't have that duration unit\n        let current_duration_unit = value ? advanced_duration_unit : simple_duration_unit;\n        if (!hasDurationUnit(current_duration_unit)) {\n            current_duration_unit = duration_units_list[0].value;\n            onChangeUiStore({ name: `${value ? 'advanced' : 'simple'}_duration_unit`, value: current_duration_unit });\n        }\n\n        const duration_value         = getDurationFromUnit(current_duration_unit);\n        const new_trade_store_values = {\n            duration_unit: current_duration_unit,\n            duration     : duration_value,\n        };\n\n        // simple only has expiry type of duration\n        if (!value && expiry_type !== 'duration') {\n            new_trade_store_values.expiry_type = 'duration';\n        }\n\n        if (value && expiry_type !== advanced_expiry_type) {\n            new_trade_store_values.expiry_type = advanced_expiry_type;\n        }\n\n        onChangeMultiple({ ...new_trade_store_values });\n    };\n\n    const props = {\n        shared_input: {\n            is_hj_whitelisted: true,\n            onChange         : changeDurationValue,\n            max_value,\n            min_value,\n        },\n        number_input: {\n            type            : 'number',\n            is_incrementable: true,\n        },\n    };\n\n    // e.g. digit contracts only has range slider - does not have toggle between advanced / simple\n    const has_toggle = expiry_list.length > 1 || duration_units_list.length > 1;\n\n    return (\n        <Fieldset className={classNames('trade-container__fieldset', {\n            'trade-container__fieldset--advanced': is_advanced_duration,\n        })}\n        >\n            { !has_toggle &&\n                <RangeSlider\n                    name='duration'\n                    value={duration_t}\n                    {...props.shared_input}\n                />\n            }\n            { has_toggle &&\n                <Fragment>\n                    { is_advanced_duration &&\n                        <AdvancedDuration\n                            advanced_expiry_type={advanced_expiry_type}\n                            advanced_duration_unit={advanced_duration_unit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            expiry_date={expiry_date}\n                            expiry_list={expiry_list}\n                            expiry_type={expiry_type}\n                            getDurationFromUnit={getDurationFromUnit}\n                            market_open_times={market_open_times}\n                            number_input_props={props.number_input}\n                            onChange={onChange}\n                            onChangeUiStore={onChangeUiStore}\n                            server_time={server_time}\n                            shared_input_props={props.shared_input}\n                            start_date={start_date}\n                        /> }\n                    { !is_advanced_duration &&\n                        <SimpleDuration\n                            getDurationFromUnit={getDurationFromUnit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            number_input_props={props.number_input}\n                            shared_input_props={props.shared_input}\n                            simple_duration_unit={simple_duration_unit}\n                        /> }\n                    <DurationToggle\n                        name={'is_advanced_duration'}\n                        onChange={onToggleDurationType}\n                        value={is_advanced_duration}\n                    />\n                </Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    duration              : PropTypes.number,\n    duration_t            : PropTypes.number,\n    duration_unit         : PropTypes.string,\n    duration_units_list   : MobxPropTypes.arrayOrObservableArray,\n    expiry_date           : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    hasDurationUnit     : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    max_value           : PropTypes.number,\n    min_value           : PropTypes.number,\n    onChange            : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    validation_errors: PropTypes.object,\n};\n\nexport default Duration;\n","import PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport { connect }                    from 'Stores/connect';\nimport { convertDurationLimit }       from 'Stores/Modules/Trading/Helpers/duration';\nimport Duration                       from './duration.jsx';\n\nclass DurationWrapper extends React.Component {\n    hasDurationUnit = (duration_unit) => {\n        let duration_list = [...this.props.duration_units_list];\n\n        if (this.props.duration_units_list.length > 1 && !this.props.is_advanced_duration) {\n            duration_list = duration_list.filter(du => du.value === 'm' || du.value === 't');\n        }\n        return duration_list.some(du => du.value === duration_unit);\n    };\n\n    setDurationUnit() {\n        const new_duration_unit  = this.props.duration_units_list[0].value;\n        const new_duration_value = this.props.getDurationFromUnit(new_duration_unit);\n\n        this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: new_duration_unit });\n        this.props.onChangeMultiple({\n            duration_unit: new_duration_unit,\n            duration     : +new_duration_value,\n        });\n    }\n\n    advancedHasWrongExpiry = () => (this.props.is_advanced_duration\n        && this.props.expiry_type !== this.props.advanced_expiry_type);\n\n    handleEndTime = () => {\n        const symbol_has_endtime = this.props.duration_units_list.length > 1  || this.props.is_advanced_duration;\n\n        if (symbol_has_endtime) {\n            // simple duration does not have endtime\n            if (!this.props.is_advanced_duration) this.props.onChangeUiStore({ name: 'is_advanced_duration', value: true });\n\n            this.props.onChangeUiStore({ name: 'advanced_expiry_type', value: 'endtime' });\n        } else {\n            // If query string contains endtime but contract type does not e.g. digits (only ticks contracts)\n            this.props.onChange({ target: { name: 'expiry_type', value: 'duration' } });\n        }\n    };\n\n    getDurationMinMaxValues = (duration_min_max, contract_expiry_type, duration_unit) => {\n        const max_value = convertDurationLimit(+duration_min_max[contract_expiry_type].max, duration_unit);\n        const min_value = convertDurationLimit(+duration_min_max[contract_expiry_type].min, duration_unit);\n\n        return [min_value, max_value];\n    };\n\n    componentDidMount() {\n        const {\n            advanced_duration_unit,\n            advanced_expiry_type,\n            contract_expiry_type,\n            duration,\n            duration_min_max,\n            duration_unit,\n            expiry_type,\n            getDurationFromUnit,\n            is_advanced_duration,\n            onChange,\n            onChangeUiStore,\n            simple_duration_unit,\n        } = this.props;\n\n        const current_unit = is_advanced_duration ? advanced_duration_unit : simple_duration_unit;\n        const current_duration = getDurationFromUnit(current_unit);\n        const [min_value, max_value] =\n            this.getDurationMinMaxValues(duration_min_max, contract_expiry_type, duration_unit);\n\n        if (duration_unit !== current_unit) {\n            onChangeUiStore({ name: `${is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: duration_unit });\n        }\n\n        if (+duration !== +current_duration) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: duration });\n        }\n\n        if (expiry_type === 'endtime') this.handleEndTime();\n\n        if (this.advancedHasWrongExpiry()) {\n            onChange({ target: { name: 'expiry_type', value: advanced_expiry_type } });\n        }\n\n        if (current_duration < min_value) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: min_value });\n            onChange({ target: { name: 'duration', value: min_value } });\n        } else if (current_duration > max_value) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: max_value });\n            onChange({ target: { name: 'duration', value: max_value } });\n        }\n    }\n\n    // intercept changes to contract duration and check that trade_store and ui_store are aligned.\n    componentWillReact() {\n        const {\n            advanced_expiry_type,\n            duration,\n            duration_unit,\n            expiry_type,\n            getDurationFromUnit,\n            is_advanced_duration,\n            onChange,\n            onChangeUiStore,\n        } = this.props;\n\n        const current_duration            = getDurationFromUnit(duration_unit);\n        const simple_is_not_type_duration = (!is_advanced_duration && expiry_type !== 'duration');\n\n        // simple only has expiry type duration\n        if (simple_is_not_type_duration) {\n            onChange({ target: { name: 'expiry_type', value: 'duration' } });\n        }\n\n        if (this.advancedHasWrongExpiry()) {\n            onChange({ target: { name: 'expiry_type', value: advanced_expiry_type } });\n        }\n\n        if (duration !== current_duration) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: duration });\n        }\n    }\n\n    render() {\n        const {\n            advanced_duration_unit,\n            contract_expiry_type,\n            duration_min_max,\n            duration_unit,\n            duration_units_list,\n            is_advanced_duration,\n            simple_duration_unit,\n        } = this.props;\n\n        const current_duration_unit           = (is_advanced_duration ? advanced_duration_unit : simple_duration_unit);\n        const has_missing_duration_unit       = !this.hasDurationUnit(current_duration_unit);\n        const simple_is_missing_duration_unit =\n            (!is_advanced_duration && simple_duration_unit === 'd' && duration_units_list.length === 4);\n        const [min_value, max_value]          =\n            this.getDurationMinMaxValues(duration_min_max, contract_expiry_type, duration_unit);\n\n        if (has_missing_duration_unit || simple_is_missing_duration_unit) {\n            this.setDurationUnit();\n        }\n\n        return (\n            <Duration\n                hasDurationUnit={this.hasDurationUnit}\n                max_value={max_value}\n                min_value={min_value}\n                {...this.props}\n            />\n        );\n    }\n}\n\nDurationWrapper.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.number,\n    duration_d            : PropTypes.number,\n    duration_h            : PropTypes.number,\n    duration_m            : PropTypes.number,\n    duration_min_max      : PropTypes.object,\n    duration_s            : PropTypes.number,\n    duration_t            : PropTypes.number,\n    duration_unit         : PropTypes.string,\n    duration_units_list   : MobxPropTypes.arrayOrObservableArray,\n    expiry_date           : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    onChange            : PropTypes.func,\n    onChangeMultiple    : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    sessions            : MobxPropTypes.arrayOrObservableArray,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time: PropTypes.string,\n    symbol    : PropTypes.string,\n};\n\nexport default connect(({ modules, ui }) => ({\n    advanced_duration_unit: ui.advanced_duration_unit,\n    advanced_expiry_type  : ui.advanced_expiry_type,\n    contract_expiry_type  : modules.trade.contract_expiry_type,\n    duration              : modules.trade.duration,\n    duration_unit         : modules.trade.duration_unit,\n    duration_units_list   : modules.trade.duration_units_list,\n    duration_min_max      : modules.trade.duration_min_max,\n    duration_t            : ui.duration_t,\n    expiry_date           : modules.trade.expiry_date,\n    expiry_time           : modules.trade.expiry_time,\n    expiry_type           : modules.trade.expiry_type,\n    getDurationFromUnit   : ui.getDurationFromUnit,\n    is_advanced_duration  : ui.is_advanced_duration,\n    onChange              : modules.trade.onChange,\n    onChangeUiStore       : ui.onChangeUiStore,\n    onChangeMultiple      : modules.trade.onChangeMultiple,\n    simple_duration_unit  : ui.simple_duration_unit,\n    start_date            : modules.trade.start_date,\n    market_open_times     : modules.trade.market_open_times,\n}))(DurationWrapper);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n}) => {\n    const handleSelect = (item) => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) =>\n                <div className='number-selector__row' key={idx}>\n                    {arr_numbers.map(i =>\n                        <span\n                            key={i}\n                            className={classNames('number-selector__selection', { 'number-selector__selection--selected': selected_number === i })}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {i}\n                        </span>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    selected_number: PropTypes.number,\n};\n\nexport default NumberSelector;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from 'App/i18n';\nimport NumberSelector from 'App/Components/Form/number-selector.jsx';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\nimport { connect }    from 'Stores/connect';\n\nconst LastDigit = ({\n    is_minimized,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            className='trade-container__fieldset'\n            header={localize('Last Digit Prediction')}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default connect(({ modules }) => ({\n    last_digit: modules.trade.last_digit,\n    onChange  : modules.trade.onChange,\n}))(LastDigit);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport Amount                         from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier                        from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration                       from 'Modules/Trading/Components/Form/TradeParams/Duration';\nimport LastDigit                      from 'Modules/Trading/Components/Form/TradeParams/last-digit.jsx';\nimport { connect }                    from 'Stores/connect';\n\nclass TradeParams extends React.Component {\n    isVisible(component_key) {\n        return this.props.form_components.includes(component_key);\n    }\n\n    render () {\n        const { is_minimized } = this.props;\n        return (\n            <React.Fragment>\n                {\n                    this.isVisible('duration') &&\n                    <Duration key={'duration'} is_minimized={is_minimized} />\n                }\n                {\n                    this.isVisible('barrier') &&\n                    <Barrier key={'barrier'} is_minimized={is_minimized} />\n                }\n                {\n                    this.isVisible('last_digit') &&\n                    <LastDigit key={'last_digit'} is_minimized={is_minimized} />\n                }\n                {\n                    this.isVisible('amount') &&\n                    <Amount key={'amount'} is_minimized={is_minimized} />\n                }\n            </React.Fragment>\n        );\n    }\n}\nTradeParams.propTypes = {\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n};\n\nexport default connect(({ modules }) => ({\n    form_components: modules.trade.form_components,\n}))(TradeParams);\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='contract-type-widget__select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames={{\n                enter    : 'contracts-type-dialog--enter',\n                enterDone: 'contracts-type-dialog--enterDone',\n                exit     : 'contracts-type-dialog--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='contracts-type-dialog'>\n                <div className='contracts-type-dialog__list-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport classNames                     from 'classnames';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport Icon                           from 'Assets/icon.jsx';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    is_equal,\n    handleInfoClick,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        <div\n            key={idx}\n            className={classNames('contract-type-item', {\n                'contract-type-item--selected' : value === contract.value,\n                'contract-type-item--invisible': (contract.value === 'rise_fall' && is_equal) || (contract.value === 'rise_fall_equal' && !is_equal),\n            })}\n            name={name}\n            value={contract.value}\n            onClick={(e) => handleSelect(contract, e)}\n        >\n            <Icon icon='IconTradeCategory' category={contract.value} className='contract-type-item__icon-wrapper' />\n            <span className='contract-type-item__title'>\n                {contract.text}\n            </span>\n            <div id='info-icon' className='contract-type-item__icon' onClick={() => handleInfoClick(contract)}>\n                <Icon icon='IconInfoOutline' />\n            </div>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts      : MobxPropTypes.arrayOrObservableArray,\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    is_equal       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    name : PropTypes.string,\n    value: PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract-type-item.jsx';\n\nconst ContractTypeList = ({\n    handleInfoClick,\n    handleSelect,\n    is_equal,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            // TODO: Remove this line after other contracts are ready to be served\n            !['In/Out', 'Asians'].includes(key) &&\n            <React.Fragment key={key}>\n                <div className='contract-type-list'>\n                    <div className='contract-type-list__label'><span>{key}</span></div>\n                    <div className='contract-type-list__contracts-wrapper'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                            handleInfoClick={handleInfoClick}\n                            is_equal={is_equal}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    is_equal       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    list : MobxPropTypes.objectOrObservableObject,\n    name : PropTypes.string,\n    value: PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst TradeTypeInfoDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n    title,\n}) => (\n    is_mobile ?\n        <FullScreenDialog\n            visible={open}\n            onClose={onClose}\n            title={title}\n            wrapperClassName='trade-type-info-modal'\n        >\n            {children}\n        </FullScreenDialog>\n        :\n        <CSSTransition\n            classNames={{\n                enter    : 'trade-type-info-dialog--enter',\n                enterDone: 'trade-type-info-dialog--enterDone',\n                exit     : 'trade-type-info-dialog--exit',\n            }}\n            in={open}\n            timeout={100}\n            unmountOnExit\n        >\n            <div className='trade-type-info-dialog'>\n                <div className='trade-type-info-dialog__info-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nTradeTypeInfoDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n    title    : PropTypes.string,\n};\n\nexport default TradeTypeInfoDialog;\n","import classNames         from 'classnames';\nimport PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { Scrollbars }     from 'tt-react-custom-scrollbars';\nimport Button             from 'deriv-components/lib/button';\nimport Icon               from 'Assets/icon.jsx';\nimport { localize }       from 'App/i18n';\n\nconst TradeTypeInfoItem = ({\n    handleNavigationClick,\n    handleNextClick,\n    handlePrevClick,\n    is_dark_theme,\n    is_mobile,\n    item,\n    item_index,\n    itemList,\n    onBackButtonClick,\n    onSubmitButtonClick,\n}) => (\n    <React.Fragment>\n        {!is_mobile &&\n        <div className='trade-type-info-dialog__header'>\n            <span onClick={() => onBackButtonClick()}>\n                <Icon icon='IconBack' />\n            </span>\n            <span className='title'>{item.text}</span>\n        </div>\n        }\n        <div className='trade-type-info-dialog__body'>\n            <div\n                className='trade-type-info-dialog__card-wrapper'\n                // total calculated below is from 258px and 16px horizontal margin set in trade-info-dialog css\n                style={{ 'transform': `translate3d(-${(274 * item_index)}px, 0, 0)`  }}\n            >\n                {\n                    itemList.map((type, idx) => (\n                        <div className='trade-type-info-dialog__card' key={idx}>\n                            <div className='trade-type-info-dialog__gif'>\n                                <Icon\n                                    icon='TradeCategoriesGIF'\n                                    category={type.value}\n                                    className='trade-type-info-dialog__gif-image'\n                                    is_dark_theme={is_dark_theme}\n                                />\n                            </div>\n                            <div className='trade-type-info-dialog__content'>\n                                <Scrollbars\n                                    autoHide\n                                    style={{ height: '100%' }}\n                                >\n                                    <Icon icon='TradeCategories' category={type.value} />\n                                </Scrollbars>\n                            </div>\n                            <div>\n                                <Button\n                                    className='btn--primary--orange trade-type-info-dialog__choose-button'\n                                    onClick={() => onSubmitButtonClick(type)}\n                                    text={localize('Choose')}\n                                />\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n        <div className='trade-type-info-navigation'>\n            <div className='trade-type-info-navigation__icon' onClick={() => handlePrevClick(itemList)} >\n                <Icon icon='IconChevronLeft' />\n            </div>\n            <div className='trade-type-info-navigation__list'>\n                <i\n                    className={classNames(\n                        'trade-type-info-navigation__circle-button',\n                        'trade-type-info-navigation__circle-button--active')}\n                    style={{ 'transform': `translate3d(${16 * item_index}px, 0, 0)` }}\n                />\n                {\n                    itemList.map((contract, idx) => (\n                        <React.Fragment key={idx}>\n                            <div\n                                className='trade-type-info-navigation__circle-button'\n                                onClick={() => handleNavigationClick(contract)}\n                            />\n                        </React.Fragment>\n                    ))\n                }\n            </div>\n            <div className='trade-type-info-navigation__icon' onClick={() => handleNextClick(itemList)} >\n                <Icon icon='IconChevronRight' />\n            </div>\n        </div>\n    </React.Fragment>\n);\n\nTradeTypeInfoItem.propTypes = {\n    handleNavigationClick: PropTypes.func,\n    handleNextClick      : PropTypes.func,\n    handlePrevClick      : PropTypes.func,\n    is_dark_theme        : PropTypes.bool,\n    is_mobile            : PropTypes.bool,\n    item                 : PropTypes.object,\n    item_index           : PropTypes.number,\n    itemList             : PropTypes.array,\n    onBackButtonClick    : PropTypes.func,\n    onSubmitButtonClick  : PropTypes.func,\n};\n\nexport default TradeTypeInfoItem;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport Icon                from 'Assets/icon.jsx';\nimport ContractTypeDialog  from './contract-type-dialog.jsx';\nimport ContractTypeList    from './contract-type-list.jsx';\nimport TradeTypeInfoDialog from '../TradeTypeInfo/trade-type-info-dialog.jsx';\nimport TradeTypeInfoItem   from '../TradeTypeInfo/trade-type-info-item.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    state = {\n        is_dialog_open     : false,\n        is_info_dialog_open: false,\n        item               : {},\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item, e) => {\n        if (item.value !== this.props.value && e.target.id !== 'info-icon') {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    onSubmitButtonClick = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleInfoVisibility();\n    };\n\n    handleInfoClick = (item) => {\n        this.setState({ item });\n        this.handleInfoVisibility();\n        this.handleVisibility();\n    };\n\n    handleNavigationClick = (item) => {\n        this.setState({ item });\n    };\n\n    handleNextClick = (itemList) => {\n        const navigationLength = itemList.length;\n        const item = this.state.item;\n        const currentIndex = itemList.findIndex((list_item) => list_item.value === item.value);\n        const nextIndex = currentIndex + 1;\n        if (nextIndex < navigationLength) {\n            this.handleNavigationClick(itemList[nextIndex]);\n        } else {\n            this.handleNavigationClick(itemList[0]);\n        }\n    };\n\n    handlePrevClick = (itemList) => {\n        const navigationLength = itemList.length;\n        const item = this.state.item;\n        const currentIndex = itemList.findIndex((list_item) => list_item.value === item.value);\n        const prevIndex = currentIndex - 1;\n        if (prevIndex > -1) {\n            this.handleNavigationClick(itemList[prevIndex]);\n        } else {\n            this.handleNavigationClick(itemList[navigationLength - 1]);\n        }\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        } else if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_info_dialog_open) {\n            this.setState({\n                is_dialog_open     : false,\n                is_info_dialog_open: false,\n            });\n        }\n    };\n\n    handleInfoVisibility = () => {\n        this.setState((state) => ({\n            is_info_dialog_open: !state.is_info_dialog_open,\n        }));\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    onWidgetClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    onBackButtonClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getItemIndex = (curr_item, itemList) => itemList.findIndex((list_item) => list_item.value === curr_item.value);\n\n    getItemList = () => {\n        const itemList = [];\n        const list = this.props.list;\n        /* eslint-disable */\n        Object.keys(list).map(key => {\n            !['In/Out', 'Asians'].includes(key) && list[key].map(contract => {\n                (contract.value !== 'rise_fall_equal') && itemList.push(contract);\n            });\n        });\n        /* eslint-disable */\n        return itemList;\n    };\n\n    render() {\n        const { is_dark_theme, is_equal, is_mobile, list, name, value } = this.props;\n        const { is_dialog_open, is_info_dialog_open, item }             = this.state;\n        const item_index = this.getItemIndex(item, this.getItemList());\n        return (\n            <div\n                className='contract-type-widget dropdown--left'\n                ref={this.setWrapperRef}\n                tabIndex='0'\n            >\n                <div\n                    className={classNames('contract-type-widget__display', {\n                        'contract-type-widget__display--clicked': (is_dialog_open || is_info_dialog_open),\n                    })}\n                    onClick={this.onWidgetClick}\n                >\n                    <Icon\n                        icon='IconTradeCategory'\n                        category={value}\n                        className='contract-type-widget__icon-wrapper'\n                    />\n                    <span name={name} value={value}>\n                        {this.getDisplayText()}\n                    </span>\n                    <Icon\n                        icon='IconArrow'\n                        className={classNames(\n                          'contract-type-widget__select-arrow',\n                          'contract-type-widget__select-arrow--left')}\n                    />\n                </div>\n\n                <ContractTypeDialog\n                    is_mobile={is_mobile}\n                    onClose={this.handleVisibility}\n                    open={is_dialog_open}\n                >\n                    <ContractTypeList\n                        handleInfoClick={this.handleInfoClick}\n                        handleSelect={this.handleSelect}\n                        is_equal={is_equal}\n                        list={list}\n                        name={name}\n                        value={value}\n                    />\n                </ContractTypeDialog>\n                <TradeTypeInfoDialog\n                    is_mobile={is_mobile}\n                    onClose={this.handleInfoClick}\n                    open={is_info_dialog_open}\n                    title={item.text}\n                >\n                    <TradeTypeInfoItem\n                        handleNavigationClick={this.handleNavigationClick}\n                        handleNextClick={this.handleNextClick}\n                        handlePrevClick={this.handlePrevClick}\n                        is_dark_theme={is_dark_theme}\n                        is_mobile={is_mobile}\n                        item={item}\n                        item_index={item_index < 0 ? undefined : item_index}\n                        itemList={this.getItemList()}\n                        onBackButtonClick={this.onBackButtonClick}\n                        onSubmitButtonClick={this.onSubmitButtonClick}\n                    />\n                </TradeTypeInfoDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_dark_theme: PropTypes.bool,\n    is_equal           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract-type-widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    is_dark_theme,\n    is_equal,\n    is_mobile,\n    onChange,\n}) => (\n    <ContractTypeWidget\n        is_dark_theme={is_dark_theme}\n        is_equal={is_equal}\n        is_mobile={is_mobile}\n        list={contract_types_list}\n        name='contract_type'\n        onChange={onChange}\n        value={contract_type}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_equal           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_mobile: PropTypes.bool,\n    onChange : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        is_equal           : modules.trade.is_equal,\n        onChange           : modules.trade.onChange,\n        is_dark_theme      : ui.is_dark_mode_on,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","import PropTypes from 'prop-types';\n\nexport const CommonPropTypes = {\n    calendar_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    isPeriodDisabled: PropTypes.func,\n    selected_date   : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    updateSelected: PropTypes.func,\n};\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { padLeft }         from '_common/string_util';\nimport { localize }        from 'App/i18n';\nimport { Popover }         from 'App/Components/Elements/Popover';\nimport {\n    getDaysOfTheWeek,\n    week_headers_abbr }    from 'Constants/date-time';\nimport {\n    addDays,\n    addMonths,\n    daysFromTodayTo,\n    epochToMoment,\n    subDays,\n    subMonths,\n    toMoment }             from 'Utils/Date';\nimport { CommonPropTypes } from './types';\n\nconst getDays = ({\n    calendar_date,\n    date_format,\n    has_range_selection,\n    hide_others,\n    holidays,\n    hovered_date,\n    isPeriodDisabled,\n    start_date,\n    selected_date,\n    updateSelected,\n    weekends,\n    onMouseOver,\n    onMouseLeave,\n}) => {\n    // adjust Calendar week by 1 day so that Calendar week starts on Monday\n    // change to zero to set Calendar week to start on Sunday\n    const day_offset = 1;\n\n    const dates = [];\n    const days  = [];\n    const moment_today       = toMoment().startOf('day');\n    const moment_cur_date    = toMoment(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const moment_selected    = typeof selected_date === 'number' ? epochToMoment(selected_date).startOf('day') : toMoment(selected_date).startOf('day');\n\n    // populate previous months' dates\n    const end_of_prev_month = subMonths(moment_cur_date, 1).endOf('month').day();\n    for (let i = end_of_prev_month; i > 0; i--) {\n        dates.push(subDays(moment_month_start, i).format(date_format));\n    }\n    // populate current months' dates\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    // populate next months' dates\n    const start_of_next_month = addMonths(moment_cur_date, 1).startOf('month').day();\n    if (start_of_next_month - day_offset > 0 || dates.length <= 28) {\n        // if start_of_next_month doesn't falls on Monday, append rest of the week\n        for (let i = 1; i <= 7 - start_of_next_month + day_offset; i++) {\n            dates.push(addDays(moment_month_end, i, 'day').format(date_format));\n        }\n    } else if (!start_of_next_month) {\n        // if start_of_next_month falls on Sunday, append 1 day\n        dates.push(addDays(moment_month_end, 1).format(date_format));\n    }\n\n    const moment_start_date = toMoment(start_date).startOf('day');\n\n    dates.map((date) => {\n        const moment_date    = toMoment(date).startOf('day');\n        const moment_hovered = toMoment(hovered_date).startOf('day');\n        const is_active      = selected_date && moment_date.isSame(moment_selected);\n        const is_today       = moment_date.isSame(moment_today, 'day');\n\n        const events          = holidays.filter(event =>\n            // filter by date or day of the week\n            event.dates.find(d => d === date || getDaysOfTheWeek(d) === toMoment(date).day()));\n        const has_events           = !!events.length;\n        const is_closes_early      = events.map(event => !!event.descrip.match(/Closes early|Opens late/))[0];\n        const message              = events.map(event => event.descrip)[0] || '';\n        const duration_from_today  = daysFromTodayTo(date);\n        const is_between           = moment_date.isBetween(moment_today, moment_selected);\n        const is_between_hover     = moment_date.isBetween(moment_today, moment_hovered);\n        const is_before_min_or_after_max_date = isPeriodDisabled(moment_date, 'day');\n        const is_disabled =\n            // check if date is before min_date or after_max_date\n            is_before_min_or_after_max_date\n            // for forward starting accounts, only show same day as start date and the day after\n            || ((start_date && (moment_date.isBefore(moment_start_date))))\n            // check if weekends are disabled\n            || weekends.some(day => toMoment(date).day() === day)\n            // check if date falls on holidays, and doesn't close early or opens late\n            || has_events && !is_closes_early;\n\n        // show 'disabled' style for dates that is not in the same calendar month, it should still be clickable\n        const is_other_month = moment_date.month() !== moment_cur_date.month();\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar__cell', {\n                    'calendar__cell--active'         : is_active,\n                    'calendar__cell--today'          : is_today,\n                    'calendar__cell--active-duration': is_active && has_range_selection && !is_today,\n                    'calendar__cell--today-duration' : is_today && has_range_selection,\n                    'calendar__cell--disabled'       : is_disabled,\n                    'calendar__cell--is-hidden'      : is_other_month && hide_others,\n                    'calendar__cell--other'          : is_other_month,\n                    'calendar__cell--between-hover'  : is_between_hover && has_range_selection,\n                    'calendar__cell--between'        : is_between && has_range_selection,\n                })}\n                onClick={is_disabled ? undefined : (e) => updateSelected(e, 'day')}\n                data-date={date}\n                data-duration={`${duration_from_today} ${ duration_from_today === 1 ? localize('Day') : localize('Days') }`}\n                onMouseOver={onMouseOver}\n                onMouseLeave={onMouseLeave}\n            >\n                {((has_events || is_closes_early) && !is_other_month && !is_before_min_or_after_max_date) &&\n                    <Popover\n                        alignment='top'\n                        classNameTarget='calendar__cell-tooltip'\n                        classNameTargetIcon='calendar__cell-tooltip-icon'\n                        icon='dot'\n                        message={message}\n                    />\n                }\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar__body calendar__body--date'>\n            { Object.keys(week_headers_abbr)\n                .map((item, idx) => (\n                    <span key={idx} className='calendar__text calendar__text--bold'>{week_headers_abbr[item]}</span>\n                ))\n            }\n            { days }\n        </div>\n    );\n};\n\nCalendarDays.defaultProps = {\n    holidays: [],\n    weekends: [],\n};\n\nCalendarDays.propTypes = {\n    ...CommonPropTypes,\n    date_format        : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    hovered_date: PropTypes.string,\n    onMouseLeave: PropTypes.func,\n    onMouseOver : PropTypes.func,\n    start_date  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n","import classNames        from 'classnames';\nimport React             from 'react';\nimport { month_headers } from 'Constants/date-time';\nimport { toMoment }      from 'Utils/Date';\nimport { CommonPropTypes }   from './types';\n\nexport const CalendarMonths = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_date          = toMoment(calendar_date);\n    const moment_selected_date = toMoment(selected_date);\n\n    return (\n        <div className='calendar__body calendar__body--month'>\n            { Object.keys(month_headers).map((month, idx) => {\n                const is_active   = month === moment_selected_date.clone().format('MMM') && moment_selected_date.isSame(moment_date, 'year');\n                const is_disabled = isPeriodDisabled(moment_date.clone().month(month), 'month');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'month')}\n                        data-month={month}\n                    >\n                        {month_headers[month]}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport { CommonPropTypes } from './types';\nimport { getDecade }   from '../helper';\n\nexport const CalendarYears = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const [start_of_decade, end_of_decade] = getDecade(moment_date).split('-');\n\n    const years = [];\n    for (let year = +start_of_decade - 1; year <= +end_of_decade + 1; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar__body calendar__body--year'>\n            { years.map((year, idx) => {\n                const is_other_decade = idx === 0 || idx === 11;\n                const is_disabled     = isPeriodDisabled(moment_date.clone().year(year), 'year');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : year === moment_selected.year(),\n                            'calendar__cell--other'   : is_other_decade,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'year')}\n                        data-year={year}\n                    >\n                        {year}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport { CommonPropTypes } from './types';\nimport {\n    getCentury,\n    getDecade }        from '../helper';\n\nexport const CalendarDecades = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const start_year      = getCentury(moment_date).split('-')[0];\n\n    const decades = [];\n    let min_year = +start_year - 10;\n    for (let i = 0; i < 12; i++) {\n        const decade = getDecade(toMoment().year(min_year));\n        decades.push(decade);\n        min_year = +decade.split('-')[1] + 1;\n    }\n    return (\n        <div className='calendar__body calendar__body--decade'>\n            { decades.map((decade, idx) => {\n                const [start_of_decade, end_of_decade] = decade.split('-');\n                const is_active    = +start_of_decade === moment_selected.year();\n                const is_disabled  = isPeriodDisabled(moment_date.clone().year(start_of_decade), 'year') &&\n                    isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year');\n                const is_other_century = idx === 0 || idx === 11;\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                            'calendar__cell--other'   : is_other_century,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'decade')}\n                        data-decade={decade}\n                    >\n                        {decade}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CommonPropTypes };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nconst CalendarBody = (props) => {\n    const calendar_body = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <React.Fragment>\n            { calendar_body[props.calendar_view] }\n        </React.Fragment>\n    );\n};\n\nCalendarBody.propTypes = {\n    calendar_view: PropTypes.string,\n};\n\nexport default CalendarBody;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick, className }) => (\n    <button\n        className={className}\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func.isRequired,\n};\n\nexport default CloseButton;\n","export const default_delay = 3000;\n\nexport const max_display_notifications = 3;\n\nexport const types = {\n    danger       : 'notification--danger',\n    info         : 'notification--info',\n    success      : 'notification--success',\n    warning      : 'notification--warning',\n    contract_sold: 'notification--info',\n};\n\nexport const sortNotifications = (() => {\n    const notification_order = {\n        contract_sold: 1,\n        danger       : 2,\n        warning      : 3,\n        info         : 4,\n        success      : 5,\n    };\n\n    return (a, b) => notification_order[a.type] - notification_order[b.type];\n})();\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport classNames  from 'classnames';\nimport Icon        from 'Assets/icon.jsx';\nimport CloseButton from './close-button.jsx';\nimport {\n    default_delay,\n    types }        from './constants';\n\nconst Notification = ({\n    data,\n    removeNotification,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeNotification(data);\n\n        if (data.closeOnClick) {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close) {\n        setTimeout(destroy, data.delay || default_delay);\n    }\n\n    return (\n        <div className={\n            classNames('notification', types[data.type], {\n                'notification--small': (data.size === 'small'),\n            })}\n        >\n            <div className='notification__icon'>\n                { data.type === 'danger'  && <Icon icon='IconDanger' className='notification__icon-type' /> }\n                { (data.type === 'info' || data.type === 'contract_sold')\n                    && <Icon icon='IconInformation' className='notification__icon-type' /> }\n                { data.type === 'success' && <Icon icon='IconSuccess' className='notification__icon-type' /> }\n                { data.type === 'warning' && <Icon icon='IconWarning' className='notification__icon-type' /> }\n            </div>\n            <div className='notification__text-container'>\n                <h4 className='notification__header'>{data.header}</h4>\n                <p className='notification__text-body'> {data.message}</p>\n            </div>\n            { data.should_hide_close_btn ? undefined : <CloseButton onClick={onClick} className='notification__close-button' />}\n        </div>\n    );\n};\n\nNotification.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick         : PropTypes.func,\n        delay                : PropTypes.number,\n        header               : PropTypes.string,\n        is_auto_close        : PropTypes.bool,\n        message              : PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n        should_hide_close_btn: PropTypes.bool,\n        size                 : PropTypes.oneOf(['small']),\n        type                 : PropTypes.oneOf(['warning', 'info', 'success', 'danger', 'contract_sold']).isRequired,\n    }),\n    removeNotification: PropTypes.func,\n};\n\nexport default Notification;\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { getLocalizedBasis } from 'Stores/Modules/Trading/Constants/contract';\nimport { localize }          from 'App/i18n';\nimport Money                 from 'App/Components/Elements/money.jsx';\nimport { Popover }           from 'App/Components/Elements/Popover';\nimport Icon                  from 'Assets/icon.jsx';\n\nconst ContractInfo = ({\n    basis,\n    currency,\n    has_increased,\n    is_loading,\n    should_fade,\n    is_visible,\n    proposal_info,\n}) => {\n    const localized_basis = getLocalizedBasis();\n    const stakeOrPayout = () => {\n        switch (basis) {\n            case 'stake':\n                return localized_basis.payout;\n            case 'payout':\n                return localized_basis.stake;\n            default:\n                return basis;\n        }\n    };\n\n    const has_error_or_not_loaded = proposal_info.has_error || !proposal_info.id;\n    return (\n        <div className='trade-container__price'>\n            <div className={classNames(\n                'trade-container__price-info',\n                {\n                    'trade-container__price-info--disabled': has_error_or_not_loaded,\n                    'trade-container__price-info--slide'   : is_loading && !should_fade,\n                    'trade-container__price-info--fade'    : is_loading && should_fade,\n                })}\n            >\n                <div className='trade-container__price-info-basis'>\n                    {has_error_or_not_loaded\n                        ? stakeOrPayout()\n                        : localize('{{value}}', { value: proposal_info.obj_contract_basis.text })\n                    }\n                </div>\n                <div className='trade-container__price-info-value'>\n                    {!has_error_or_not_loaded &&\n                    <Money amount={proposal_info.obj_contract_basis.value} className='trade-container__price-info-currency' currency={currency} />\n                    }\n                </div>\n                {is_visible &&\n                <div className='trade-container__price-info-movement'>\n                    {(!has_error_or_not_loaded && has_increased !== null) &&\n                        <Icon icon='IconPriceMove' type={has_increased ? 'profit' : 'loss'} />\n                    }\n                </div>\n                }\n            </div>\n            <Popover\n                alignment='left'\n                icon='info'\n                margin={210}\n                message={has_error_or_not_loaded ? '' : proposal_info.message }\n            />\n        </div>\n    );\n};\nContractInfo.propTypes = {\n    basis        : PropTypes.string,\n    currency     : PropTypes.string,\n    has_increased: PropTypes.bool,\n    is_loading   : PropTypes.bool,\n    is_visible   : PropTypes.bool,\n    proposal_info: PropTypes.object,\n};\n\nexport default ContractInfo;\n","import classNames                 from 'classnames';\nimport PropTypes                  from 'prop-types';\nimport React                      from 'react';\nimport Button                     from 'deriv-components/lib/button';\nimport { localize }               from 'App/i18n';\nimport Icon                       from 'Assets/icon.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\n\nconst PurchaseButton = ({\n    buy_info,\n    index,\n    info,\n    is_contract_mode,\n    is_disabled,\n    is_high_low,\n    is_loading,\n    is_proposal_empty,\n    purchased_states_arr,\n    setPurchaseState,\n    should_fade,\n    onClickPurchase,\n    type,\n}) => {\n    const getIconType = () => {\n        if (!should_fade && is_loading) return '';\n        return (is_high_low) ? `${type.toLowerCase()}_barrier` : type.toLowerCase();\n    };\n    const is_button_disabled = ((is_contract_mode || is_disabled) && !is_loading) || is_proposal_empty;\n\n    return (\n        <Button\n            is_disabled={is_contract_mode || is_disabled}\n            id={`purchase_${type}`}\n            className={classNames(\n                'btn-purchase',\n                {\n                    'btn-purchase--disabled'       : is_button_disabled || !!(buy_info.error),\n                    'btn-purchase--animated--slide': is_loading && !should_fade,\n                    'btn-purchase--animated--fade' : is_loading && should_fade,\n                    'btn-purchase--swoosh'         : !!(purchased_states_arr[index]),\n                })}\n            onClick={() => {\n                setPurchaseState(index);\n                onClickPurchase(info.id, info.stake, type);\n            }}\n        >\n            <React.Fragment>\n                <div className='btn-purchase__info btn-purchase__info--left'>\n                    <div className='btn-purchase__type-wrapper'>\n                        <div className='btn-purchase__icon_wrapper'>\n                            <Icon\n                                icon='IconTradeType'\n                                className='btn-purchase__icon'\n                                type={getIconType()}\n                            />\n                        </div>\n                        <div className='btn-purchase__text_wrapper'>\n                            <span className='btn-purchase__text'>\n                                {(!should_fade && is_loading) ? '' : localize('{{value}}', { value: getContractTypeDisplay(type, is_high_low) })}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div className='btn-purchase__effect-detail' />\n                <div className='btn-purchase__effect-detail--arrow' />\n                <div className='btn-purchase__info btn-purchase__info--right'>\n                    <div className='btn-purchase__text_wrapper'>\n                        <span className='btn-purchase__text'>{!(is_loading || is_disabled) ? info.returns : ''}</span>\n                    </div>\n                </div>\n            </React.Fragment>\n        </Button>\n    );\n};\n\nPurchaseButton.propTypes = {\n    buy_info            : PropTypes.object,\n    currency            : PropTypes.string,\n    index               : PropTypes.number,\n    info                : PropTypes.object,\n    is_contract_mode    : PropTypes.bool,\n    is_disabled         : PropTypes.bool,\n    is_high_low         : PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_proposal_empty   : PropTypes.bool,\n    onClickPurchase     : PropTypes.func,\n    purchased_states_arr: PropTypes.array,\n    setPurchaseState    : PropTypes.func,\n    type                : PropTypes.string,\n};\n\nexport default PurchaseButton;\n","import classNames     from 'classnames';\nimport React          from 'react';\nimport PropTypes      from 'prop-types';\n// import { localize }   from 'App/i18n';\n// import { PopConfirm } from 'App/Components/Elements/PopConfirm';\nimport { Popover }    from 'App/Components/Elements/Popover';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\nimport ContractInfo   from 'Modules/Trading/Components/Form/Purchase/contract-info.jsx';\n// import PurchaseLock   from 'Modules/Trading/Components/Form/Purchase/PurchaseLock';\nimport PurchaseButton from 'Modules/Trading/Components/Elements/purchase-button.jsx';\n\nclass PurchaseFieldset extends React.PureComponent {\n    state = { should_fade: false };\n\n    componentDidMount() {\n        this.setState({ should_fade: true });\n    }\n\n    render() {\n        const {\n            basis,\n            buy_info,\n            currency,\n            // index,\n            info,\n            index,\n            is_contract_mode,\n            is_disabled,\n            is_high_low,\n            is_loading,\n            is_proposal_empty,\n            is_proposal_error,\n            purchased_states_arr,\n            // is_purchase_confirm_on,\n            // is_purchase_locked,\n            onClickPurchase,\n            onHoverPurchase,\n            // togglePurchaseLock,\n            setPurchaseState,\n            type,\n        } = this.props;\n\n        const purchase_button = (\n            <PurchaseButton\n                buy_info={buy_info}\n                currency={currency}\n                info={info}\n                index={index}\n                is_contract_mode={is_contract_mode}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={is_loading}\n                is_proposal_empty={is_proposal_empty}\n                purchased_states_arr={purchased_states_arr}\n                onClickPurchase={onClickPurchase}\n                setPurchaseState={setPurchaseState}\n                should_fade={this.state.should_fade}\n                type={type}\n            />\n        );\n\n        return (\n            <Fieldset\n                className='trade-container__fieldset purchase-container__option'\n            >\n                {/* {(is_purchase_locked && index === 0) && */}\n                {/* <PurchaseLock onClick={togglePurchaseLock} /> */}\n                {/* } */}\n                <React.Fragment>\n                    <ContractInfo\n                        basis={basis}\n                        currency={currency}\n                        proposal_info={info}\n                        has_increased={info.has_increased}\n                        is_loading={is_loading}\n                        should_fade={this.state.should_fade}\n                        is_visible={!is_contract_mode}\n                    />\n                    <div\n                        className={classNames(\n                            'btn-purchase__shadow-wrapper', {\n                                'btn-purchase__shadow-wrapper--disabled': (is_proposal_error || is_disabled),\n                            },\n                        )}\n                        onMouseEnter={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(true, type);\n                            }\n                        }}\n                        onMouseLeave={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(false);\n                            }\n                        }}\n                    >\n                        <div className='btn-purchase__box-shadow' />\n                        {(is_proposal_error) ?\n                            <Popover\n                                alignment='left'\n                                classNameBubble='purchase-container__popover-bubble'\n                                message={info.message}\n                            >\n                                { purchase_button }\n                            </Popover>\n                            :\n                            purchase_button\n                        }\n                        {\n                            // is_purchase_confirm_on ?\n                            //     <PopConfirm\n                            //         alignment='left'\n                            //         cancel_text={localize('Cancel')}\n                            //         confirm_text={localize('Purchase')}\n                            //         message={localize('Are you sure you want to purchase this contract?')}\n                            //     >\n                            //         {purchase_button}\n                            //     </PopConfirm>\n                            //     :\n                            //     purchase_button\n                        }\n                    </div>\n                </React.Fragment>\n            </Fieldset>\n        );\n    }\n}\n\nPurchaseFieldset.propTypes = {\n    basis               : PropTypes.string,\n    buy_info            : PropTypes.object,\n    currency            : PropTypes.string,\n    index               : PropTypes.number,\n    info                : PropTypes.object,\n    is_contract_mode    : PropTypes.bool,\n    is_disabled         : PropTypes.bool,\n    is_high_low         : PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_proposal_empty   : PropTypes.bool,\n    is_proposal_error   : PropTypes.bool,\n    onClickPurchase     : PropTypes.func,\n    // is_purchase_confirm_on: PropTypes.bool,\n    // is_purchase_locked    : PropTypes.bool,\n    onHoverPurchase     : PropTypes.func,\n    purchased_states_arr: PropTypes.array,\n    // togglePurchaseLock    : PropTypes.func,\n    setPurchaseState    : PropTypes.func,\n    type                : PropTypes.string,\n};\n\nexport default PurchaseFieldset;\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { isEmptyObject }           from '_common/utility';\nimport PurchaseFieldset            from 'Modules/Trading/Components/Elements/purchase-fieldset.jsx';\nimport { getContractTypePosition } from 'Constants/contract';\nimport { connect }                 from 'Stores/connect';\n\nconst Purchase = ({\n    basis,\n    contract_type,\n    currency,\n    is_contract_mode,\n    is_client_allowed_to_visit,\n    // is_purchase_confirm_on,\n    purchased_states_arr,\n    // is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    // togglePurchaseLock,\n    purchase_info,\n    proposal_info,\n    setPurchaseState,\n    trade_types,\n    validation_errors,\n}) => {\n    const is_high_low = /high_low/.test(contract_type.toLowerCase());\n    const isLoading = info => {\n        const has_validation_error = Object.values(validation_errors).some(e => e.length);\n        return !has_validation_error && !info.has_error && !info.id;\n    };\n    const is_proposal_empty = isEmptyObject(proposal_info);\n\n    const components = [];\n    Object.keys(trade_types).map((type, index) => {\n        const getSortedIndex = () => {\n            if (getContractTypePosition(type) === 'top') return 0;\n            if (getContractTypePosition(type) === 'bottom') return 1;\n            return index;\n        };\n        const info              = proposal_info[type] || {};\n        const is_disabled       = is_contract_mode\n            || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n        const is_proposal_error = info.has_error && !info.has_error_details;\n        const purchase_fieldset = (\n            <PurchaseFieldset\n                basis={basis}\n                buy_info={purchase_info}\n                currency={currency}\n                info={info}\n                key={index}\n                index={getSortedIndex()}\n                is_contract_mode={is_contract_mode}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={isLoading(info)}\n                // is_purchase_confirm_on={is_purchase_confirm_on}\n                is_proposal_empty={is_proposal_empty}\n                is_proposal_error={is_proposal_error}\n                purchased_states_arr={purchased_states_arr}\n                // is_purchase_locked={is_purchase_locked}\n                // togglePurchaseLock={togglePurchaseLock}\n                onHoverPurchase={onHoverPurchase}\n                onClickPurchase={onClickPurchase}\n                setPurchaseState={setPurchaseState}\n                type={type}\n            />\n        );\n\n        switch (getContractTypePosition(type)) {\n            case 'top':\n                components.unshift(purchase_fieldset);\n                break;\n            case 'bottom':\n                components.push(purchase_fieldset);\n                break;\n            default:\n                components.push(purchase_fieldset);\n                break;\n        }\n    });\n\n    return components;\n};\n\nPurchase.propTypes = {\n    basis                     : PropTypes.string,\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_contract_mode          : PropTypes.bool,\n    // is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    purchased_states_arr      : PropTypes.array,\n    setPurchaseState          : PropTypes.func,\n    // togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n    validation_errors         : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        is_contract_mode          : modules.smart_chart.is_contract_mode,\n        basis                     : modules.trade.basis,\n        contract_type             : modules.trade.contract_type,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        validation_errors         : modules.trade.validation_errors,\n        purchased_states_arr      : ui.purchase_states,\n        setPurchaseState          : ui.setPurchaseState,\n        // is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        // is_purchase_locked        : ui.is_purchase_lock_on,\n        // togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CalendarButton = ({\n    children,\n    className,\n    is_hidden,\n    label,\n    onClick,\n}) => (\n    <React.Fragment>\n        { !is_hidden &&\n            <div\n                className={className}\n                onClick={onClick}\n            >\n                {label}\n                {children}\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport default CalendarButton;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport Icon              from 'Assets/icon.jsx';\nimport { month_headers } from 'Constants/date-time';\nimport {\n    addMonths,\n    addYears,\n    subMonths,\n    subYears,\n    toMoment }           from 'Utils/Date';\nimport CalendarButton    from './calendar-button.jsx';\nimport {\n    getCentury,\n    getDecade }          from './helper';\n\nconst CalendarHeader = ({\n    calendar_date,\n    calendar_view,\n    disable_month_selector,\n    disable_year_selector,\n    hide_disabled_periods,\n    isPeriodDisabled,\n    navigateTo,\n    switchView,\n}) => {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = toMoment(calendar_date);\n\n    let num_of_years = 1;\n    if (is_year_view)   num_of_years = 10;\n    if (is_decade_view) num_of_years = 100;\n\n    const century = getCentury(moment_date.clone());\n    const decade  = getDecade(moment_date.clone());\n    const end_of_decade = (is_year_view ? decade : century).split('-')[1];\n\n    const is_prev_month_disabled  = isPeriodDisabled(subMonths(moment_date, 1), 'month');\n    const is_prev_year_disabled   = isPeriodDisabled(subYears(moment_date, num_of_years), 'month');\n    const is_next_month_disabled  = isPeriodDisabled(addMonths(moment_date, 1), 'month');\n    const is_next_year_disabled   = isPeriodDisabled(addYears(moment_date, num_of_years), 'month');\n    const is_select_year_disabled = isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year') || disable_year_selector;\n    const should_hide_next_month  = is_next_month_disabled && hide_disabled_periods;\n    const should_hide_prev_month  = is_prev_month_disabled && hide_disabled_periods;\n    const should_hide_prev_year   = is_prev_year_disabled && hide_disabled_periods;\n    const should_hide_next_year   = is_next_year_disabled && hide_disabled_periods;\n\n    const onClickPrevYear = !(is_prev_year_disabled || should_hide_prev_year) ?\n        () => navigateTo(subYears(calendar_date, num_of_years)) :\n        undefined;\n\n    const onClickNextYear = !(is_next_year_disabled || should_hide_next_year) ?\n        () => navigateTo(addYears(calendar_date, num_of_years)) :\n        undefined;\n\n    const onClickPrevMonth = !(is_prev_month_disabled || should_hide_prev_month) ?\n        () => navigateTo(subMonths(calendar_date, 1)) :\n        undefined;\n\n    const onClickNextMonth = !(is_next_month_disabled || should_hide_next_month) ?\n        () => navigateTo(addMonths(calendar_date, 1)) :\n        undefined;\n\n    return (\n        <div className='calendar__header'>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-year', {\n                    'calendar__nav--disabled' : is_prev_year_disabled,\n                    'calendar__nav--is-hidden': should_hide_prev_year,\n                })}\n                onClick={onClickPrevYear}\n            >\n                <Icon icon='IconChevronDoubleLeft' className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-month', {\n                    'calendar__nav--disabled' : is_prev_month_disabled,\n                    'calendar__nav--is-hidden': should_hide_prev_month,\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClickPrevMonth}\n            >\n                <Icon icon='IconChevronLeft' className='calendar__icon' />\n            </CalendarButton>\n\n            <React.Fragment>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar__btn calendar__btn--select'\n                        is_hidden={!is_date_view}\n                        label={month_headers[moment_date.format('MMM')]}\n                        onClick={() => disable_month_selector ? undefined : switchView('month')}\n                    />\n                }\n                { (is_date_view || is_month_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        label={moment_date.format('YYYY')}\n                        onClick={() => is_select_year_disabled ? undefined : switchView('year')}\n                    />\n                }\n                { (is_year_view || is_decade_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        onClick={is_select_year_disabled ? undefined : () => switchView('decade')}\n                    >\n                        { is_year_view   && `${decade}`  }\n                        { is_decade_view && `${century}` }\n                    </CalendarButton>\n                }\n            </React.Fragment>\n\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-month', {\n                    'calendar__nav--disabled' : is_next_month_disabled,\n                    'calendar__nav--is-hidden': should_hide_next_month,\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClickNextMonth}\n            >\n                <Icon icon='IconChevronRight' className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-year', {\n                    'calendar__nav--disabled' : is_next_year_disabled,\n                    'calendar__nav--is-hidden': should_hide_next_year,\n                })}\n                onClick={onClickNextYear}\n            >\n                <Icon icon='IconChevronDoubleRight' className='calendar__icon' />\n            </CalendarButton>\n        </div>\n    );\n};\n\nCalendarHeader.propTypes = {\n    calendar_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object,\n        PropTypes.number,\n    ]),\n    calendar_view         : PropTypes.string,\n    disable_month_selector: PropTypes.bool,\n    disable_year_selector : PropTypes.bool,\n    hide_disabled_periods : PropTypes.bool,\n    isPeriodDisabled      : PropTypes.func,\n    navigateTo            : PropTypes.func,\n    switchView            : PropTypes.func,\n};\n\nexport default CalendarHeader;\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = [\n        'ACH',\n    ];\n    // TODO Change language_list to const when design is ready.\n    let language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    // TODO Remove this one line below when design is ready.\n    language_list = { EN: 'English' };\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","export * from './language';\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport PageError     from 'Modules/PageError';\nimport { routes }    from 'Constants/index';\nimport Localize      from '../localize.jsx';\n\nconst ErrorComponent = ({\n    header,\n    message,\n    redirect_label,\n    redirectOnClick,\n    should_show_refresh = true,\n}) => {\n    const refresh_message = should_show_refresh ? <Localize i18n_default_text='Please refresh this page to continue.' /> : '';\n\n    return (\n        <PageError\n            header={header || <Localize i18n_default_text='Oops, something went wrong.' />}\n            messages={\n                message\n                    ? [\n                        message,\n                        refresh_message,\n                    ]\n                    : [\n                        <Localize key={0} i18n_default_text='Sorry, an error occured while processing your request.' />,\n                        refresh_message,\n                    ]}\n            redirect_url={routes.trade}\n            redirect_label={redirect_label || <Localize i18n_default_text='Refresh' />}\n            buttonOnClick={redirectOnClick || (() => location.reload())}\n        />\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import moment       from 'moment';\nimport { localize } from 'App/i18n';\n\nexport const addCommaToNumber = (num, decimal_places) => {\n    if (!num || isNaN(num)) {\n        return num;\n    }\n    const n = String(decimal_places ? (+num).toFixed(decimal_places) : num);\n    const p = n.indexOf('.');\n    return n.replace(\n        /\\d(?=(?:\\d{3})+(?:\\.|$))/g,\n        (m, i) => p <= 0 || i < p ? `${m},` : m\n    );\n};\n\nexport const getTimePercentage = (server_time, start_time, expiry_time) => {\n    const duration_from_purchase = moment.duration(moment.unix(expiry_time).diff(moment.unix(start_time)));\n    const duration_from_now = moment.duration(moment.unix(expiry_time).diff(server_time));\n    let percentage = (duration_from_now.asMilliseconds() / duration_from_purchase.asMilliseconds()) * 100;\n\n    if (percentage < 0.5) {\n        percentage = 0;\n    } else if (percentage > 100) {\n        percentage = 100;\n    }\n\n    return Math.round(percentage);\n};\n\nexport const getBarrierLabel = (contract_info) => {\n    if (isDigitType(contract_info.contract_type)) {\n        return localize('Target');\n    }\n    return localize('Barrier');\n};\n\nexport const getBarrierValue = (contract_info) => {\n    if (isDigitType(contract_info.contract_type)) {\n        return digitTypeMap(contract_info)[contract_info.contract_type];\n    }\n    return addCommaToNumber(contract_info.barrier);\n};\n\nexport const isDigitType = (contract_type) => (/digit/.test(contract_type.toLowerCase()));\n\nconst digitTypeMap = (contract_info) => ({\n    DIGITDIFF : localize('Not {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITEVEN : localize('Even'),\n    DIGITMATCH: localize('Equals {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITODD  : localize('Odd'),\n    DIGITOVER : localize('Over {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITUNDER: localize('Under {{barrier}}', { barrier: contract_info.barrier }),\n});\n","export * from './positions-helper';\n","import ContentLoader from 'react-content-loader';\nimport React         from 'react';\nimport PropTypes     from 'prop-types';\n\nconst PositionsCardLoader = ({ is_dark_theme, speed }) => (\n    <ContentLoader\n        height={173}\n        width={218}\n        speed={speed}\n        primaryColor={is_dark_theme ? 'rgba(127, 131, 151, 0.16)' : '#f4f4f6'}\n        secondaryColor={is_dark_theme ? '#303342' : '#eaeaec'}\n    >\n        <rect x='43'  y='19'  rx='0' ry='0' width='56'  height='8' />\n        <rect x='147' y='19'  rx='0' ry='0' width='56'  height='8' />\n        <rect x='12'  y='50'  rx='0' ry='0' width='44'  height='8' />\n        <rect x='13'  y='68'  rx='0' ry='0' width='192' height='8' />\n        <rect x='5'   y='89'  rx='0' ry='0' width='208' height='1' />\n        <rect x='12'  y='104' rx='0' ry='0' width='44'  height='8' />\n        <rect x='12'  y='9'   rx='0' ry='0' width='24'  height='24' />\n        <rect x='116' y='11'  rx='0' ry='0' width='24'  height='24' />\n        <rect x='12'  y='118' rx='0' ry='0' width='88'  height='8' />\n        <rect x='116' y='104' rx='0' ry='0' width='44'  height='8' />\n        <rect x='116' y='118' rx='0' ry='0' width='88'  height='8' />\n        <rect x='12'  y='139' rx='0' ry='0' width='44'  height='8' />\n        <rect x='12'  y='153' rx='0' ry='0' width='88'  height='8' />\n        <rect x='116' y='139' rx='0' ry='0' width='44'  height='8' />\n        <rect x='116' y='153' rx='0' ry='0' width='88'  height='8' />\n    </ContentLoader>\n);\n\nPositionsCardLoader.propTypes = {\n    is_dark_theme: PropTypes.bool,\n    speed        : PropTypes.number,\n};\n\nexport { PositionsCardLoader };\n","export * from './positions-card.jsx';\n","const BinarySocket = require('./socket_base');\nconst localize     = require('../../App/i18n').localize;\n\n/*\n * Monitors the network status and initialises the WebSocket connection\n * 1. online : check the WS status (init/send: blink after timeout, open/message: online)\n * 2. offline: it is offline\n */\nconst NetworkMonitorBase = (() => {\n    const StatusConfig = (() => {\n        let status_config;\n\n        const initStatusConfig = () => ({\n            online  : { class: 'online',  tooltip: localize('Online') },\n            offline : { class: 'offline', tooltip: localize('Offline') },\n            blinking: { class: 'blinker', tooltip: localize('Connecting to server') },\n        });\n\n        return {\n            get: (status) => {\n                if (!status_config) {\n                    status_config = initStatusConfig();\n                }\n                return status_config[status];\n            },\n        };\n    })();\n\n    const pendings = {};\n    const pending_keys = {\n        ws_init   : 'ws_init',\n        ws_request: 'ws_request',\n    };\n    const pending_timeouts = {\n        [pending_keys.ws_init]   : 5000,\n        [pending_keys.ws_request]: 10000,\n    };\n\n    let ws_config,\n        network_status,\n        updateUI;\n\n    const init = (socket_general_functions, fncUpdateUI) => {\n        updateUI  = fncUpdateUI;\n        ws_config = Object.assign({ wsEvent, isOnline }, socket_general_functions);\n\n        if ('onLine' in navigator) {\n            window.addEventListener('online',  setStatus);\n            window.addEventListener('offline', setStatus);\n        } else { // if not supported, default to online and fallback to WS checks\n            navigator.onLine = true;\n        }\n\n        if (isOnline()) {\n            BinarySocket.init(ws_config);\n        }\n\n        setStatus(isOnline() ? 'online' : 'offline');\n    };\n\n    const isOnline = () => navigator.onLine;\n\n    const wsReconnect = () => {\n        if (isOnline() && BinarySocket.hasReadyState(2, 3)) { // CLOSING or CLOSED\n            BinarySocket.init(ws_config);\n        } else {\n            BinarySocket.send({ ping: 1 }); // trigger a request to get stable status sooner\n        }\n    };\n\n    const setStatus = (status) => {\n        if (!isOnline()) {\n            network_status = 'offline';\n        } else if (pending_keys[status] || network_status === 'offline') {\n            network_status = 'blinking';\n            wsReconnect();\n        } else {\n            network_status = 'online';\n        }\n\n        if (typeof updateUI === 'function') {\n            updateUI(StatusConfig.get(network_status), isOnline());\n        }\n    };\n\n    const ws_events_map = {\n        init   : () => setPending(pending_keys.ws_init),\n        open   : () => clearPendings(pending_keys.ws_init),\n        send   : () => setPending(pending_keys.ws_request),\n        message: () => clearPendings(),\n        close  : () => setPending(pending_keys.ws_init),\n    };\n\n    const wsEvent = (event) => {\n        if (typeof ws_events_map[event] === 'function') {\n            ws_events_map[event]();\n        }\n    };\n\n    const setPending = (key) => {\n        if (!pendings[key]) {\n            pendings[key] = setTimeout(() => {\n                pendings[key] = undefined;\n                setStatus(key);\n            }, pending_timeouts[key]);\n        }\n    };\n\n    const clearPendings = (key) => {\n        const clear = (k) => {\n            clearTimeout(pendings[k]);\n            pendings[k] = undefined;\n            if (k === pending_keys.ws_request) {\n                setStatus('online');\n            }\n        };\n\n        if (key) {\n            clear(key);\n        } else {\n            Object.keys(pendings).forEach(clear);\n        }\n    };\n\n    return {\n        init,\n        wsEvent,\n    };\n})();\n\nmodule.exports = NetworkMonitorBase;\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"react\")):\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.button=t(require(\"react\")):(e[\"deriv-component\"]=e[\"deriv-component\"]||{},e[\"deriv-component\"].button=t(e.React))}(window,function(e){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=7)}([function(e,t,n){e.exports=n(3)()},function(t,n){t.exports=e},function(e,t,n){var r;\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n!function(){\"use strict\";var n={}.hasOwnProperty;function o(){for(var e=[],t=0;t<arguments.length;t++){var r=arguments[t];if(r){var a=typeof r;if(\"string\"===a||\"number\"===a)e.push(r);else if(Array.isArray(r)&&r.length){var i=o.apply(null,r);i&&e.push(i)}else if(\"object\"===a)for(var c in r)n.call(r,c)&&r[c]&&e.push(c)}}return e.join(\" \")}e.exports?(o.default=o,e.exports=o):void 0===(r=function(){return o}.apply(t,[]))||(e.exports=r)}()},function(e,t,n){\"use strict\";var r=n(4);function o(){}function a(){}a.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,a,i){if(i!==r){var c=new Error(\"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types\");throw c.name=\"Invariant Violation\",c}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:a,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){\"use strict\";e.exports=\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\"},function(e,t,n){},,function(e,t,n){\"use strict\";n.r(t);var r=n(2),o=n.n(r),a=n(0),i=n.n(a),c=n(1),s=n.n(c),u=(n(5),function(e){var t=e.children,n=e.className,r=void 0===n?\"\":n,a=e.classNameSpan,i=e.has_effect,c=e.id,u=e.is_disabled,f=e.onClick,p=e.tabIndex,l=e.text,d=e.wrapperClassName,y=o()(\"btn\",{effect:i},r),b=s.a.createElement(\"button\",{id:c,className:y,onClick:f||void 0,disabled:u,tabIndex:p||\"0\"},l&&s.a.createElement(\"span\",{className:o()(\"btn__text\",a)},l),t),m=s.a.createElement(\"div\",{className:d},b);return d?m:b});u.propTypes={children:i.a.node,className:i.a.string,classNameSpan:i.a.string,has_effect:i.a.bool,id:i.a.string,is_disabled:i.a.oneOfType([i.a.number,i.a.bool]),onClick:i.a.func,text:i.a.string,wrapperClassName:i.a.string};var f=u;t.default=f}]).default});\n//# sourceMappingURL=button.js.map","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","import { str as crc32 }     from 'crc-32';\nimport i18n                 from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport * as messages        from 'Translations/messages.json';\n\nconst i18n_config = {\n    resources: {\n        EN: {\n            translation: {\n                ...messages,\n            },\n        },\n    },\n    react: {\n        hashTransKey(defaultValue) {\n            return crc32(defaultValue);\n        },\n    },\n    lng: window.location.search ?\n        window.location.search.includes('lang=') ?\n            window.location.search\n                .substr(1).split('&')\n                .find(query => query.includes('lang='))\n                .split('=')[1]\n                .toUpperCase()\n            : undefined\n        : undefined,\n    fallbackLng: 'EN',\n};\n\ni18n\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init(i18n_config);\n\nexport const localize = (string, values) => i18n.t(crc32(string), { defaultValue: string, ...values });\n\nexport default i18n;\n","const moment           = require('moment');\nconst isCryptocurrency = require('./currency_base').isCryptocurrency;\nconst SocketCache      = require('./socket_cache');\nconst localize         = require('../../App/i18n').localize;\nconst LocalStore       = require('../storage').LocalStore;\nconst State            = require('../storage').State;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst isEmptyObject    = require('../utility').isEmptyObject;\n\nconst ClientBase = (() => {\n    const storage_key = 'client.accounts';\n    let client_object = {};\n    let current_loginid;\n\n    const init = () => {\n        current_loginid = LocalStore.get('active_loginid');\n        client_object   = getAllAccountsObject();\n    };\n\n    const isLoggedIn = () => (\n        !isEmptyObject(getAllAccountsObject()) &&\n        get('loginid') &&\n        get('token')\n    );\n\n    const isValidLoginid = () => {\n        if (!isLoggedIn()) return true;\n        const valid_login_ids = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return getAllLoginids().every(loginid => valid_login_ids.test(loginid));\n    };\n\n    /**\n     * Stores the client information in local variable and localStorage\n     *\n     * @param {String} key                 The property name to set\n     * @param {String|Number|Object} value The regarding value\n     * @param {String|null} loginid        The account to set the value for\n     */\n    const set = (key, value, loginid = current_loginid) => {\n        if (key === 'loginid' && value !== current_loginid) {\n            LocalStore.set('active_loginid', value);\n            current_loginid = value;\n        } else {\n            if (!(loginid in client_object)) {\n                client_object[loginid] = {};\n            }\n            client_object[loginid][key] = value;\n            LocalStore.setObject(storage_key, client_object);\n        }\n    };\n\n    /**\n     * Returns the client information\n     *\n     * @param {String|null} key     The property name to return the value from, if missing returns the account object\n     * @param {String|null} loginid The account to return the value from\n     */\n    const get = (key, loginid = current_loginid) => {\n        let value;\n        if (key === 'loginid') {\n            value = loginid || LocalStore.get('active_loginid');\n        } else {\n            const current_client = client_object[loginid] || getAllAccountsObject()[loginid] || client_object;\n\n            value = key ? current_client[key] : current_client;\n        }\n        if (!Array.isArray(value) && (+value === 1 || +value === 0 || value === 'true' || value === 'false')) {\n            value = JSON.parse(value || false);\n        }\n        return value;\n    };\n\n    const getAllAccountsObject = () => LocalStore.getObject(storage_key);\n\n    const getAllLoginids = () => Object.keys(getAllAccountsObject());\n\n    const getAccountType = (loginid = current_loginid) => {\n        let account_type;\n        if (/^VR/.test(loginid))          account_type = 'virtual';\n        else if (/^MF/.test(loginid))     account_type = 'financial';\n        else if (/^MLT|MX/.test(loginid)) account_type = 'gaming';\n        return account_type;\n    };\n\n    const isAccountOfType = (type, loginid = current_loginid, only_enabled = false) => {\n        const this_type   = getAccountType(loginid);\n        return ((\n            (type === 'virtual' && this_type === 'virtual') ||\n            (type === 'real'    && this_type !== 'virtual') ||\n            type === this_type) &&\n            (only_enabled ? !get('is_disabled', loginid) : true));\n    };\n\n    const getAccountOfType = (type, only_enabled) => {\n        const id = getAllLoginids().find(loginid => isAccountOfType(type, loginid, only_enabled));\n        return id ? Object.assign({ loginid: id }, get(null, id)) : {};\n    };\n\n    const hasAccountType = (type, only_enabled) => !isEmptyObject(getAccountOfType(type, only_enabled));\n\n    // only considers currency of real money accounts\n    // @param {String} type = crypto|fiat\n    const hasCurrencyType = (type) => {\n        const loginids = getAllLoginids();\n        if (type === 'crypto') {\n            // find if has crypto currency account\n            return loginids.find(loginid =>\n                !get('is_virtual', loginid) && isCryptocurrency(get('currency', loginid)));\n        }\n        // else find if have fiat currency account\n        return loginids.find(loginid =>\n            !get('is_virtual', loginid) && !isCryptocurrency(get('currency', loginid)));\n    };\n\n    const TypesMapConfig = (() => {\n        let types_map_config;\n\n        const initTypesMap = () => ({\n            default  : localize('Real'),\n            financial: localize('Investment'),\n            gaming   : localize('Gaming'),\n            virtual  : localize('Virtual'),\n        });\n\n        return {\n            get: () => {\n                if (!types_map_config) {\n                    types_map_config = initTypesMap();\n                }\n                return types_map_config;\n            },\n        };\n    })();\n\n    const getAccountTitle = loginid => {\n        const types_map = TypesMapConfig.get();\n        return (types_map[getAccountType(loginid)] || types_map.default);\n    };\n\n    const responseAuthorize = (response) => {\n        const authorize = response.authorize;\n        set('email',      authorize.email);\n        set('currency',   authorize.currency);\n        set('is_virtual', +authorize.is_virtual);\n        set('session_start', parseInt(moment().valueOf() / 1000));\n        set('landing_company_shortcode', authorize.landing_company_name);\n        updateAccountList(authorize.account_list);\n    };\n\n    const updateAccountList = (account_list) => {\n        account_list.forEach((account) => {\n            set('excluded_until', account.excluded_until || '', account.loginid);\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    set(param_to_set, value_to_set, account.loginid);\n                }\n            });\n        });\n    };\n\n    const shouldAcceptTnc = () => {\n        if (get('is_virtual')) return false;\n        const website_tnc_version = State.getResponse('website_status.terms_conditions_version');\n        const client_tnc_status   = State.getResponse('get_settings.client_tnc_status');\n        return typeof client_tnc_status !== 'undefined' && client_tnc_status !== website_tnc_version;\n    };\n\n    const clearAllAccounts = () => {\n        current_loginid = undefined;\n        client_object   = {};\n        LocalStore.setObject(storage_key, client_object);\n    };\n\n    const setNewAccount = (options) => {\n        if (!options.email || !options.loginid || !options.token) {\n            return false;\n        }\n\n        SocketCache.clear();\n        localStorage.setItem('GTM_new_account', '1');\n\n        set('token',      options.token,       options.loginid);\n        set('email',      options.email,       options.loginid);\n        set('is_virtual', +options.is_virtual, options.loginid);\n        set('loginid',    options.loginid);\n\n        return true;\n    };\n\n    const currentLandingCompany = () => {\n        const landing_company_response = State.getResponse('landing_company') || {};\n        const this_shortcode           = get('landing_company_shortcode');\n        const landing_company_prop     = Object.keys(landing_company_response).find((key) => (\n            this_shortcode === landing_company_response[key].shortcode\n        ));\n        return landing_company_response[landing_company_prop] || {};\n    };\n\n    const shouldCompleteTax = () => isAccountOfType('financial') &&\n        !/crs_tin_information/.test((State.getResponse('get_account_status') || {}).status);\n\n    // remove manager id or master distinction from group\n    // remove EUR or GBP distinction from group\n    const getMT5AccountType = group => (group ? group.replace('\\\\', '_').replace(/_(\\d+|master|EUR|GBP)/, '') : '');\n\n    const getBasicUpgradeInfo = () => {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n\n        let can_open_multi = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            const current_landing_company = get('landing_company_shortcode');\n\n            can_open_multi = upgradeable_landing_companies.indexOf(current_landing_company) !== -1;\n\n            // only show upgrade message to landing companies other than current\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== current_landing_company &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n\n            can_upgrade_to = canUpgrade('svg', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    };\n\n    const getLandingCompanyValue = (loginid, landing_company, key) => {\n        let landing_company_object;\n        if (loginid.financial || isAccountOfType('financial', loginid)) {\n            landing_company_object = getPropertyValue(landing_company, 'financial_company');\n        } else if (loginid.real || isAccountOfType('real', loginid)) {\n            landing_company_object = getPropertyValue(landing_company, 'gaming_company');\n\n            // handle accounts that don't have gaming company\n            if (!landing_company_object) {\n                landing_company_object = getPropertyValue(landing_company, 'financial_company');\n            }\n        } else {\n            const financial_company = (getPropertyValue(landing_company, 'financial_company') || {})[key] || [];\n            const gaming_company    = (getPropertyValue(landing_company, 'gaming_company') || {})[key] || [];\n            landing_company_object  = financial_company.concat(gaming_company);\n            return landing_company_object;\n        }\n        return (landing_company_object || {})[key];\n    };\n\n    const getRiskAssessment = () => {\n        const status       = State.getResponse('get_account_status.status');\n        const is_high_risk = /high/.test(State.getResponse('get_account_status.risk_classification'));\n\n        return (\n            isAccountOfType('financial') ?\n                /(financial_assessment|trading_experience)_not_complete/.test(status) :\n                (is_high_risk && /financial_assessment_not_complete/.test(status))\n        );\n    };\n\n    // API_V3: send a list of accounts the client can transfer to\n    const canTransferFunds = (account) => {\n        if (account) {\n            // this specific account can be used to transfer funds to\n            return canTransferFundsTo(account.loginid);\n        }\n        // at least one account can be used to transfer funds to\n        return Object.keys(client_object).some(loginid => canTransferFundsTo(loginid));\n    };\n\n    const canTransferFundsTo = (to_loginid) => {\n        if (to_loginid === current_loginid || get('is_virtual', to_loginid) || get('is_virtual') ||\n            get('is_disabled', to_loginid)) {\n            return false;\n        }\n        const from_currency = get('currency');\n        const to_currency   = get('currency', to_loginid);\n        if (!from_currency || !to_currency) {\n            return false;\n        }\n        // only transfer to other accounts that have the same currency as current account if one is maltainvest and one is malta\n        if (from_currency === to_currency) {\n            // these landing companies are allowed to transfer funds to each other if they have the same currency\n            const same_cur_allowed = {\n                maltainvest: 'malta',\n                malta      : 'maltainvest',\n            };\n            const from_landing_company = get('landing_company_shortcode');\n            const to_landing_company   = get('landing_company_shortcode', to_loginid);\n            // if same_cur_allowed[from_landing_company] is undefined and to_landing_company is also undefined, it will return true\n            // so we should compare '' === undefined instead\n            return (same_cur_allowed[from_landing_company] || '') === to_landing_company;\n        }\n        // or for other clients if current account is cryptocurrency it should only transfer to fiat currencies and vice versa\n        const is_from_crypto = isCryptocurrency(from_currency);\n        const is_to_crypto   = isCryptocurrency(to_currency);\n        return (is_from_crypto ? !is_to_crypto : is_to_crypto);\n    };\n\n    const hasSvgAccount = () => !!(getAllLoginids().find(loginid => /^CR/.test(loginid)));\n\n    const canChangeCurrency = (statement, mt5_login_list, is_current = true) => {\n        const currency             = get('currency');\n        const has_no_mt5           = mt5_login_list.length === 0;\n        const has_no_transaction   = (statement.count === 0 && statement.transactions.length === 0);\n        const has_account_criteria = has_no_transaction && has_no_mt5;\n\n        // Current API requirements for currently logged-in user successfully changing their account's currency:\n        // 1. User must not have made any transactions\n        // 2. User must not have any MT5 account\n        // 3. Not be a crypto account\n        // 4. Not be a virtual account\n        return is_current ? currency && !get('is_virtual') && has_account_criteria && !isCryptocurrency(currency) : has_account_criteria;\n    };\n\n    return {\n        init,\n        isLoggedIn,\n        isValidLoginid,\n        set,\n        get,\n        getAllLoginids,\n        getAccountType,\n        isAccountOfType,\n        getAccountOfType,\n        hasAccountType,\n        hasCurrencyType,\n        getAccountTitle,\n        responseAuthorize,\n        shouldAcceptTnc,\n        clearAllAccounts,\n        setNewAccount,\n        currentLandingCompany,\n        shouldCompleteTax,\n        getAllAccountsObject,\n        getMT5AccountType,\n        getBasicUpgradeInfo,\n        getLandingCompanyValue,\n        getRiskAssessment,\n        canTransferFunds,\n        hasSvgAccount,\n        canChangeCurrency,\n    };\n})();\n\nmodule.exports = ClientBase;\n","const urlForLanguage             = require('./language').urlFor;\nconst getLanguage                = require('./language').get;\nconst getCurrentProductionDomain = require('../config').getCurrentProductionDomain;\nrequire('url-polyfill');\n\nconst Url = (() => {\n    let location_url,\n        static_host;\n\n    const reset = () => {\n        location_url = window ? window.location : location_url;\n    };\n\n    const params = (href) => {\n        const arr_params = [];\n        const parsed     = ((href ? new URL(href) : location_url).search || '').substr(1).split('&');\n        let p_l          = parsed.length;\n        while (p_l--) {\n            const param = parsed[p_l].split('=');\n            arr_params.push(param);\n        }\n        return arr_params;\n    };\n\n    const paramsHash = (href) => {\n        const param_hash = {};\n        const arr_params = params(href);\n        let param        = arr_params.length;\n        while (param--) {\n            if (arr_params[param][0]) {\n                param_hash[arr_params[param][0]] = arr_params[param][1] || '';\n            }\n        }\n        return param_hash;\n    };\n\n    const normalizePath = path => (path ? path.replace(/(^\\/|\\/$|[^a-zA-Z0-9-_/])/g, '') : '');\n\n    const urlFor = (path, pars, language, should_change_to_legacy = false) => {\n        const lang = (language || getLanguage()).toLowerCase();\n        let domain = `https://${window.location.hostname}/`;\n        if (should_change_to_legacy) {\n            if (/localhost|binary\\.sx/.test(domain)) {\n                domain = `https://binary.com/${lang || 'en'}/`;\n            } else {\n                domain = domain.replace(/deriv\\.app/, `binary.com/${lang || 'en'}`);\n            }\n        }\n        const new_url = `${domain}${(normalizePath(path) || 'home')}.html${(pars ? `?${pars}` : '')}`;\n        // replace old lang with new lang\n        return urlForLanguage(lang, new_url);\n    };\n\n    const default_domain = 'binary.com';\n    const host_map = { // the exceptions regarding updating the URLs\n        'bot.binary.com'       : 'www.binary.bot',\n        'developers.binary.com': 'developers.binary.com', // same, shouldn't change\n        'academy.binary.com'   : 'academy.binary.com',\n        'tech.binary.com'      : 'tech.binary.com',\n        'blog.binary.com'      : 'blog.binary.com',\n    };\n\n    const urlForCurrentDomain = (href) => {\n        const current_domain = getCurrentProductionDomain();\n\n        if (!current_domain) {\n            return href; // don't change when domain is not supported\n        }\n\n        const url_object = new URL(href);\n        if (Object.keys(host_map).includes(url_object.hostname)) {\n            url_object.hostname = host_map[url_object.hostname];\n        } else if (url_object.hostname.indexOf(default_domain) !== -1) {\n            // to keep all non-Binary links unchanged, we use default domain for all Binary links in the codebase (javascript and templates)\n            url_object.hostname = url_object.hostname.replace(new RegExp(`\\\\.${default_domain}`, 'i'), `.${current_domain}`);\n        } else {\n            return href;\n        }\n\n        return url_object.href;\n    };\n\n    const urlForStatic = (path = '') => {\n        if (!static_host || static_host.length === 0) {\n            static_host = document.querySelector('script[src*=\"vendor.min.js\"]');\n            if (static_host) {\n                static_host = static_host.getAttribute('src');\n            }\n\n            if (static_host && static_host.length > 0) {\n                static_host = static_host.substr(0, static_host.indexOf('/js/') + 1);\n            } else {\n                static_host = Url.websiteUrl();\n            }\n        }\n\n        return static_host + path.replace(/(^\\/)/g, '');\n    };\n\n    const getUrlBase = (path = '') => {\n        const l = window.location;\n\n        if (!/^\\/br_/.test(l.pathname)) return path;\n\n        return `/${l.pathname.split('/')[1]}${/^\\//.test(path) ? path : `/${path}`}`;\n    };\n\n    return {\n        getUrlBase,\n        reset,\n        paramsHash,\n        urlFor,\n        urlForCurrentDomain,\n        urlForStatic,\n\n        param          : name => paramsHash()[name],\n        websiteUrl     : () => `${location.protocol}//${location.hostname}/`,\n        getHostMap     : () => host_map,\n        resetStaticHost: () => { static_host = undefined; },\n    };\n})();\n\nmodule.exports = Url;\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    positions       : '/reports/positions',\n    profit          : '/reports/profit',\n    reports         : '/reports',\n    root            : '/',\n    redirect        : '/redirect',\n    settings        : '/settings',\n    statement       : '/reports/statement',\n    token           : '/settings/token',\n    trade           : '/',\n};\n\nexport default routes;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport UILoader  from 'App/Components/Elements/ui-loader.jsx';\n\nclass Lazy extends React.PureComponent {\n    render() {\n        const {\n            should_load = true,\n            ctor,\n            has_progress,\n            ...component_props\n        } = this.props;\n\n        if (!should_load) {\n            return null;\n        }\n\n        const LazyLoadedComponent = React.lazy(ctor);\n\n        return (\n            <React.Suspense fallback={has_progress ? <UILoader /> : <div />}>\n                <LazyLoadedComponent {...component_props} />\n            </React.Suspense>\n        );\n    }\n}\n\n// Lazy Load the component by default.\nLazy.defaultProps = {\n    should_load : true,\n    has_progress: false,\n};\n\nLazy.propTypes = {\n    ctor        : PropTypes.func.isRequired,\n    has_progress: PropTypes.bool,\n    should_load : PropTypes.bool,\n};\n\nexport default Lazy;\n","const moment       = require('moment');\nconst BinarySocket = require('./socket_base');\nconst PromiseClass = require('../utility').PromiseClass;\n\nconst ServerTime = (() => {\n    let clock_started = false;\n    const pending = new PromiseClass();\n    let server_time,\n        performance_request_time,\n        get_time_interval,\n        update_time_interval,\n        onTimeUpdated;\n\n    const init = (fncTimeUpdated) => {\n        if (!clock_started) {\n            onTimeUpdated = fncTimeUpdated;\n            requestTime();\n            clearInterval(get_time_interval);\n            get_time_interval = setInterval(requestTime, 30000);\n            clock_started = true;\n        }\n    };\n\n    const requestTime = () => {\n        performance_request_time = performance.now();\n        BinarySocket.send({ time: 1 }).then(timeCounter);\n    };\n\n    const timeCounter = (response) => {\n        if (response.error) return;\n\n        if (!clock_started) {\n            init();\n            return;\n        }\n\n        clearInterval(update_time_interval);\n\n        const start_timestamp = response.time;\n        const performance_response_time = performance.now();\n        const time_taken = performance_response_time - performance_request_time;\n        const server_time_at_response = ((start_timestamp * 1000) + time_taken);\n\n        const updateTime = () => {\n            const time_since_response = performance.now() - performance_response_time;\n            server_time = moment(server_time_at_response + time_since_response).utc();\n\n            if (typeof onTimeUpdated === 'function') {\n                onTimeUpdated();\n            }\n        };\n        updateTime();\n        pending.resolve();\n        update_time_interval = setInterval(updateTime, 1000);\n    };\n\n    const get = () => server_time ? server_time.clone() : undefined;\n\n    return {\n        init,\n        get,\n        timePromise: pending.promise,\n    };\n})();\n\nmodule.exports = ServerTime;\n","import moment       from 'moment';\nimport { localize } from 'App/i18n';\nimport ServerTime   from '_common/base/server_time';\n\n// Disables moment's fallback to native Date object\n// moment will return `Invalid Date` if date cannot be parsed\nmoment.createFromInputFallback = function (config) {\n    config._d = new Date(NaN); // eslint-disable-line no-underscore-dangle\n};\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return ServerTime.get() || moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    if (typeof value === 'number') return epochToMoment(value); // returns epochToMoment() if not a date\n\n    if (/invalid/i.test(moment(value))) {\n        const today_moment = moment();\n        return value > today_moment.utc().daysInMonth() ? moment.utc(today_moment.add(value, 'd'), 'DD MMM YYYY') : moment.utc(value, 'DD MMM YYYY'); // returns target date\n    }\n    return moment.utc(value);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nexport const setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time ? time.split(':') : [0, 0, 0];\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => toMoment(date).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = toMoment(date).startOf('day').diff(toMoment().startOf('day'), 'days');\n    return (!date || diff < 0) ? '' : diff;\n};\n\n/**\n * return the number of months between two specified dates\n */\nexport const diffInMonths = (now, then) => then.diff(now, 'month');\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str => /^([0-9]|[0-1][0-9]|2[0-3]):([0-9]|[0-5][0-9])(:([0-9]|[0-5][0-9]))?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String|moment} date date\n */\nexport const isDateValid = date => moment(date, 'DD MMM YYYY').isValid();\n\n/**\n * add the specified number of days to the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to add\n */\nexport const addDays = (date, num_of_days) => toMoment(date).clone().add(num_of_days, 'day');\n\n/**\n * add the specified number of months to the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to add\n */\nexport const addMonths = (date, num_of_months) => toMoment(date).clone().add(num_of_months, 'month');\n\n/**\n * add the specified number of years to the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to add\n */\nexport const addYears = (date, num_of_years) => toMoment(date).clone().add(num_of_years, 'year');\n\n/**\n * subtract the specified number of days from the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to subtract\n */\nexport const subDays = (date, num_of_days) => toMoment(date).clone().subtract(num_of_days, 'day');\n\n/**\n * subtract the specified number of months from the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to subtract\n */\nexport const subMonths = (date, num_of_months) => toMoment(date).clone().subtract(num_of_months, 'month');\n\n/**\n * subtract the specified number of years from the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to subtract\n */\nexport const subYears = (date, num_of_years) => toMoment(date).clone().subtract(num_of_years, 'year');\n\n/**\n * returns the minimum moment between the two passing parameters\n * @param {moment|string|epoch} first datetime parameter\n * @param {moment|string|epoch} second datetime parameter\n */\nexport const minDate = (date_1, date_2) => moment.min(toMoment(date_1), toMoment(date_2));\n\n/**\n * returns a new date\n * @param {moment|string|epoch} date date\n */\nexport const getStartOfMonth = (date) => toMoment(date).clone().startOf('month').format('YYYY-MM-DD');\n\n/**\n * returns miliseconds into UTC formatted string\n * @param {Number} miliseconds miliseconds\n * @param {String} str_format formatting using moment e.g - YYYY-MM-DD HH:mm\n */\nexport const formatMiliseconds = (miliseconds, str_format) => moment.utc(miliseconds).format(str_format);\n","export * from './date-time';\n","import { localize } from 'App/i18n';\nimport { toMoment } from 'Utils/Date';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: +duration[0], // converts string to numbers\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type, duration_units_list } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && (toMoment(expiry_date).isAfter(toMoment(server_time), 'day') ||\n        !hasIntradayDurationUnit(duration_units_list));\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n\nexport const hasIntradayDurationUnit = (duration_units_list) => (\n    duration_units_list.some(unit => ['m', 'h'].indexOf(unit.value) !== -1)\n);\n\n/**\n * On switching symbols, end_time value of volatility indices should be set to today\n *\n * @param {String} symbol\n * @param {String} expiry_type\n * @returns {*}\n */\nexport const resetEndTimeOnVolatilityIndices = (symbol, expiry_type) => (\n    (/^R_/.test(symbol) && expiry_type === 'endtime') ? toMoment(null).format('DD MMM YYYY') : null\n);\n","const Cookies       = require('js-cookie');\nconst CookieStorage = require('./storage').CookieStorage;\n\nconst Language = (() => {\n    const all_languages = {\n        ACH  : 'Translations',\n        EN   : 'English',\n        DE   : 'Deutsch',\n        ES   : 'Español',\n        FR   : 'Français',\n        ID   : 'Indonesia',\n        IT   : 'Italiano',\n        PL   : 'Polish',\n        PT   : 'Português',\n        RU   : 'Русский',\n        TH   : 'Thai',\n        VI   : 'Tiếng Việt',\n        ZH_CN: '简体中文',\n        ZH_TW: '繁體中文',\n    };\n    const default_language = 'EN';\n\n    const setCookieLanguage = (lang) => {\n        if (!Cookies.get('language') || lang) {\n            const cookie = new CookieStorage('language');\n            cookie.write((lang || getLanguage()).toUpperCase());\n        }\n    };\n\n    let url_lang = null;\n\n    const lang_regex = new RegExp(`^(${Object.keys(all_languages).join('|')})$`, 'i');\n\n    const languageFromUrl = (custom_url) => {\n        if (url_lang && !custom_url) return url_lang;\n        const url_params = (custom_url || window.location.href).split('/').slice(3);\n        const language   = (url_params.find(lang => lang_regex.test(lang)) || '');\n        if (!custom_url) {\n            url_lang = language;\n        }\n        return language;\n    };\n\n    let current_lang = null;\n\n    const getLanguage = () => {\n        if (/ach/i.test(current_lang) || /ach/i.test(languageFromUrl())) {\n            const crowdin_lang_key = 'jipt_language_code_binary-static';\n            const crowdin_lang     = localStorage.getItem(crowdin_lang_key) || Cookies.get(crowdin_lang_key); // selected language for in-context translation\n            if (crowdin_lang) {\n                current_lang = crowdin_lang.toUpperCase().replace('-', '_').toUpperCase();\n                if (document.body) {\n                    document.body.classList.add(current_lang); // set the body class removed by crowdin code\n                }\n            }\n        }\n        current_lang = (current_lang || (languageFromUrl() || Cookies.get('language') || default_language).toUpperCase());\n        return current_lang;\n    };\n\n    const urlForLanguage = (lang, url = window.location.href) =>\n        url.replace(new RegExp(`/${getLanguage()}/`, 'i'), `/${(lang || default_language).trim().toLowerCase()}/`);\n\n    return {\n        getAll   : () => all_languages,\n        setCookie: setCookieLanguage,\n        get      : getLanguage,\n        urlFor   : urlForLanguage,\n        urlLang  : languageFromUrl,\n        reset    : () => { url_lang = null; current_lang = null; },\n    };\n})();\n\nmodule.exports = Language;\n","if (window.NodeList && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = function (callback, thisArg) {\n        thisArg = thisArg || window;\n        for (var i = 0; i < this.length; i++) {\n            callback.call(thisArg, this[i], i, this);\n        }\n    };\n}\n","if (!Element.prototype.closest) {\n    Element.prototype.closest = function(s) {\n        var el = this;\n        if (!document.documentElement.contains(el)) return null;\n        do {\n            if (el.matches(s)) return el;\n            el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1); \n        return null;\n    };\n}\n","Element.prototype.hide = function() {\n    this.style.display = 'none';\n    return this;\n};\n\nElement.prototype.show = function() {\n    this.style.display = '';\n    return this;\n};\n\nif (!('remove' in Element.prototype)) {\n    Element.prototype.remove = function() {\n        if (this.parentNode) {\n            this.parentNode.removeChild(this);\n        }\n        return this;\n    };\n}\n\nElement.prototype.toggleClass = function(class_name, should_add) {\n    if (typeof should_add === 'undefined') { // toggle\n        should_add = !this.classList.contains(class_name);\n    }\n    this.classList[should_add ? 'add' : 'remove'](class_name);\n    return this;\n};\n\nElement.prototype.setVisibility = function(make_visible) {\n    this.toggleClass('invisible', !make_visible);\n    return this;\n};\n\n\nElement.prototype.html = function(content) {\n    if (typeof content === 'object') {\n        this.innerHTML = '';\n        this.appendChild(content);\n    } else {\n        this.innerHTML = content;\n    }\n    return this;\n};\n","import BinarySocket   from './socket_base';\nimport {\n    cloneObject,\n    getPropertyValue,\n    isDeepEqual,\n    isEmptyObject }   from '../utility';\n\n/**\n * A layer over BinarySocket to handle subscribing to streaming calls\n * in order to keep track of subscriptions, manage forget, prevent multiple subscription at the same time, ...\n *\n * structure of the the subscription object is:\n * {\n *     1: { msg_type: 'proposal', request: { ... }, stream_id: '...', subscribers: [ ... ] },\n *     2: ...\n * }\n * object keys: subscription_id that assigned to each subscription\n * msg_type   : msg_type of the request for faster filtering\n * request    : the request object, used to subscribe to the same stream when there is a new subscribe request with exactly the same values\n * stream_id  : id of the stream which stored from its response and used to forget the stream when needed\n * subscribers: an array of callbacks to dispatch the response to\n */\nconst SubscriptionManager = (() => {\n    const subscriptions    = {};\n    const forget_requested = {};\n\n    let subscription_id = 0;\n\n    /**\n     * To submit request for a new subscription\n     *\n     * @param {String}   msg_type             msg_type of the request\n     * @param {Object}   request_obj          the whole object of the request to be made\n     * @param {Function} fncCallback          callback function to pass the responses to\n     * @param {Boolean}  should_forget_first  when it's true: forgets the previous subscription, then subscribes after receiving the forget response (if any)\n     */\n    const subscribe = (msg_type, request_obj, fncCallback, should_forget_first = false) => {\n        if (should_forget_first) {\n            forget(msg_type, fncCallback).then(() => {\n                subscribe(msg_type, request_obj, fncCallback);\n            });\n            return;\n        }\n\n        let sub_id = Object.keys(subscriptions).find(id => isDeepEqual(request_obj, subscriptions[id].request));\n\n        if (!sub_id) {\n            sub_id = ++subscription_id;\n\n            subscriptions[sub_id] = {\n                msg_type,\n                request    : cloneObject(request_obj),\n                stream_id  : '',             // stream_id will be updated after receiving the response\n                subscribers: [fncCallback],\n            };\n\n            BinarySocket.send(request_obj, {\n                callback: (response) => dispatch(response, sub_id),\n            });\n        } else if (!hasCallbackFunction(sub_id, fncCallback)) {\n            // there is already an active subscription for the very same request which fncCallback is not subscribed to it yet\n            subscriptions[sub_id].subscribers.push(fncCallback);\n        }\n    };\n\n    /**\n     * Add subscription without subscribers from request\n     * E.g. open subscription to proposal_open_contract on buy request\n     * @param {String}   msg_type               msg_type of the subscription\n     * @param {Object}   send_request           the object of the request to be made\n     * @param {Object}   subscribe_request      the object of the subscription request\n     * @param {Array}    subscription_props     Array of prop strings to add to subscribe_request from initial request, e.g. contract_id\n     */\n    const addSubscriptionFromRequest = (msg_type, send_request, subscribe_request, subscription_props) =>\n        new Promise((resolve) => {\n            let sub_id;\n            let is_stream = false;\n\n            BinarySocket.send(send_request, {\n                callback: (response) => {\n                    if (response.error) {\n                        return resolve(response);\n                    }\n                    if (!is_stream) {\n                        is_stream = true;\n                        sub_id    = ++subscription_id;\n\n                        if (subscription_props && Array.isArray(subscription_props)) {\n                            subscription_props.forEach((prop) => {\n                                if (response[response.msg_type][prop]) {\n                                    subscribe_request[prop] = response[response.msg_type][prop];\n                                }\n                            });\n                        }\n\n                        subscriptions[sub_id] = {\n                            msg_type,\n                            request    : cloneObject(subscribe_request),\n                            stream_id  : '',             // stream_id will be updated after receiving the response\n                            subscribers: [],\n                        };\n                        return resolve(response);\n                    }\n                    return dispatch(response, sub_id);\n                },\n            });\n        });\n\n    // dispatches the response to subscribers of the specific subscription id (internal use only)\n    const dispatch = (response, sub_id) => {\n        const stream_id = getPropertyValue(response, [response.msg_type, 'id']) || getPropertyValue(response.subscription, ['id']);\n\n        if (!subscriptions[sub_id]) {\n            if (!forget_requested[stream_id]) {\n                forgetStream(stream_id);\n            }\n            return;\n        }\n\n        const sub_info = subscriptions[sub_id];\n        // set the stream_id\n        if (!sub_info.stream_id && stream_id) {\n            sub_info.stream_id = stream_id;\n        }\n\n        // callback subscribers\n        const subscribers = sub_info.subscribers;\n        if (subscribers.length) {\n            if (\n                // it is the first response\n                !sub_info.stream_id &&\n                    (\n                        // the first response returned error\n                        response.error\n                        || (\n                            // not a subscription (i.e. subscribed proposal_open_contract for an expired contract)\n                            // also to filter out streams with no stream id but later it will continue streaming (i.e. proposal_open_contract without contract id)\n                            !isEmptyObject(response[response.msg_type]) &&\n                            // check msg_type to filter out those calls which don't return stream `id` on first response (tick_history, ...)\n                            response.msg_type === sub_info.msg_type\n                        )\n                    )\n                ||\n                // remove when response isn't first and response has no stream_id\n                !stream_id && sub_info.stream_id\n            ) {\n                delete subscriptions[sub_id];\n            }\n            sub_info.subscribers.forEach((fnc) => {\n                fnc(response);\n            });\n        } else {\n            delete subscriptions[sub_id];\n            forgetStream(sub_info.stream_id);\n        }\n    };\n\n    /**\n     * To forget a subscription which submitted for a specific callback function\n     *\n     * @param  {String}   msg_type      msg_type to forget\n     * @param  {Function} fncCallback   the same function passed to subscribe()\n     *     (this is the way to distinguish between different subscribers of the same stream at the same time)\n     * @param  {Object}   match_values  optional, to only forget subscriptions having request that \"contains\" provided values\n     * @return {Promise}  the promise object of all possible forget requests\n     */\n    const forget = (msg_type, fncCallback, match_values) => {\n        if (typeof fncCallback !== 'function') {\n            throw new Error(`Missing callback function. To forget all subscriptions of msg_type: ${msg_type}, please call forgetAll().`);\n        }\n\n        const forgets_list = [];\n        Object.keys(subscriptions).forEach((id) => {\n            if (subscriptions[id].msg_type === msg_type) { // it's the msg_type we are looking for\n                if (!match_values || hasValues(subscriptions[id].request, match_values)) { // the value matches as well\n                    const stream_id = subscriptions[id].stream_id;\n                    if (stream_id && subscriptions[id].subscribers.length === 1) { // there is only one subscriber, so we can forget the call\n                        delete subscriptions[id];\n                        forgets_list.push(forgetStream(stream_id));\n                    } else if (hasCallbackFunction(id, fncCallback)) {\n                        // there are other subscribers, or for some reason there is no stream_id:\n                        // (i.e. returned an error, or forget() being called before the first response)\n                        subscriptions[id].subscribers.splice(subscriptions[id].subscribers.indexOf(fncCallback), 1);\n                    }\n                }\n            }\n        });\n        return Promise.all(forgets_list);\n    };\n\n    /**\n     * To forget all active subscriptions of a list of msg_types\n     *\n     * @param  {String}  msg_types  list of msg_types to forget\n     * @return {Promise} the promise object of all possible forget_all requests\n     */\n    const forgetAll = (...msg_types) => {\n        const types_to_forget = {};\n\n        msg_types.forEach((msg_type) => {\n            const sub_ids = Object.keys(subscriptions).filter(id => subscriptions[id].msg_type === msg_type);\n            if (sub_ids.length) {\n                sub_ids.forEach((id) => {\n                    delete subscriptions[id];\n                });\n                types_to_forget[msg_type] = true;\n            }\n        });\n\n        return Promise.resolve(\n            !isEmptyObject(types_to_forget) ?\n                BinarySocket.send({ forget_all: Object.keys(types_to_forget) }) :\n                {}\n        );\n    };\n\n    const forgetStream = (stream_id) => {\n        forget_requested[stream_id] = true; // to prevent forgetting multiple times\n        return Promise.resolve(\n            stream_id ?\n                BinarySocket.send({ forget: stream_id }).then(() => { delete forget_requested[stream_id]; }) :\n                {}\n        );\n    };\n\n    const hasCallbackFunction = (sub_id, fncCallback) =>\n        (subscriptions[sub_id] && subscriptions[sub_id].subscribers.indexOf(fncCallback) !== -1);\n\n    const hasValues = (request_obj, values_obj) => (\n        typeof request_obj === 'object' &&\n        typeof values_obj  === 'object' &&\n        Object.keys(values_obj).every(key => request_obj[key] === values_obj[key])\n    );\n\n    return {\n        addSubscriptionFromRequest,\n        subscribe,\n        forget,\n        forgetAll,\n        forgetStream,\n    };\n})();\n\nexport default SubscriptionManager;\n","/*\n Responses that should be ignored upon receiving errors.\n We still log them, but having an error inside of these\n will not break the queue and send them to trackjs.\n This will look for predefined `ignored_responses_in_trackjs` from GTM, if\n there is none, then it just does not filter out any response.\n*/\nconst ignored_responses_in_trackjs = window.ignored_responses_in_trackjs || [];\n\nclass ResponseQueue {\n    constructor() {\n        this.list = [];\n        this.size = 3;\n    }\n\n    add (response) {\n        this.list.unshift(response);\n    }\n\n    remove () {\n        this.list.pop();\n    }\n\n    push (response) {\n        if (this.list.length >= this.size) {\n            this.remove();\n        }\n        this.add(response);\n    }\n\n    fresh () {\n        this.list = [];\n    }\n}\n\nconst queue = new ResponseQueue();\n\n/**\n * Listen on method calls and inspect the response to see if error is thrown.\n * Handling the response status is NOT this function's responsibility\n */\nexport const ApiCallProxyHandler = {\n    get(target, prop_key, receiver) {\n        try {\n            const target_value = Reflect.get(target, prop_key, receiver);\n            if (typeof target_value === 'function') {\n                return function(...args) {\n                    const result = target_value.apply(this, args);\n                    if (result instanceof Promise) {\n                        return new Promise((resolve) => {\n                            let return_value;\n                            result.then(response => {\n                                if (response.error) {\n                                    queue.push(response);\n                                    if (window.TrackJS) window.TrackJS.console.log(queue.list);\n                                    queue.fresh();\n                                    if (\n                                        window.TrackJS &&\n                                        !ignored_responses_in_trackjs.some(item => item === response.error.code)\n                                    ) {\n                                        window.TrackJS.track(response.error.code);\n                                    }\n                                }\n                                queue.push(response);\n                                return_value = response;\n                            }).catch(error => {\n                                if (window.TrackJS) {\n                                    window.TrackJS.console.log(queue.list);\n                                    window.TrackJS.track(error.getMessage());\n                                }\n                            }).finally(() => {\n                                resolve(return_value);\n                            });\n                        });\n                    }\n                    return result;\n                }.bind(this);\n            }\n            return target_value;\n        } catch (error) {\n            throw new Error(error.getMessage());\n        }\n    },\n};\n\nexport const trackJSNetworkMonitor = (obj) => new Proxy(obj, ApiCallProxyHandler);\n","import BinarySocket              from '_common/base/socket_base';\nimport SubscriptionManager       from '_common/base/subscription_manager';\nimport { isEmptyObject }         from '_common/utility';\nimport { trackJSNetworkMonitor } from './trackjs';\n\nconst WS = (() => {\n    const activeSymbols = (options) =>\n        BinarySocket.send({ active_symbols: 'brief' }, { msg_type: 'active_symbols', ...(options && options) });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const cashier = (action, verification_code) =>\n        BinarySocket.send({ cashier: action, ...(verification_code && { verification_code }) });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const getTradingTimes = (date) =>\n        BinarySocket.send({ trading_times: date });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const newAccountVirtual = (verification_code, client_password, residence) =>\n        BinarySocket.send({\n            new_account_virtual: 1,\n            verification_code,\n            client_password,\n            residence,\n        });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const profitTable = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ profit_table: 1, description: 1, limit, offset, ...date_boundaries });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const residenceList = () =>\n        BinarySocket.send({ residence_list: 1 });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object, force_request) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object, force_request) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    const verifyEmail = (email, type) =>\n        BinarySocket.send({ verify_email: email, type });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const forgetStream = (stream_id) =>\n        SubscriptionManager.forgetStream(stream_id);\n\n    const subscribeBalance = (cb, is_forced) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb, is_forced);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeProposalOpenContractOnBuy = (buy_request) =>\n        SubscriptionManager.addSubscriptionFromRequest(\n            'proposal_open_contract',\n            { ...buy_request, subscribe: 1 },\n            { proposal_open_contract: 1, subscribe: 1 },\n            ['contract_id'],\n        );\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        cashier,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        getTradingTimes,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        newAccountVirtual,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        profitTable,\n        proposalOpenContract,\n        residenceList,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n        verifyEmail,\n\n        // streams\n        forget,\n        forgetAll,\n        forgetStream,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeProposalOpenContractOnBuy,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default trackJSNetworkMonitor(WS);\n","if (!Element.prototype.matches) {\n    Element.prototype.matches =\n        Element.prototype.matchesSelector ||\n        Element.prototype.mozMatchesSelector ||\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.oMatchesSelector ||\n        Element.prototype.webkitMatchesSelector ||\n        function(s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n}\n","const isMobile = () => /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\nmodule.exports = {\n    isMobile,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ErrorComponent from './index';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        if (window.TrackJS) window.TrackJS.console.log(this.props.root_store);\n\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    };\n\n    render = () => this.state.hasError ? (\n        <ErrorComponent should_show_refresh={true} />\n    ) : this.props.children;\n}\n\nErrorBoundary.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default connect((store) => (\n    {\n        root_store: store,\n    }\n))(ErrorBoundary);\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst Loading = ({ id, is_slow_loading, status, theme }) => (\n    <div className='initial-loader'>\n        <div id={id} className={`initial-loader__barspinner barspinner barspinner-${ theme || 'light'}`}>\n            { Array.from(new Array(5)).map((x, inx) => (\n                <div key={inx} className={`initial-loader__barspinner--rect barspinner__rect barspinner__rect--${inx + 1} rect${inx + 1}`} />\n            ))}\n        </div>\n        { is_slow_loading && status.map((text, inx) => (\n            <h3 className='initial-loader__text' key={inx}>{text}</h3>\n        ))\n        }\n    </div>\n);\n\nLoading.propTypes = {\n    id: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    is_slow_loading: PropTypes.bool,\n    status         : PropTypes.array,\n    theme          : PropTypes.string,\n};\nexport default Loading;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { Scrollbars } from 'tt-react-custom-scrollbars';\nimport { connect }    from 'Stores/connect';\nimport routes         from 'Constants/routes';\n// import InstallPWA     from './install-pwa.jsx';\nimport Loading        from '../../../templates/app/components/loading.jsx';\n\nconst AppContents = ({\n    // addNotificationBar,\n    children,\n    is_app_disabled,\n    is_contract_mode,\n    is_dark_mode,\n    is_loading,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_route_modal_on,\n    is_slow_loading,\n    location,\n    slow_loading_status,\n    // setPWAPromptEvent,\n}) => {\n    if (is_logged_in) {\n        // TODO: uncomment these after the issues with showing the prompt too often and in the app are fixed\n        // window.addEventListener('beforeinstallprompt', e => {\n        //     console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n        //\n        //     e.preventDefault();\n        //\n        //     setPWAPromptEvent(e);\n        //     addNotificationBar({\n        //         content : <InstallPWA />,\n        //         autoShow: 10000, // show after 10 secs\n        //         msg_type: 'pwa',\n        //     });\n        // });\n    }\n\n    return (\n        <React.Fragment>\n            { is_loading && location.pathname === routes.trade &&\n                <Loading\n                    is_slow_loading={is_slow_loading}\n                    status={slow_loading_status}\n                    theme={is_dark_mode ? 'dark' : 'light'}\n                />\n            }\n            <div\n                id='app_contents'\n                className={classNames('app-contents', {\n                    'app-contents--show-positions-drawer': is_positions_drawer_on,\n                    'app-contents--contract-mode'        : is_contract_mode,\n                    'app-contents--is-disabled'          : is_app_disabled,\n                    'app-contents--is-route-modal'       : is_route_modal_on,\n                })}\n            >\n                {/* Calculate height of user screen and offset height of header and footer */}\n                <Scrollbars\n                    autoHide\n                    style={{ height: 'calc(100vh - 83px)' }}\n                >\n                    {children}\n                </Scrollbars>\n            </div>\n        </React.Fragment>\n    );\n};\n\nAppContents.propTypes = {\n    addNotificationBar    : PropTypes.func,\n    children              : PropTypes.any,\n    is_app_disabled       : PropTypes.bool,\n    is_contract_mode      : PropTypes.bool,\n    is_dark_mode          : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_route_modal_on     : PropTypes.bool,\n    is_slow_loading       : PropTypes.bool,\n    pwa_prompt_event      : PropTypes.object,\n    setPWAPromptEvent     : PropTypes.func,\n    slow_loading_status   : PropTypes.array,\n};\n\nexport default withRouter(connect(\n    ({ client, modules, ui }) => ({\n        is_logged_in          : client.is_logged_in,\n        is_contract_mode      : modules.smart_chart.is_contract_mode,\n        // addNotificationBar    : ui.addNotificationBar,\n        is_app_disabled       : ui.is_app_disabled,\n        is_dark_mode          : ui.is_dark_mode_on,\n        is_loading            : ui.is_loading,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_route_modal_on     : ui.is_route_modal_on,\n        is_slow_loading       : ui.is_slow_loading,\n        pwa_prompt_event      : ui.pwa_prompt_event,\n        slow_loading_status   : ui.slow_loading_status,\n        // setPWAPromptEvent     : ui.setPWAPromptEvent,\n    })\n)(AppContents));\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport { connect }  from 'Stores/connect';\nimport { Popover }  from 'App/Components/Elements/Popover';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status__wrapper'>\n        <Popover\n            classNameBubble='network-status__tooltip'\n            alignment='top'\n            message={localize('Network status: {{status}}', { status: (status.tooltip || localize('Connecting to server')) })}\n        >\n            <div className={classNames(\n                'network-status__circle', {\n                    'network-status__circle--offline': (status.class === 'offline'),\n                    'network-status__circle--online' : (status.class === 'online'),\n                    'network-status__circle--blinker': (status.class === 'blinker'),\n                })}\n            />\n        </Popover>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n\nexport default connect(\n    ({ common }) => ({\n        status: common.network_status,\n    })\n)(NetworkStatus);\n","import classNames from 'classnames';\nimport React      from 'react';\nimport Icon       from 'Assets/icon.jsx';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    };\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', 'footer__link', {\n            'ic-fullscreen--active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <Icon icon='IconMaximize' className='footer__icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Icon       from 'Assets/icon.jsx';\n\nconst TogglePositions = ({\n    positions_count,\n    is_positions_drawer_on,\n    togglePositionsDrawer,\n}) => {\n    const toggle_positions_class = classNames(\n        'ic-positions',\n        'footer__link', {\n            'ic-positions--active'   : is_positions_drawer_on,\n            'ic-positions--has-count': (positions_count > 0),\n        }\n    );\n    return (\n        <a\n            className={toggle_positions_class}\n            onClick={togglePositionsDrawer}\n            data-count={positions_count}\n        >\n            <Icon icon='IconPositions' className='footer__icon ic-positions__icon' />\n        </a>\n    );\n};\n\nTogglePositions.propTypes = {\n    is_positions_drawer_on: PropTypes.bool,\n    positions_count       : PropTypes.number,\n    togglePositionsDrawer : PropTypes.func,\n};\n\nexport { TogglePositions };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport ReactDOM          from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport Icon              from 'Assets/icon.jsx';\nimport VerticalTab       from 'App/Components/Elements/VerticalTabs';\n\nclass ModalElement extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.el = document.createElement('div');\n        this.state = {\n            modal_root: document.getElementById('modal_root'),\n        };\n    }\n\n    componentDidMount = () => {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        this.el.classList.add('modal');\n        this.state.modal_root.appendChild(this.el);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n        this.state.modal_root.removeChild(this.el);\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open) {\n            this.props.toggleModal();\n        }\n    };\n\n    render() {\n        return ReactDOM.createPortal(\n            <div ref={this.setWrapperRef} className={classNames('modal__container', this.props.className && `modal__${this.props.className}`)}>\n                <div className='modal-header'>\n                    <h3 className='modal-header__sidebar'>{this.props.title}</h3>\n                    <div className='modal-header__main'>\n                        { this.props.header &&\n                            <div className='modal-header__section'>\n                                {this.props.header}\n                            </div>\n                        }\n                        <div className='modal-header__close' onClick={this.props.toggleModal}>\n                            <Icon icon='ModalIconClose' />\n                        </div>\n                    </div>\n                </div>\n                <VerticalTab\n                    alignment='center'\n                    classNameHeader='modal__tab-header'\n                    list={this.props.modal_content}\n                    selected_index={this.props.selected_index}\n                />\n            </div>,\n            this.el\n        );\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n}\n\nModalElement.propTypes = {\n    className     : PropTypes.string,\n    header        : PropTypes.node,\n    is_open       : PropTypes.bool,\n    modal_content : PropTypes.array,\n    selected_index: PropTypes.number,\n    title         : PropTypes.string,\n    toggleModal   : PropTypes.func,\n};\n\nconst Modal = ({\n    className,\n    header,\n    is_open,\n    modal_content,\n    selected_index,\n    title,\n    toggleModal,\n}) => (\n    <CSSTransition\n        appear\n        in={is_open}\n        timeout={250}\n        classNames={{\n            appear   : 'modal__container--enter',\n            enter    : 'modal__container--enter',\n            enterDone: 'modal__container--enter-done',\n            exit     : 'modal__container--exit',\n        }}\n        unmountOnExit\n    >\n        <ModalElement\n            className={className}\n            header={header}\n            is_open={is_open}\n            modal_content={modal_content}\n            selected_index={selected_index}\n            title={title}\n            toggleModal={toggleModal}\n        />\n    </CSSTransition>\n);\n\nModal.propTypes = {\n    className     : PropTypes.string,\n    header        : PropTypes.node,\n    is_open       : PropTypes.bool,\n    modal_content : PropTypes.array,\n    selected_index: PropTypes.number,\n    title         : PropTypes.string,\n    toggleModal   : PropTypes.func,\n};\n\nexport {\n    Modal,\n    ModalElement,\n};\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { Modal }    from 'App/Components/Elements/modal.jsx';\nimport UILoader     from 'App/Components/Elements/ui-loader.jsx';\nimport Lazy         from 'App/Containers/Lazy';\nimport { localize } from 'App/i18n';\nimport Icon         from 'Assets/icon.jsx';\nimport 'Sass/app/modules/settings.scss';\n\nconst ThemeSetting = () => (\n    <Lazy\n        ctor={() => import(/* webpackChunkName: \"settings-theme\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-theme.jsx')}\n        should_load={true}\n        has_progress={true}\n    />\n);\nconst LanguageSettingContainer = () => (\n    <Lazy\n        ctor={() => import(/* webpackChunkName: \"settings-language\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-language.jsx')}\n        should_load={true}\n        has_progress={true}\n    />\n);\n\nconst ChartSettingContainer = () => (\n    <Lazy\n        ctor={() => import(/* webpackChunkName: \"settings-chart\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-chart.jsx')}\n    />\n);\n\nChartSettingContainer.displayName    = 'ChartSettingContainer';\nLanguageSettingContainer.displayName = 'LanguageSettingContainer';\nThemeSetting.displayName             = 'ThemeSettingContainer';\n\nconst modal_content = [\n    {\n        icon : 'IconTheme',\n        label: localize('Themes'),\n        // eslint-disable-next-line react/display-name\n        value: ThemeSetting,\n    }, {\n        icon : 'IconLanguage',\n        label: localize('Language'),\n        value: LanguageSettingContainer,\n    }, {\n        icon : 'IconCharts',\n        label: localize('Charts'),\n        value: ChartSettingContainer,\n        // uncomment below lines to bring back purchase lock and purchase confirmation}\n        // }, {\n        //     icon : IconPurchase,\n        //     label: localize('Purchase'),\n        //     value: PurchaseSettings,\n    },\n];\n\nconst ToggleSettings = ({\n    enableApp,\n    is_settings_visible,\n    disableApp,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', 'footer__link', {\n        'ic-settings--active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <Icon icon='IconSettings' className='footer__icon ic-settings__icon' />\n            </a>\n            <React.Suspense fallback={<UILoader />}>\n                <Modal\n                    modal_content={modal_content}\n                    enableApp={enableApp}\n                    is_open={is_settings_visible}\n                    disableApp={disableApp}\n                    title={localize('Platform settings')}\n                    toggleModal={toggleSettings}\n                />\n            </React.Suspense>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    disableApp         : PropTypes.func,\n    enableApp          : PropTypes.func,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport { withRouter }                 from 'react-router';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport routes                         from 'Constants/routes';\nimport { connect }                    from 'Stores/connect';\nimport ServerTime                     from '../server-time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePositions,\n    ToggleSettings }                  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    active_positions,\n    enableApp,\n    is_app_disabled,\n    is_loading,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_route_modal_on,\n    is_settings_modal_on,\n    location,\n    disableApp,\n    show_positions_toggle,\n    togglePositionsDrawer,\n    toggleSettingsModal,\n}) => (\n    <React.Fragment>\n        { (!is_loading || location.pathname !== routes.trade) &&\n            <footer className={classNames('footer', {\n                'footer--is-disabled': (is_app_disabled || is_route_modal_on),\n            })}\n            >\n                <div className='footer__links footer__links--left'>\n                    {\n                        (is_logged_in && show_positions_toggle) &&\n                        <TogglePositions\n                            is_positions_drawer_on={is_positions_drawer_on}\n                            togglePositionsDrawer={togglePositionsDrawer}\n                            positions_count={active_positions.length || 0}\n                        />\n                    }\n                </div>\n                <NetworkStatus />\n                <ServerTime />\n                <div className='footer__links'>\n                    <ToggleSettings\n                        is_settings_visible={is_settings_modal_on}\n                        toggleSettings={toggleSettingsModal}\n                        disableApp={disableApp}\n                        enableApp={enableApp}\n                    />\n                    <ToggleFullScreen />\n                </div>\n            </footer>\n        }\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    is_app_disabled       : PropTypes.bool,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_route_modal_on     : PropTypes.bool,\n    is_settings_modal_on  : PropTypes.bool,\n    location              : PropTypes.object,\n    show_positions_toggle : PropTypes.bool,\n    togglePositionsDrawer : PropTypes.func,\n    toggleSettingsModal   : PropTypes.func,\n};\n\nexport default withRouter(connect(\n    ({ client, modules, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        enableApp             : ui.enableApp,\n        is_app_disabled       : ui.is_app_disabled,\n        is_route_modal_on     : ui.is_route_modal_on,\n        is_logged_in          : client.is_logged_in,\n        is_loading            : ui.is_loading,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_settings_modal_on  : ui.is_settings_modal_on,\n        disableApp            : ui.disableApp,\n        show_positions_toggle : ui.show_positions_toggle,\n        togglePositionsDrawer : ui.togglePositionsDrawer,\n        toggleSettingsModal   : ui.toggleSettingsModal,\n    })\n)(Footer));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ is_logged_in, items }) => (\n    <React.Fragment>\n        {!!items.length &&\n        <div className='header__menu-links'>\n            {\n                items.map((item, idx) => (\n                    (item.login_only && (item.login_only !== is_logged_in)) ?\n                        null\n                        :\n                        <BinaryLink key={idx} to={item.link_to} className='header__menu-link' active_class='header__menu-link--active'>\n                            <React.Fragment>\n                                {item.text &&\n                                    <span title={item.text} className='header__menu-link-text'>{item.icon}{item.text}{item.logo}</span>\n                                }\n                                {item.image &&\n                                    <span className='header__menu-link-text'>{item.image}{item.logo}</span>\n                                }\n                            </React.Fragment>\n                        </BinaryLink>\n                ))\n            }\n        </div>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        is_logged_in: PropTypes.bool,\n        link_to     : PropTypes.string,\n        text        : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport Button              from 'deriv-components/lib/button';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from 'App/i18n';\n\nconst LoginButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--secondary btn--secondary--orange')}\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nLoginButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { LoginButton };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from 'App/i18n';\nimport { urlFor }          from '_common/url';\nimport Button              from 'deriv-components/lib/button';\n\nconst SignupButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Sign up')}\n        onClick={() => { window.open(urlFor('new-account', undefined, undefined, true)); }}\n    />\n);\n\nSignupButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { SignupButton };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Button       from 'deriv-components/lib/button';\nimport { localize } from 'App/i18n';\n\nconst UpgradeButton = ({ className, onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import * as PropTypes       from 'prop-types';\nimport React, { Component } from 'react';\nimport { formatMoney }      from '_common/base/currency_base';\nimport { urlFor }           from '_common/url';\nimport Button               from 'deriv-components/lib/button';\nimport Lazy                 from 'App/Containers/Lazy';\nimport { localize }         from 'App/i18n';\nimport { LoginButton }      from './login-button.jsx';\nimport { SignupButton }     from './signup-button.jsx';\n// import ToggleCashier        from './toggle-cashier.jsx';\nimport { UpgradeButton }    from './upgrade-button.jsx';\nimport 'Sass/app/_common/components/account-switcher.scss';\n\nconst AccountInfo = React.lazy(() => import(/* webpackChunkName: \"account-info\", webpackPreload: true */'App/Components/Layout/Header/account-info.jsx'));\n\nexport class AccountActions extends Component {\n    shouldComponentUpdate(nextProps) {\n        return (\n            nextProps.active_cashier_tab !== this.props.active_cashier_tab ||\n            nextProps.balance !== this.props.balance ||\n            nextProps.can_upgrade !== this.props.can_upgrade ||\n            nextProps.can_upgrade_to !== this.props.can_upgrade_to ||\n            nextProps.currency !== this.props.currency ||\n            nextProps.is_acc_switcher_on !== this.props.is_acc_switcher_on ||\n            nextProps.is_cashier_modal_on !== this.props.is_cashier_modal_on ||\n            nextProps.is_logged_in !== this.props.is_logged_in ||\n            nextProps.is_virtual !== this.props.is_virtual ||\n            nextProps.loginid !== this.props.loginid\n        );\n    }\n\n    render() {\n        const {\n            // active_cashier_tab,\n            balance,\n            can_upgrade,\n            can_upgrade_to,\n            currency,\n            // hideFullBlur,\n            is_acc_switcher_on,\n            // is_cashier_modal_on,\n            is_logged_in,\n            is_virtual,\n            loginid,\n            onClickUpgrade,\n            toggleAccountsDialog,\n            // toggleCashierModal,\n            // showFullBlur,\n        } = this.props;\n        if (is_logged_in) {\n            return (\n                <React.Fragment>\n                    <React.Suspense fallback={<div />}>\n                        <AccountInfo\n                            balance={formatMoney(currency, balance, true)}\n                            is_upgrade_enabled={can_upgrade}\n                            is_virtual={is_virtual}\n                            onClickUpgrade={onClickUpgrade}\n                            currency={currency}\n                            loginid={loginid}\n                            is_dialog_on={is_acc_switcher_on}\n                            toggleDialog={toggleAccountsDialog}\n                        />\n                    </React.Suspense>\n                    {!!(\n                        can_upgrade_to && is_virtual\n                    ) && <UpgradeButton\n                        className='acc-info__button'\n                        onClick={() => {\n                            window.open(urlFor('user/accounts', undefined, undefined, true));\n                        }}\n                    />}\n                    {/* {!is_virtual && */}\n                    {/* <ToggleCashier */}\n                    {/*    active_tab={active_cashier_tab} */}\n                    {/*    className='acc-info__button' */}\n                    {/*    toggleCashier={toggleCashierModal} */}\n                    {/*    is_cashier_visible={is_cashier_modal_on} */}\n                    {/*    showFullBlur={showFullBlur} */}\n                    {/*    hideFullBlur={hideFullBlur} */}\n                    {/* /> */}\n                    {/* } */}\n                    {!(\n                        is_virtual\n                    ) && // TODO: remove this when cashier pop up is ready\n                    <Button\n                        className='btn--primary btn--primary--orange acc-info__button'\n                        has_effect\n                        text={localize('Deposit')}\n                        onClick={() => {\n                            window.open(urlFor('cashier', undefined, undefined, true),\n                                '_blank',\n                                'noopener',\n                                'noreferrer',\n                            );\n                        }}\n                    />}\n                </React.Fragment>\n            );\n        }\n        return (\n            <React.Fragment>\n                <LoginButton className='acc-info__button' />\n                <SignupButton className='acc-info__button' />\n            </React.Fragment>\n        );\n    }\n}\n\nAccountActions.propTypes = {\n    active_cashier_tab  : PropTypes.any,\n    balance             : PropTypes.any,\n    can_upgrade         : PropTypes.any,\n    can_upgrade_to      : PropTypes.any,\n    currency            : PropTypes.any,\n    hideFullBlur        : PropTypes.any,\n    is_acc_switcher_on  : PropTypes.any,\n    is_cashier_modal_on : PropTypes.any,\n    is_logged_in        : PropTypes.any,\n    is_virtual          : PropTypes.any,\n    loginid             : PropTypes.any,\n    onClickUpgrade      : PropTypes.any,\n    showFullBlur        : PropTypes.any,\n    toggleAccountsDialog: PropTypes.any,\n    toggleCashierModal  : PropTypes.any,\n};\n","import React           from 'react';\nimport { localize }    from 'App/i18n';\nimport Icon            from 'Assets/icon.jsx';\nimport { routes }      from 'Constants/index';\n\nconst header_links = [\n    {\n        logo   : <div className='header__logo'>{localize('BETA')}</div>,\n        image  : <Icon icon='IconDeriv' className='header__icon' />,\n        link_to: routes.trade,\n    },\n    {\n        icon      : <Icon icon='IconReports' className='header__icon' />,\n        text      : localize('Reports'),\n        link_to   : routes.reports,\n        login_only: true,\n    },\n];\n\nexport default header_links;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport {\n    AccountActions,\n    MenuLinks,\n}                     from 'App/Components/Layout/Header';\nimport header_links   from 'App/Constants/header-links';\nimport Lazy           from 'App/Containers/Lazy';\nimport routes         from 'Constants/routes';\nimport { connect }    from 'Stores/connect';\n\nconst Header = ({\n    // active_cashier_tab,\n    balance,\n    can_upgrade,\n    can_upgrade_to,\n    currency,\n    enableApp,\n    is_acc_switcher_on,\n    // is_cashier_modal_on,\n    is_app_disabled,\n    is_loading,\n    is_logged_in,\n    is_mobile,\n    is_route_modal_on,\n    is_virtual,\n    location,\n    loginid,\n    onClickUpgrade,\n    disableApp,\n    toggleAccountsDialog,\n    // toggleCashierModal,\n}) => (\n    <React.Fragment>\n        {(!is_loading || location.pathname !== routes.trade) &&\n            <header className={classNames('header', {\n                'header--is-disabled': (is_app_disabled || is_route_modal_on),\n            })}\n            >\n                <div className='header__menu-items'>\n                    <div className='header__menu-left'>\n                        <Lazy\n                            has_progress={false}\n                            ctor={() => import(/* webpackChunkName: \"toggle-menu-drawer\", webpackPreload: true */'App/Components/Layout/Header/toggle-menu-drawer.jsx')}\n                            should_load={is_mobile}\n                        />\n                        <MenuLinks\n                            is_logged_in={is_logged_in}\n                            items={header_links}\n                        />\n                    </div>\n                    <div className='header__menu-right'>\n                        <div className='acc-info__container'>\n                            <AccountActions\n                                // active_cashier_tab={active_cashier_tab}\n                                balance={balance}\n                                can_upgrade_to={can_upgrade_to}\n                                currency={currency}\n                                can_upgrade={can_upgrade}\n                                disableApp={disableApp}\n                                enableApp={enableApp}\n                                is_acc_switcher_on={is_acc_switcher_on}\n                                // is_cashier_modal_on={is_cashier_modal_on}\n                                is_logged_in={is_logged_in}\n                                is_virtual={is_virtual}\n                                loginid={loginid}\n                                onClickUpgrade={onClickUpgrade}\n                                toggleAccountsDialog={toggleAccountsDialog}\n                                // toggleCashierModal={toggleCashierModal}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </header>\n        }\n    </React.Fragment>\n);\n\nHeader.propTypes = {\n    active_cashier_tab  : PropTypes.string,\n    balance             : PropTypes.string,\n    can_upgrade         : PropTypes.bool,\n    can_upgrade_to      : PropTypes.string,\n    currency            : PropTypes.string,\n    disableApp          : PropTypes.func,\n    enableApp           : PropTypes.func,\n    is_acc_switcher_on  : PropTypes.bool,\n    is_app_disabled     : PropTypes.bool,\n    is_cashier_modal_on : PropTypes.bool,\n    is_dark_mode        : PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_logged_in        : PropTypes.bool,\n    is_mobile           : PropTypes.bool,\n    is_route_modal_on   : PropTypes.bool,\n    is_virtual          : PropTypes.bool,\n    location            : PropTypes.object,\n    loginid             : PropTypes.string,\n    onClickUpgrade      : PropTypes.func,\n    toggleAccountsDialog: PropTypes.func,\n    toggleCashierModal  : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        // active_cashier_tab  : ui.active_cashier_tab,\n        balance             : client.balance,\n        can_upgrade         : client.can_upgrade,\n        can_upgrade_to      : client.can_upgrade_to,\n        currency            : client.currency,\n        is_logged_in        : client.is_logged_in,\n        is_virtual          : client.is_virtual,\n        loginid             : client.loginid,\n        enableApp           : ui.enableApp,\n        is_acc_switcher_on  : ui.is_accounts_switcher_on,\n        // is_cashier_modal_on : ui.is_cashier_modal_on,\n        is_dark_mode        : ui.is_dark_mode_on,\n        is_app_disabled     : ui.is_app_disabled,\n        is_loading          : ui.is_loading,\n        is_route_modal_on   : ui.is_route_modal_on,\n        is_mobile           : ui.is_mobile,\n        disableApp          : ui.disableApp,\n        toggleAccountsDialog: ui.toggleAccountsDialog,\n        // toggleCashierModal  : ui.toggleCashierModal,\n    })\n)(Header));\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport Lazy                           from 'App/Containers/Lazy';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return (\n            <Lazy\n                ctor={() => import(/* webpackChunkName: \"error-component\" */'App/Components/Elements/Errors')}\n                should_load={props.has_error}\n                has_progress={true}\n                {...props.error}\n            />\n        );\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.setNetworkStatus(status, is_online);\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action }   from 'mobx';\nimport { localize } from 'App/i18n';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) { // TODO: i18n_issue\n            common_store.showError({\n                message: localize('Your web browser is out of date and may affect your trading experience. Please {{opening_tag}}update your browser{{closing_tag}}.', {\n                    opening_tag  : '<a href=\"http://outdatedbrowser.com\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"link\">',\n                    closing_tag  : '</a>',\n                    interpolation: { escapeValue: false },\n                }),\n                has_html: true,\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import React            from 'react';\nimport { formatDate }   from 'Utils/Date';\nimport { WS }           from 'Services';\nimport { getRiskAssessment,\n    isAccountOfType,\n    shouldAcceptTnc,\n    shouldCompleteTax } from '_common/base/client_base';\nimport { localize }     from 'App/i18n';\nimport {\n    LocalStore,\n    State }             from '_common/storage';\nimport { urlFor }       from '_common/url';\nimport Localize         from '../../App/Components/Elements/localize.jsx';\n\n// TODO: Update links to app_2 links when components are done.\n/* eslint-disable react/jsx-no-target-blank */\nconst client_notifications = {\n    currency: {\n        header : localize('Set Currency'),\n        message: (\n            <Localize\n                i18n_default_text='Please set the <0>currency</0> of your account to enable trading.'\n                components={[<a key={0} className='link link--white' target='_blank' href={urlFor('user/set-currency', undefined, undefined, true)} />]}\n            />\n        ),\n        type: 'danger',\n    },\n    self_exclusion: (excluded_until) => ({\n        header : localize('Self-exclusion Detected'),\n        message: (\n            <Localize\n                i18n_default_text='You have opted to be excluded from Binary.com until {{exclusion_end}}. Please <0>contact us</0> for assistance.'\n                values={{ exclusion_end: formatDate(excluded_until, 'DD/MM/YYYY'), interpolation: { escapeValue: false } }}\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('contact', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    }),\n    authenticate: {\n        header : localize('Account Authentication'),\n        message: (\n            <Localize\n                i18n_default_text='<0>Authenticate your account</0> now to take full advantage of all payment methods available.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/authenticate', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'info',\n    },\n    cashier_locked: {\n        header : localize('Cashier Disabled'),\n        message: localize('Deposits and withdrawals have been disabled on your account. Please check your email for more details.'),\n        type   : 'warning',\n    },\n    withdrawal_locked: {\n        header : localize('Withdrawal Disabled'),\n        message: localize('Withdrawals have been disabled on your account. Please check your email for more details.'),\n        type   : 'warning',\n    },\n    mt5_withdrawal_locked: {\n        header : localize('MT5 Withdrawal Disabled'),\n        message: localize('MT5 withdrawals have been disabled on your account. Please check your email for more details.'),\n        type   : 'warning',\n    },\n    document_needs_action: {\n        header : localize('Authentication Failed'),\n        message: (\n            <Localize\n                i18n_default_text='<0>Your Proof of Identity or Proof of Address</0> did not meet our requirements. Please check your email for further instructions.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/authenticate', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'warning',\n    },\n    unwelcome: {\n        header : localize('Trading and Deposits Disabled'),\n        message: (\n            <Localize\n                i18n_default_text='Trading and deposits have been disabled on your account. Kindly contact <0>customer support</0> for assistance.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('contact', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    mf_retail: {\n        header : localize('Binary Options Trading Disabled'),\n        message: (\n            <Localize\n                i18n_default_text='Binary Options Trading has been disabled on your account. Kindly contact <0>customer support</0> for assistance.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('contact', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    financial_limit: {\n        header : localize('Remove Deposit Limits'),\n        message: (\n            <Localize\n                i18n_default_text='Please set your <0>30-day turnover limit</0> to remove deposit limits.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/security/self_exclusionws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'warning',\n    },\n    risk: {\n        header : localize('Withdrawal and Trading Limits'),\n        message: (\n            <Localize\n                i18n_default_text='Please complete the <0>Financial Assessment form</0> to lift your withdrawal and trading limits.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/settings/assessmentws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'info',\n    },\n    tax: {\n        header : localize('Complete your personal details'),\n        message: (\n            <Localize\n                i18n_default_text='Please complete your <0>Personal Details</0> before you proceed.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/settings/detailsws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    tnc: {\n        header : localize('Terms & Conditions Updated'),\n        message: (\n            <Localize\n                i18n_default_text='Please <0>accept the updated Terms and Conditions</0> to enable deposit and trading.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/tnc_approvalws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    required_fields: {\n        header : localize('Complete your personal details'),\n        message: (\n            <Localize\n                i18n_default_text='Please complete your <0>Personal Details</0> before you proceed.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/settings/detailsws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n};\n\nconst hasMissingRequiredField = (response, client) => {\n    if (!response.get_settings) return false;\n\n    const { landing_company_shortcode } = client;\n    const is_svg = (landing_company_shortcode === 'svg' || landing_company_shortcode === 'costarica');\n\n    let required_fields;\n    if (is_svg) {\n        required_fields = getSVGRequiredFields();\n    } else {\n        required_fields = getRequiredFields();\n    }\n\n    const get_settings = response.get_settings;\n    return required_fields.some(field => !get_settings[field]);\n\n    function getSVGRequiredFields() {\n        const necessary_withdrawal_fields = State.getResponse('landing_company.financial_company.requirements.withdrawal');\n        const necessary_signup_fields     = State.getResponse('landing_company.financial_company.requirements.signup')\n            .map(field => (field === 'residence' ? 'country' : field));\n\n        return [...necessary_withdrawal_fields, ...necessary_signup_fields];\n    }\n\n    function getRequiredFields() {\n        if (!isAccountOfType('financial')) return [];\n        const { residence } = client;\n\n        const required_settings_fields = [\n            'account_opening_reason',\n            'address_line_1',\n            'address_city',\n            'phone',\n            'tax_identification_number',\n            'tax_residence'];\n        const address_postcode_is_required = (residence === 'gb' || landing_company_shortcode === 'iom');\n        if (address_postcode_is_required) required_settings_fields.push('address_postcode');\n\n        return [...required_settings_fields];\n    }\n};\n\nconst checkAccountStatus = (response, client, addNotification, loginid) => {\n    if (!response.get_account_status) return;\n    if (loginid !== LocalStore.get('active_loginid')) return;\n\n    const { prompt_client_to_authenticate, status } = response.get_account_status;\n\n    const {\n        document_under_review,\n        cashier_locked,\n        withdrawal_locked,\n        mt5_withdrawal_locked,\n        document_needs_action,\n        unwelcome,\n        ukrts_max_turnover_limit_not_set,\n        professional,\n    } = getStatusValidations(status);\n    const is_mf_retail = client.landing_company_shortcode === 'maltainvest' && !professional;\n\n    if (cashier_locked)        addNotification(client_notifications.cashier_locked);\n    if (withdrawal_locked)     addNotification(client_notifications.withdrawal_locked);\n    if (mt5_withdrawal_locked) addNotification(client_notifications.mt5_withdrawal_locked);\n    if (document_needs_action) addNotification(client_notifications.document_needs_action);\n    if (unwelcome)             addNotification(client_notifications.unwelcome);\n    if (is_mf_retail)          addNotification(client_notifications.mf_retail);\n    if (ukrts_max_turnover_limit_not_set) {\n        addNotification(client_notifications.financial_limit);\n    }\n    if (getRiskAssessment()) addNotification(client_notifications.risk);\n    if (shouldCompleteTax()) addNotification(client_notifications.tax);\n\n    if ((+prompt_client_to_authenticate) && !(document_under_review || document_needs_action)) {\n        addNotification(client_notifications.authenticate);\n    }\n\n    function getStatusValidations(status_arr) {\n        return status_arr.reduce((validations, account_status) => {\n            validations[account_status] = true;\n            return validations;\n        }, {});\n    }\n};\n\nexport const handleClientNotifications = (client, addNotification, loginid) => {\n    const { currency, excluded_until } = client;\n    if (!currency)         addNotification(client_notifications.currency);\n    if (excluded_until)    addNotification(client_notifications.self_exclusion(excluded_until));\n\n    WS.getAccountStatus().then((response) => checkAccountStatus(response, client, addNotification, loginid));\n\n    WS.sendRequest({ get_settings: 1 }, { forced: true }).then((response) => {\n        if (loginid !== LocalStore.get('active_loginid')) return;\n\n        if (shouldAcceptTnc()) addNotification(client_notifications.tnc);\n\n        if (hasMissingRequiredField(response, client)) {\n            addNotification(client_notifications.required_fields);\n        }\n    });\n};\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport { getElementById }        from '_common/common_functions';\nimport { localize }              from 'App/i18n';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = value => /(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value);\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === getElementById(options.to.substr(1)).value;\nconst validNotEqual = (value, options) => value !== getElementById(options.to.substr(1)).value;\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to {{decimal_count}} decimal places are allowed.', { decimal_count: options.decimals });\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be {{value}}', { value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined) });\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize(\n            'Should be between {{min_value}} and {{max_value}}',\n            {\n                min_value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined),\n                max_value: addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined),\n            }\n        );\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than {{min_value}}', { min_value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined) });\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than {{max_value}}', { max_value: addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined) });\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: {{permitted_characters}}', { permitted_characters: '- . \\' # ; : ( ) , @ /' }) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: {{permitted_characters}}', { permitted_characters: '+ - .' }) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter {{value}} characters.', { value: '{{value}}' }) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of {{value}} characters required.', { value: '{{value}}' }) },\n    not_equal    : { func: validNotEqual,     message: localize('{{value_one}} and {{value_two}} cannot be the same.', { value_one: '{{value_one}}', value_two: '{{value_two}}' }) },\n    number       : { func: validNumber,       message: '' }, // TODO: i18n_issue\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative-validation-rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport BinarySocket      from '_common/base/socket_base';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    @observable partial_fetch_time = 0;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n            store_name,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        const has_local_or_session_storage = local_storage_properties && local_storage_properties.length\n            || session_storage_properties && session_storage_properties.length;\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value     : store_name,\n                enumerable: false,\n                writable  : false,\n            });\n        }\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param [{String}] messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        const is_different = () => !!this.validation_errors[propertyName]\n            .filter(x => !messages.includes(x))\n            .concat(messages.filter(x => !this.validation_errors[propertyName].includes(x)))\n            .length;\n        if (!this.validation_errors[propertyName] || is_different()) {\n            this.validation_errors[propertyName] = messages;\n        }\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        const validation_rules  = Object.keys(this.validation_rules);\n        const validation_errors = Object.keys(this.validation_errors);\n\n        validation_rules.forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n\n        // Remove keys that are present in error, but not in rules:\n        validation_errors.forEach(error => {\n            if (!validation_rules.includes(error)) {\n                delete this.validation_errors[error];\n            }\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n\n    @action.bound\n    assertHasValidCache(loginid, ...reactions) {\n        // account was changed when this was unmounted.\n        if (this.root_store.client.loginid !== loginid) {\n            reactions.forEach(act => act());\n            this.partial_fetch_time = false;\n        }\n    }\n\n    waitFor = async (...prerequisites) => {\n        await BinarySocket.wait(...prerequisites);\n    };\n}\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from 'App/i18n';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        const isCrypto = isCryptocurrency(cur);\n        (isCrypto ? crypto : fiat).push({ text: cur, value: cur, has_tooltip: isCrypto });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import {\n    action,\n    computed,\n    observable,\n    runInAction,\n    when,\n}                                    from 'mobx';\nimport moment                        from 'moment';\nimport {\n    requestLogout,\n    WS }                             from 'Services';\nimport { getAccountTitle }           from '_common/base/client_base';\nimport BinarySocket                  from '_common/base/socket_base';\nimport * as SocketCache              from '_common/base/socket_cache';\nimport { localize }                  from 'App/i18n';\nimport {\n    LocalStore,\n    State }                          from '_common/storage';\nimport BinarySocketGeneral           from 'Services/socket-general';\nimport { handleClientNotifications } from './Helpers/client-notifications';\nimport BaseStore                     from './base-store';\nimport { getClientAccountType }      from './Helpers/client';\nimport { buildCurrenciesList }       from './Modules/Trading/Helpers/currency';\nimport { setCurrencies }             from '../_common/base/currency_base';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable email;\n    @observable switched                   = '';\n    @observable switch_broadcast           = false;\n    @observable currencies_list            = {};\n    @observable residence_list             = [];\n    @observable selected_currency          = '';\n    @observable is_populating_account_list = false;\n    @observable website_status             = {};\n    @observable verification_code          = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual || this.accounts[this.loginid].landing_company_shortcode === 'svg'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return this.accounts && this.accounts[this.loginid] && !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi);\n    }\n\n    @computed\n    get can_upgrade_to() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade_to);\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .find(loginid => !!this.accounts[loginid].is_virtual);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    @computed\n    get account_type() {\n        return getClientAccountType(this.loginid);\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].accepted_bch = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('svg', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().utc().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n        this.user_id      = response.authorize.user_id;\n    }\n\n    @action.bound\n    setWebsiteStatus(response) {\n        this.website_status = response.website_status;\n        setCurrencies(this.website_status);\n    }\n\n    @computed\n    get is_website_status_ready () {\n        return this.website_status &&\n        this.website_status.site_status === 'up';\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            if (this.accounts[account.loginid]) {\n                this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n                Object.keys(account).forEach((param) => {\n                    const param_to_set = param === 'country' ? 'residence' : param;\n                    const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                    if (param_to_set !== 'loginid') {\n                        this.accounts[account.loginid][param_to_set] = value_to_set;\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.root_store.ui.removeAllNotifications();\n        this.setSwitched(loginid);\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        const authorize_response = await this.setUserLogin();\n        this.setLoginId(LocalStore.get('active_loginid'));\n        this.setAccounts(LocalStore.getObject(storage_key));\n        this.setSwitched('');\n        const client = this.accounts[this.loginid];\n\n        // If there is an authorize_response, it means it was the first login\n        if (authorize_response) {\n            // If this fails, it means the landing company check failed\n            if (this.loginid === authorize_response.authorize.loginid) {\n                BinarySocketGeneral.authorizeAccount(authorize_response);\n            } else { // So it will send an authorize with the accepted token, to be handled by socket-general\n                await BinarySocket.send({ authorize: client.token }, { forced: true });\n            }\n        }\n\n        if (client && !client.is_virtual) {\n            BinarySocket.wait('landing_company', 'website_status').then(() => {\n                handleClientNotifications(client, this.root_store.ui.addNotification, this.loginid);\n            });\n        }\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    @action.bound\n    setLoginId(loginid) {\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    setAccounts(accounts) {\n        this.accounts = accounts;\n    }\n\n    @action.bound\n    setSwitched(switched) {\n        this.switched = switched;\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addNotification({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'danger',\n                });\n                // request a logout\n                requestLogout();\n                this.root_store.modules.trade.clearContract();\n                return;\n            }\n\n            this.root_store.modules.portfolio.clearTable();\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addNotification({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        this.root_store.gtm.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n        this.email = email;\n    }\n\n    @action.bound\n    cleanUp() {\n        this.root_store.gtm.pushDataLayer({ event: 'log_out' });\n        this.loginid = null;\n        this.upgrade_info = undefined;\n        this.accounts = [];\n        this.currencies_list  = {};\n        this.selected_currency = '';\n        this.root_store.modules.smart_chart.should_refresh_active_symbols = true;\n        return new Promise(async (resolve) => {\n            await this.root_store.modules.trade.clearContract();\n            await this.root_store.modules.trade.resetErrorServices();\n            await this.root_store.ui.removeAllNotifications();\n            await this.root_store.modules.trade.refresh();\n            return resolve(this.root_store.modules.trade.debouncedProposal());\n        });\n    }\n\n    /* eslint-disable */\n    @action.bound\n    storeClientAccounts(obj_params, account_list) {\n        // store consistent names with other API calls\n        // API_V4: send consistent names\n        const map_names = {\n            country             : 'residence',\n            landing_company_name: 'landing_company_shortcode',\n        };\n        const client_object = {};\n        let active_loginid;\n\n        let is_allowed_real = true;\n        // Performs check to avoid login of landing companies that are currently not supported in app\n        account_list.forEach(function(account) {\n            if (!/^virtual|svg$/.test(account.landing_company_name)) {\n                is_allowed_real = false;\n            }\n        });\n\n        account_list.forEach(function(account) {\n            Object.keys(account).forEach(function(param) {\n                if (param === 'loginid') {\n                    if (!active_loginid && !account.is_disabled) {\n                        if (is_allowed_real && !account.is_virtual) {\n                            active_loginid = account[param];\n                        } else if (account.is_virtual) { // TODO: [only_virtual] remove this to stop logging non-SVG clients into virtual\n                            active_loginid = account[param];\n                        }\n                    }\n                } else {\n                    const param_to_set = map_names[param] || param;\n                    const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                    if (!(account.loginid in client_object)) {\n                        client_object[account.loginid] = {};\n                    }\n                    client_object[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n\n        let i = 1;\n        while (obj_params[`acct${  i}`]) {\n            const loginid = obj_params[`acct${  i}`];\n            const token   = obj_params[`token${  i}`];\n            if (loginid && token) {\n                client_object[loginid].token = token;\n            }\n            i++;\n        }\n\n        // if didn't find any login ID that matched the above condition\n        // or the selected one doesn't have a token, set the first one\n        if (!active_loginid || !client_object[active_loginid].token) {\n            active_loginid = obj_params.acct1;\n        }\n\n        // TODO: send login flag to GTM if needed\n\n        if (active_loginid && Object.keys(client_object).length) {\n            localStorage.setItem('active_loginid', active_loginid);\n            localStorage.setItem('client.accounts', JSON.stringify(client_object));\n        }\n    }\n\n    @action.bound\n    async setUserLogin() {\n        const obj_params = {};\n        const search     = window.location.search;\n        if (search) {\n            const arr_params = window.location.search.substr(1).split('&');\n            arr_params.forEach(function(param) {\n                if (param) {\n                    const param_value = param.split('=');\n                    if (param_value) {\n                        obj_params[param_value[0]] = param_value[1];\n                    }\n                }\n            });\n        }\n        const is_client_logging_in = obj_params.token1;\n\n        if (is_client_logging_in) {\n            window.history.replaceState({}, document.title, '/');\n\n            // is_populating_account_list is used for socket general to know not to filter the first-time logins\n            this.is_populating_account_list = true;\n            const authorize_response = await BinarySocket.send({ authorize: obj_params.token1 });\n            this.is_populating_account_list = false;\n            runInAction(() => {\n                const account_list = (authorize_response.authorize || {}).account_list;\n                if (account_list && !this.accounts) {\n                    this.storeClientAccounts(obj_params, account_list);\n                }\n            });\n            return authorize_response;\n        }\n    }\n\n    @action.bound\n    setVerificationCode(code) {\n        this.verification_code = code;\n        if (code) {\n            LocalStore.set('verification_code', code);\n        } else {\n            LocalStore.remove('verification_code');\n        }\n        // TODO: add await if error handling needs to happen before AccountSignup is initialised\n        // this.fetchResidenceList(); // Prefetch for use in account signup process\n    }\n\n    @action.bound\n    onSignup({ password, residence }) {\n        if (!this.verification_code || !password || !residence) return;\n\n        // Currently the code doesn't reach here and the console log is needed for debugging.\n        // TODO: remove console log when AccountSignup component and validation are ready\n        WS.newAccountVirtual(this.verification_code, password, residence).then(response => console.log(response));\n    }\n\n    fetchResidenceList() {\n        WS.residenceList().then(response => {\n            runInAction(() => {\n                this.residence_list = response.residence_list || [];\n            })\n        });\n    }\n}\n/* eslint-enable */\n","// TODO: [move-to-shared] - Remove the implementation in ClientBase and add this to shared utils\nexport const getClientAccountType = (loginid) => {\n    let account_type;\n    if (/^VR/.test(loginid))          account_type = 'virtual';\n    else if (/^MF/.test(loginid))     account_type = 'financial';\n    else if (/^MLT|MX/.test(loginid)) account_type = 'gaming';\n    return account_type;\n};\n\n// TODO: [move-to-shared] - Remove the implementation in ClientBase and add this to shared utils\nexport const getMT5AccountType = group => (group ? group.replace('\\\\', '_').replace(/_(\\d+|master|EUR|GBP)/, '') : '');\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base-store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @observable services_error = {};\n\n    @observable deposit_url = '';\n    @observable withdraw_url = '';\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setNetworkStatus(status, is_online) {\n        if (this.network_status.class) {\n            this.network_status.class   = status.class;\n            this.network_status.tooltip = status.tooltip;\n        } else {\n            this.network_status = status;\n        }\n        this.is_network_online = is_online;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type: error ? error.type : 'info',\n            ...(error && {\n                header             : error.header,\n                message            : error.message,\n                redirect_label     : error.redirect_label,\n                redirectOnClick    : error.redirectOnClick,\n                should_show_refresh: error.should_show_refresh,\n            }),\n        };\n    }\n\n    @action.bound\n    showError(message, header, redirect_label, redirectOnClick, should_show_refresh) {\n        this.setError(true, {\n            header,\n            message,\n            redirect_label,\n            redirectOnClick,\n            should_show_refresh,\n            type: 'error',\n        });\n    }\n\n    @action.bound\n    setDepositURL(deposit_url) {\n        this.deposit_url = deposit_url;\n    }\n\n    @action.bound\n    setWithdrawURL(withdraw_url) {\n        this.withdraw_url = withdraw_url;\n    }\n}\n","import * as Cookies           from 'js-cookie';\nimport {\n    action,\n    computed }                from 'mobx';\nimport BinarySocket           from '_common/base/socket_base';\nimport { isLoginPages }       from '_common/base/login';\nimport { get as getLanguage } from '_common/language';\nimport {\n    toMoment,\n    epochToMoment }           from 'Utils/Date';\nimport BaseStore              from './base-store';\nimport { getMT5AccountType }  from './Helpers/client';\nimport { getAppId }           from '../config';\n\nexport default class GTMStore extends BaseStore {\n    is_gtm_applicable = /^(16303|16929)$/.test(getAppId());\n\n    constructor(root_store) {\n        super({ root_store });\n\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @computed\n    get visitorId() {\n        return this.root_store.client.loginid;\n    }\n\n    /**\n     * Contains common data that will be passed to GTM on each datalayer push\n     *\n     * @returns {object}\n     */\n    @computed\n    get common_variables() {\n        return {\n            language: getLanguage(),\n            ...this.root_store.client.is_logged_in && {\n                visitorId: this.visitorId,\n                currency : this.root_store.client.currency,\n                userId   : this.root_store.client.user_id,\n            },\n            ...this.root_store.ui.is_dark_mode_on && {\n                theme: this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n            },\n        };\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => resolve(this.pushDataLayer({ event: 'account switch' })));\n    }\n\n    /**\n     * Pushes provided data as GTM DataLayer\n     *\n     * @param {object} data\n     */\n    @action.bound\n    async pushDataLayer(data) {\n        if (this.is_gtm_applicable && !isLoginPages()) {\n            BinarySocket.wait('authorize').then(() => {\n                dataLayer.push({\n                    ...this.common_variables,\n                    ...data,\n                });\n            });\n        }\n    }\n\n    @action.bound\n    pushPurchaseData(contract_data) {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                positions_drawer: this.root_store.ui.is_positions_drawer_on ? 'open' : 'closed',\n                // purchase_confirm: this.root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: this.root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: this.root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : this.root_store.modules.smart_chart.chart_type,\n                    granularity     : this.root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        this.pushDataLayer(data);\n    }\n\n    /**\n     * Pushes deposit & withdrawal data from transaction-stream to GTM\n     *\n     * @param {object} response\n     * @param {object} extra_data\n     */\n    @action.bound\n    pushTransactionData(response, extra_data = {}) {\n        if (!this.is_gtm_applicable || this.root_store.client.is_virtual) return;\n        if (!response.transaction || !response.transaction.action) return;\n        if (!['deposit', 'withdrawal'].includes(response.transaction.action)) return;\n\n        const moment_now  = toMoment();\n        const storage_key = 'GTM_transactions';\n\n        // Remove values from prev days so localStorage doesn't grow to infinity\n        let gtm_transactions = JSON.parse(localStorage.getItem(storage_key)) || {};\n        if (Object.prototype.hasOwnProperty.call(gtm_transactions, 'timestamp')) {\n            if (moment_now.isAfter(epochToMoment(gtm_transactions.timestamp), 'day')) {\n                localStorage.removeItem(storage_key);\n                gtm_transactions = { timestamp: moment_now.unix() };\n            }\n        }\n        const transactions_arr = gtm_transactions.transactions || [];\n        if (!transactions_arr.includes(response.transaction.transaction_id)) {\n            const data = {\n                event           : 'transaction',\n                bom_account_type: this.root_store.client.account_type,\n                bom_today       : moment_now.unix(),\n                transaction     : {\n                    id    : response.transaction.transaction_id,\n                    type  : response.transaction.action,\n                    time  : response.transaction.transaction_time,\n                    amount: response.transaction.amount,\n                },\n            };\n            Object.assign(data, extra_data);\n            this.pushDataLayer(data);\n\n            transactions_arr.push(response.transaction.transaction_id);\n            gtm_transactions.transactions = transactions_arr;\n            gtm_transactions.timestamp    = gtm_transactions.timestamp || moment_now.unix();\n\n            localStorage.setItem(storage_key, JSON.stringify(gtm_transactions));\n        }\n    }\n\n    @action.bound\n    eventHandler(get_settings) {\n        if (!this.is_gtm_applicable) return;\n\n        const login_event       = localStorage.getItem('GTM_login');\n        const is_new_account    = localStorage.getItem('GTM_new_account') === '1';\n\n        localStorage.removeItem('GTM_login');\n        localStorage.removeItem('GTM_new_account');\n\n        const affiliate_token = Cookies.getJSON('affiliate_tracking');\n        if (affiliate_token) {\n            this.pushDataLayer({ affiliate_token: affiliate_token.t });\n        }\n\n        // Get current time (moment, set by server), else fallback to client time\n        const moment_now = toMoment();\n        const data = {\n            visitorId     : this.visitorId,\n            account_type  : this.root_store.client.account_type,\n            currency      : this.root_store.client.currency,\n            country       : get_settings.country,\n            country_abbrev: get_settings.country_code,\n            email         : get_settings.email,\n            url           : window.location.href,\n            today         : moment_now.unix(),\n        };\n\n        if (is_new_account) {\n            data.event = 'new_account';\n            data.bom_date_joined = data.bom_today;\n        }\n\n        if (login_event) {\n            data.event = login_event;\n            BinarySocket.wait('mt5_login_list').then((response) => {\n                (response.mt5_login_list || []).forEach((obj) => {\n                    const acc_type = (getMT5AccountType(obj.group) || '')\n                        .replace('real_vanuatu', 'financial').replace('vanuatu_', '').replace(/svg/, 'gaming'); // i.e. financial_cent, demo_cent, demo_gaming, real_gaming\n                    if (acc_type) {\n                        data[`mt5_${acc_type}_id`] = obj.login;\n                    }\n                });\n                this.pushDataLayer(data);\n            });\n        } else {\n            this.pushDataLayer(data);\n        }\n    }\n\n    @action.bound\n    setLoginFlag(event_name) {\n        if (this.is_gtm_applicable) {\n            localStorage.setItem('GTM_login', event_name);\n        }\n    }\n}\n","import {\n    action,\n    observable }            from 'mobx';\nimport { isCryptocurrency } from '_common/base/currency_base';\nimport { WS }               from 'Services';\nimport BaseStore            from '../../base-store';\n\nclass Config {\n    container          = '';\n    is_session_timeout = true;\n    onIframeLoaded     = '';\n    timeout_session    = '';\n\n    @observable error_message = '';\n    @observable iframe_height = 0;\n    @observable iframe_url    = '';\n\n    constructor({ container }) {\n        this.container = container;\n    }\n}\n\nexport default class CashierStore extends BaseStore {\n    @observable is_loading = false;\n\n    @observable config = {\n        deposit     : new Config({ container: 'deposit' }),\n        verification: {\n            is_button_clicked: false,\n            is_email_sent    : false,\n            is_resend_clicked: false,\n            resend_timeout   : 60,\n            timeout_button   : '',\n        },\n        withdraw: new Config({ container: 'withdraw' }),\n    };\n\n    containers = [\n        this.config.deposit.container,\n        this.config.withdraw.container,\n    ];\n\n    constructor({ root_store }) {\n        super({ root_store });\n\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    async onMount(current_action, verification_code) {\n        if (this.containers.indexOf(current_action) === -1) {\n            throw new Error('Cashier Store onMount requires a valid container name.');\n        }\n        this.setErrorMessage('', current_action);\n        this.setContainerHeight(0, current_action);\n        this.setLoading(true);\n\n        if (!this.config[current_action].is_session_timeout) {\n            this.checkIframeLoaded(current_action);\n            return;\n        }\n\n        // if session has timed out reset everything\n        this.setIframeUrl('', current_action);\n\n        if (current_action === this.config.withdraw.container && !verification_code) {\n            // if no verification code, we should request again\n            return;\n        }\n\n        const response_cashier = await WS.cashier(current_action, verification_code);\n\n        // TODO: error handling UI & custom messages\n        if (response_cashier.error) {\n            this.setLoading(false);\n            this.setErrorMessage(response_cashier.error.message, current_action);\n            this.setSessionTimeout(true, current_action);\n            this.clearTimeoutCashierUrl(current_action);\n            if (verification_code) {\n                // clear verification code on error\n                this.clearVerification();\n            }\n        } else if (isCryptocurrency(this.root_store.client.currency)) {\n            this.setLoading(false);\n            this.setContainerHeight('700', current_action);\n            this.setIframeUrl(response_cashier.cashier, current_action);\n            // crypto cashier can only be accessed once and the session expires\n            // so no need to set timeouts to keep the session alive\n        } else {\n            await this.checkIframeLoaded(current_action);\n            this.setIframeUrl(response_cashier.cashier, current_action);\n            this.setSessionTimeout(false, current_action);\n            this.setTimeoutCashierUrl(current_action);\n        }\n    }\n\n    @action.bound\n    async onMountDeposit() {\n        await this.onMount(this.config.deposit.container);\n    }\n\n    @action.bound\n    async checkIframeLoaded(container) {\n        this.removeOnIframeLoaded(container);\n        this.config[container].onIframeLoaded = (function (e) {\n            if (/cashier|doughflow/.test(e.origin)) {\n                this.setLoading(false);\n                // set the height of the container after content loads so that the\n                // loading bar stays vertically centered until the end\n                this.setContainerHeight(+e.data || '1200', container);\n                // do not remove the listener\n                // on every iframe screen change we need to update the height to more/less to match the new content\n            }\n        }).bind(this);\n        window.addEventListener('message', this.config[container].onIframeLoaded, false);\n    }\n\n    removeOnIframeLoaded(container) {\n        if (this.config[container].onIframeLoaded) {\n            window.removeEventListener('message', this.config[container].onIframeLoaded, false);\n            this.config[container].onIframeLoaded = '';\n        }\n    }\n\n    @action.bound\n    setIframeUrl(url, container) {\n        this.config[container].iframe_url = url;\n        if (url) {\n            // after we set iframe url we can clear verification code\n            this.root_store.client.setVerificationCode('');\n        }\n    }\n\n    @action.bound\n    setContainerHeight(height, container) {\n        this.config[container].iframe_height = height;\n    }\n\n    @action.bound\n    setErrorMessage(message, container) {\n        this.config[container].error_message = message;\n    }\n\n    @action.bound\n    setLoading(is_loading) {\n        this.is_loading = is_loading;\n    }\n\n    @action.bound\n    setSessionTimeout(is_session_time_out, container) {\n        this.config[container].is_session_timeout = is_session_time_out;\n        if (is_session_time_out) {\n            this.removeOnIframeLoaded(container);\n        }\n    }\n\n    @action.bound\n    setVerificationButtonClicked(is_button_clicked) {\n        this.config.verification.is_button_clicked = is_button_clicked;\n    }\n\n    @action.bound\n    setVerificationEmailSent(is_email_sent) {\n        this.config.verification.is_email_sent = is_email_sent;\n    }\n\n    @action.bound\n    setVerificationResendClicked(is_resend_clicked) {\n        this.config.verification.is_resend_clicked = is_resend_clicked;\n    }\n\n    @action.bound\n    setVerificationResendTimeout(resend_timeout) {\n        this.config.verification.resend_timeout = resend_timeout;\n    }\n\n    clearTimeoutCashierUrl(container) {\n        if (this.config[container].timeout_session) {\n            clearTimeout(this.config[container].timeout_session);\n        }\n    }\n\n    // cashier session expires after one minute\n    // so we should resend the request for container (deposit|withdraw) url on next mount\n    @action.bound\n    setTimeoutCashierUrl(container) {\n        this.clearTimeoutCashierUrl(container);\n        this.config[container].timeout_session = setTimeout(() => {\n            this.setSessionTimeout(true, container);\n        }, 60000);\n    }\n\n    clearTimeoutVerification() {\n        if (this.config.verification.timeout_button) {\n            clearTimeout(this.config.verification.timeout_button);\n        }\n    }\n\n    // verification token expires after one hour\n    // so we should show the verification request button again after that\n    @action.bound\n    setTimeoutVerification() {\n        this.clearTimeoutVerification();\n        this.config.verification.timeout_button = setTimeout(() => {\n            this.clearVerification();\n        }, 3600000);\n    }\n\n    @action.bound\n    async onMountWithdraw(verification_code) {\n        await this.onMount(this.config.withdraw.container, verification_code);\n    }\n\n    @action.bound\n    async sendVerificationEmail() {\n        if (this.config.verification.is_button_clicked) {\n            return;\n        }\n\n        this.setErrorMessage('', this.config.withdraw.container);\n        this.setVerificationButtonClicked(true);\n        const response_verify_email = await WS.verifyEmail(this.root_store.client.email, 'payment_withdraw');\n\n        if (response_verify_email.error) {\n            this.clearVerification();\n            this.setErrorMessage(response_verify_email.error.message, this.config.withdraw.container);\n        } else {\n            this.setVerificationEmailSent(true);\n            this.setTimeoutVerification();\n        }\n    }\n\n    @action.bound\n    resendVerificationEmail() {\n        // don't allow clicking while ongoing timeout\n        if (this.config.verification.resend_timeout < 60) {\n            return;\n        }\n        this.setVerificationButtonClicked(false);\n        this.setCountDownResendVerification();\n        this.sendVerificationEmail();\n    }\n\n    setCountDownResendVerification() {\n        this.setVerificationResendTimeout(this.config.verification.resend_timeout - 1);\n        const resend_interval = setInterval(() => {\n            if (this.config.verification.resend_timeout === 1) {\n                this.setVerificationResendTimeout(60);\n                clearInterval(resend_interval);\n            } else {\n                this.setVerificationResendTimeout(this.config.verification.resend_timeout - 1);\n            }\n        }, 1000);\n    }\n\n    clearVerification() {\n        this.clearTimeoutVerification();\n        this.setVerificationButtonClicked(false);\n        this.setVerificationEmailSent(false);\n        this.setVerificationResendClicked(false);\n        this.setVerificationResendTimeout(60);\n        this.root_store.client.setVerificationCode('');\n    }\n\n    @action.bound\n    setActiveTab(container) {\n        // used to detect if old tabs with withdrawal tab open should be closed after verification token is opened in new tab\n        this.root_store.ui.setCashierActiveTab(container);\n    }\n\n    onUnmount() {\n        this.clearVerification();\n        [this.config.deposit.container, this.config.withdraw.container].forEach((container) => {\n            this.setIframeUrl('', container);\n            this.clearTimeoutCashierUrl(container);\n            this.setSessionTimeout(true, container);\n        });\n    }\n\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => resolve(this.onUnmount()));\n    }\n}\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    CALLE      : 'ABOVE',\n    PUTE       : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n    ASIANU     : 'ABOVE',\n    ASIAND     : 'BELOW',\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN    : '#39b19d',\n    RED      : 'red',\n    GRAY     : '#999cac',\n    DARK_GRAY: '#555975',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","import {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info, is_dark_mode) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {   color        : is_dark_mode ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY,\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import classNames           from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Icon         from 'Assets/icon.jsx';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n    marker_config,\n    status,\n}) => {\n    // TODO: Find a more elegant solution\n    if (!marker_config) return <div />;\n    return (\n        <div className={classNames('chart-marker-line__wrapper', `chart-marker-line--${line_style}`)}>\n            { label === marker_config.LINE_END.content_config.label &&\n                <Icon\n                    icon='IconEndTime'\n                    className={classNames('chart-marker-line__icon', {\n                        'chart-marker-line__icon--won' : status === 'won',\n                        'chart-marker-line__icon--lost': status === 'lost',\n                    })}\n                />\n            }\n            { label === marker_config.LINE_START.content_config.label &&\n                <Icon\n                    icon='IconStartTime'\n                    className={classNames(\n                        'chart-marker-line__icon',\n                        'chart-marker-line__icon--time',\n                    )}\n                />\n            }\n        </div>\n    );\n};\n\nMarkerLine.propTypes = {\n    label        : PropTypes.string,\n    line_style   : PropTypes.string,\n    marker_config: PropTypes.object,\n    status       : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes     from 'prop-types';\nimport React        from 'react';\n\nconst MarkerSpot = ({\n    className,\n    spot_count,\n}) => (\n    <div\n        className={classNames('chart-spot', className)}\n    >{spot_count}\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    className : PropTypes.string,\n    spot_count: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n};\n\nexport default observer(MarkerSpot);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\nimport { toMoment } from 'Utils/Date';\nimport Icon         from 'Assets/icon.jsx';\nimport MarkerSpot   from './marker-spot.jsx';\n\nclass MarkerSpotLabel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show_label: !this.props.has_hover_toggle,\n        };\n    }\n\n    handleHoverToggle = () => {\n        this.setState((state) =>  ({ show_label: !state.show_label }));\n    }\n\n    render() {\n        let marker_spot =\n            <MarkerSpot\n                className={this.props.spot_className}\n                spot_count={this.props.spot_count}\n            />;\n\n        if (this.props.has_hover_toggle) {\n            marker_spot =\n                <div className='marker-hover-container' onMouseEnter={this.handleHoverToggle} onMouseLeave={this.handleHoverToggle}>\n                    { marker_spot }\n                </div>;\n        }\n\n        return (\n            <div className={'chart-spot-label'}>\n                {this.state.show_label &&\n                    <div className='chart-spot-label__info-container'>\n                        <div className={`chart-spot-label__time-value-container chart-spot-label__time-value-container--${this.props.align_label}`}>\n                            <div className='chart-spot-label__time-container'>\n                                <Icon icon='IconClock' height='10' width='10' className='chart-spot-label__time-icon' />\n                                <p className='chart-spot-label__time'>{toMoment(+this.props.spot_epoch).format('HH:mm:ss')}</p>\n                            </div>\n                            <div\n                                className={classNames('chart-spot-label__value-container', {\n                                    'chart-spot-label__value-container--won' : this.props.status === 'won',\n                                    'chart-spot-label__value-container--lost': this.props.status === 'lost',\n                                })}\n                            >\n                                <p>{addComma(this.props.spot_value)}</p>\n                            </div>\n                        </div>\n                    </div>\n                }\n                { marker_spot }\n            </div>\n        );\n    }\n}\n\nMarkerSpotLabel.defaultProps = {\n    align_label: 'top',\n};\n\nMarkerSpotLabel.propTypes = {\n    align_label     : PropTypes.oneOf(['top', 'bottom']),\n    has_hover_toggle: PropTypes.bool,\n    spot_className  : PropTypes.string,\n    spot_count      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    spot_epoch      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    spot_value      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    status          : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpotLabel);\n","import { localize }    from 'App/i18n';\nimport MarkerLine      from 'Modules/SmartChart/Components/Markers/marker-line.jsx';\nimport MarkerSpotLabel from 'Modules/SmartChart/Components/Markers/marker-spot-label.jsx';\nimport MarkerSpot      from 'Modules/SmartChart/Components/Markers/marker-spot.jsx';\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END: {\n        type         : 'LINE_END',\n        marker_config: {\n            ContentComponent: MarkerLine,\n            className       : 'chart-marker-line',\n        },\n        content_config: { line_style: 'dash',  label: localize('End Time') },\n    },\n    LINE_PURCHASE: {\n        type         : 'LINE_PURCHASE',\n        marker_config: {\n            ContentComponent: MarkerLine,\n            className       : 'chart-marker-line',\n        },\n        content_config: { line_style: 'solid', label: localize('Purchase Time') },\n    },\n    LINE_START: {\n        type         : 'LINE_START',\n        marker_config: {\n            ContentComponent: MarkerLine,\n            className       : 'chart-marker-line',\n        },\n        content_config: { line_style: 'solid', label: localize('Start Time') },\n    },\n    SPOT_ENTRY: {\n        type         : 'SPOT_ENTRY',\n        marker_config: {\n            ContentComponent: MarkerSpot,\n        },\n        content_config: { className: 'chart-spot__entry' },\n    },\n    SPOT_SELL: {\n        type         : 'SPOT_SELL',\n        marker_config: {\n            ContentComponent: MarkerSpot,\n        },\n        content_config: { className: 'chart-spot__sell' },\n    },\n    SPOT_EXIT: {\n        type         : 'SPOT_EXIT',\n        marker_config: {\n            ContentComponent: MarkerSpotLabel,\n        },\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n    SPOT_MIDDLE: {\n        type         : 'SPOT_MIDDLE',\n        marker_config: {\n            ContentComponent: MarkerSpotLabel,\n        },\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n};\n","import extend                  from 'extend';\nimport { isDigitContract }     from 'Stores/Modules/Contract/Helpers/digits';\nimport {\n    isUserSold,\n    getEndTime }               from 'Stores/Modules/Contract/Helpers/logic';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n\nexport const getSpotCount = (contract_info, spot_count) =>\n    isDigitContract(contract_info.contract_type) ? spot_count + 1 : spot_count;\n\n// -------------------- Lines --------------------\nexport const createMarkerEndTime = (contract_info) => {\n    const end_time = getEndTime(contract_info);\n    if (!end_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        +end_time,\n        null,\n        {\n            status       : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n            marker_config: MARKER_TYPES_CONFIG,\n        },\n    );\n};\n\nexport const createMarkerPurchaseTime = (contract_info) => {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        +contract_info.purchase_time,\n    );\n};\n\nexport const createMarkerStartTime = (contract_info) => {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        +contract_info.date_start,\n        null,\n        {\n            marker_config: MARKER_TYPES_CONFIG,\n        }\n    );\n};\n\n// -------------------- Spots --------------------\nexport const createMarkerSpotEntry = (contract_info) => {\n    if (!contract_info.entry_tick_time) return false;\n\n    let marker_type      = MARKER_TYPES_CONFIG.SPOT_ENTRY.type;\n    let component_props  = {};\n\n    const entry_tick = contract_info.entry_tick_display_value;\n\n    const spot_has_label = isDigitContract(contract_info.contract_type);\n    if (spot_has_label) {\n        marker_type = MARKER_TYPES_CONFIG.SPOT_MIDDLE.type;\n\n        component_props = {\n            spot_value: `${entry_tick}`,\n            spot_epoch: `${contract_info.entry_tick_time}`,\n            spot_count: 1,\n        };\n    }\n\n    return createMarkerConfig(\n        marker_type,\n        contract_info.entry_tick_time,\n        entry_tick,\n        component_props,\n    );\n};\n\nexport const createMarkerSpotExit = (contract_info, tick, idx) => {\n    if (!contract_info.exit_tick_time) return false;\n    const is_user_sold = isUserSold(contract_info);\n\n    let spot_count, align_label;\n    if (tick) {\n        spot_count = getSpotCount(contract_info, idx);\n        align_label = tick.align_label;\n    }\n\n    const exit_tick = contract_info.exit_tick_display_value;\n\n    return createMarkerConfig(\n        !is_user_sold ? MARKER_TYPES_CONFIG.SPOT_EXIT.type : MARKER_TYPES_CONFIG.SPOT_SELL.type,\n        +contract_info.exit_tick_time,\n        +exit_tick,\n        !is_user_sold ?\n            {\n                spot_value: `${exit_tick}`,\n                spot_epoch: `${contract_info.exit_tick_time}`,\n                status    : `${+contract_info.profit > 0 ? 'won' : 'lost' }`,\n                align_label,\n                spot_count,\n            } : {},\n    );\n};\n\nexport const createMarkerSpotMiddle = (contract_info, tick, idx) => {\n    const spot_count = getSpotCount(contract_info, idx);\n    const spot       = tick.tick_display_value;\n\n    const marker_config = createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_MIDDLE.type,\n        +tick.epoch,\n        +spot,\n        {\n            spot_value : `${spot}`,\n            spot_epoch : `${tick.epoch}`,\n            align_label: tick.align_label,\n            spot_count,\n        },\n    );\n    marker_config.type = `${marker_config.type}_${idx}`;\n\n    return marker_config;\n};\n","import { unique }              from '_common/utility';\nimport {\n    createMarkerEndTime,\n    createMarkerPurchaseTime,\n    createMarkerSpotEntry,\n    createMarkerSpotExit,\n    createMarkerStartTime,\n    createMarkerSpotMiddle,\n    getSpotCount }             from './chart-marker-helpers';\nimport {\n    getChartType,\n    getEndTime }               from './logic';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info) => {\n    if (contract_info) {\n        const end_time = getEndTime(contract_info);\n        const chart_type = getChartType(contract_info.date_start, end_time);\n        if (contract_info.tick_count) {\n            addTickMarker(SmartChartStore, contract_info);\n        } else if (chart_type !== 'candle') {\n            addMarker(marker_spots, SmartChartStore, contract_info);\n        }\n        addMarker(marker_lines, SmartChartStore, contract_info);\n    }\n};\n\nconst marker_spots = {\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]: createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type] : createMarkerSpotExit,\n};\n\nconst marker_lines = {\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n};\n\nconst addMarker = async (marker_obj, SmartChartStore, contract_info) => {\n    Object.keys(marker_obj).forEach(createMarker);\n\n    function createMarker(marker_type) {\n        if (marker_type in SmartChartStore.markers) return;\n\n        const marker_config = marker_obj[marker_type](contract_info);\n        if (marker_config) {\n            SmartChartStore.createMarker(marker_config);\n        }\n    }\n};\n\nconst addLabelAlignment = (tick, idx, arr) => {\n    if (idx > 0 && arr.length) {\n        const prev_tick = arr[idx - 1];\n\n        if (+tick > +prev_tick.tick) tick.align_label = 'top';\n        if (+tick.tick < +prev_tick.tick) tick.align_label = 'bottom';\n        if (+tick.tick === +prev_tick.tick) tick.align_label = prev_tick.align_label;\n    }\n\n    return tick;\n};\n\nconst addTickMarker = async (SmartChartStore, contract_info) => {\n    const tick_stream = unique(contract_info.tick_stream, 'epoch').map(addLabelAlignment);\n\n    tick_stream.forEach((tick, idx) => {\n        const is_entry_spot  = idx === 0 && +tick.epoch !== contract_info.exit_tick_time;\n        const is_middle_spot = idx > 0 && +tick.epoch !== +contract_info.exit_tick_time;\n        const is_exit_spot   = +tick.epoch === +contract_info.exit_tick_time ||\n            getSpotCount(contract_info, idx) === contract_info.tick_count;\n\n        let marker_config;\n        if (is_entry_spot) {\n            marker_config = createMarkerSpotEntry(contract_info);\n        } else if (is_middle_spot) {\n            marker_config = createMarkerSpotMiddle(contract_info, tick, idx);\n        } else if (is_exit_spot) {\n            tick.align_label = 'top'; // force exit spot label to be 'top' to avoid overlapping\n            marker_config = createMarkerSpotExit(contract_info, tick, idx);\n        }\n\n        if (marker_config) {\n            if (marker_config.type in SmartChartStore.markers) return;\n\n            SmartChartStore.createMarker(marker_config);\n        }\n    });\n};\n","import React        from 'react';\nimport { localize } from 'App/i18n';\nimport Money        from '../../../../App/Components/Elements/money.jsx';\nimport Localize     from '../../../../App/Components/Elements/localize.jsx';\n\nexport const contractSold = (currency, sold_for) => ({\n    header : localize('Contract sold'),\n    message: (\n        <Localize\n            i18n_default_text='Contract was sold for <0 />.'\n            components={[ <Money key={sold_for} amount={sold_for} currency={currency} /> ]}\n        />\n    ),\n    type                 : 'contract_sold',\n    size                 : 'small',\n    should_hide_close_btn: true,\n    is_auto_close        : true,\n});\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }              from 'mobx';\nimport { localize }           from 'App/i18n';\nimport BinarySocket           from '_common/base/socket_base';\nimport { isEmptyObject }      from '_common/utility';\nimport { WS }                 from 'Services';\nimport { createChartBarrier } from './Helpers/chart-barriers';\nimport { createChartMarkers } from './Helpers/chart-markers';\nimport {\n    getDigitInfo,\n    isDigitContract }         from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndTime,\n    isEnded }                 from './Helpers/logic';\nimport { contractSold }       from '../Portfolio/Helpers/portfolio-notifcations';\nimport BaseStore              from '../../base-store';\n\nexport default class ContractReplayStore extends BaseStore {\n    // --- Observable properties ---\n    @observable digits_info = observable.object({});\n    @observable sell_info   = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // ---- Replay Contract Config ----\n    @observable contract_id;\n    @observable indicative_status;\n    @observable contract_info   = observable.object({});\n    @observable is_static_chart = false;\n\n    // ---- Normal properties ---\n    chart_type          = 'mountain';\n    is_ongoing_contract = false;\n\n    // Replay Contract Indicative Movement\n    prev_indicative = 0;\n    indicative      = 0;\n\n    // Forget old proposal_open_contract stream on account switch from ErrorComponent\n    should_forget_first = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    handleSubscribeProposalOpenContract = (contract_id, cb) => {\n        const proposal_open_contract_request = [contract_id, cb, false];\n\n        if (this.should_forget_first) {\n            WS.forgetAll('proposal_open_contract').then(() => {\n                this.should_forget_first = false;\n                WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n            });\n        } else {\n            WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n        }\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        if (contract_id) {\n            this.smart_chart = this.root_store.modules.smart_chart;\n            this.smart_chart.setContractMode(true);\n            this.contract_id = contract_id;\n            BinarySocket.wait('authorize').then(() => {\n                this.handleSubscribeProposalOpenContract(this.contract_id, this.populateConfig);\n            });\n            WS.activeSymbols({ skip_cache_update: true });\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.forgetProposalOpenContract(this.contract_id, this.populateConfig);\n        this.contract_id         = null;\n        this.digits_info         = {};\n        this.is_ongoing_contract = false;\n        this.is_static_chart     = false;\n        this.is_sell_requested   = false;\n        this.contract_info       = {};\n        this.indicative_status   = null;\n        this.prev_indicative     = 0;\n        this.indicative          = 0;\n        this.sell_info           = {};\n        this.smart_chart.setContractMode(false);\n        this.smart_chart.cleanupContractChartView();\n    }\n\n    @action.bound\n    populateConfig(response) {\n        if ('error' in response) {\n            this.has_error       = true;\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error           = true;\n            this.error_message       = localize('Sorry, you can\\'t view this contract because it doesn\\'t belong to this account.');\n            this.should_forget_first = true;\n            this.smart_chart.setContractMode(false);\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (+response.proposal_open_contract.contract_id !== this.contract_id) return;\n\n        this.contract_info = response.proposal_open_contract;\n\n        // Add indicative status for contract\n        const prev_indicative  = this.prev_indicative;\n        const new_indicative   = +this.contract_info.bid_price;\n        this.indicative = new_indicative;\n        if (new_indicative > prev_indicative) {\n            this.indicative_status = 'profit';\n        } else if (new_indicative < prev_indicative) {\n            this.indicative_status = 'loss';\n        } else {\n            this.indicative_status = null;\n        }\n        this.prev_indicative = this.indicative;\n\n        const end_time = getEndTime(this.contract_info);\n\n        this.smart_chart.updateMargin(\n            (end_time || this.contract_info.date_expiry) - this.contract_info.date_start);\n\n        if (!end_time) this.is_ongoing_contract = true;\n\n        // finish contracts if end_time exists\n        if (end_time) {\n            if (!this.is_ongoing_contract) {\n                this.is_static_chart = true;\n            } else {\n                this.is_static_chart = false;\n            }\n        }\n\n        createChartBarrier(this.smart_chart, this.contract_info, this.root_store.ui.is_dark_mode_on);\n        createChartMarkers(this.smart_chart, this.contract_info);\n        this.handleDigits(this.contract_info);\n\n        this.smart_chart.setIsChartLoading(false);\n    }\n\n    @action.bound\n    handleDigits(contract_info) {\n        if (this.is_digit_contract) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell(contract_id) {\n        const { bid_price } = this.contract_info;\n        if (contract_id && bid_price) {\n            this.is_sell_requested = true;\n            WS.sell(contract_id, bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            // If unable to sell due to error, give error via pop up if not in contract mode\n            this.is_sell_requested = false;\n            this.root_store.common.services_error = {\n                type: response.msg_type,\n                ...response.error,\n            };\n            this.root_store.ui.toggleServicesErrorModal(true);\n        } else if (!response.error && response.sell) {\n            this.is_sell_requested = false;\n            // update contract store sell info after sell\n            this.sell_info = {\n                sell_price    : response.sell.sold_for,\n                transaction_id: response.sell.transaction_id,\n            };\n            this.root_store.ui.addNotification(contractSold(this.root_store.client.currency, response.sell.sold_for));\n        }\n    }\n\n    forgetProposalOpenContract = (contract_id, cb) => {\n        WS.forget('proposal_open_contract', cb, { contract_id });\n    }\n\n    @action.bound\n    removeErrorMessage() {\n        delete this.error_message;\n    }\n\n    @action.bound\n    clearError() {\n        this.error_message = null;\n        this.has_error = false;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get contract_config() {\n        return getChartConfig(this.contract_info, this.is_digit_contract, false);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_digit_contract() {\n        return isDigitContract(this.contract_info.contract_type);\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }              from 'mobx';\nimport BinarySocket           from '_common/base/socket_base';\nimport { isEmptyObject }      from '_common/utility';\nimport { localize }           from 'App/i18n';\nimport { WS }                 from 'Services';\nimport { createChartBarrier } from './Helpers/chart-barriers';\nimport { createChartMarkers } from './Helpers/chart-markers';\nimport {\n    getDigitInfo,\n    isDigitContract }         from './Helpers/digits';\nimport {\n    getChartGranularity,\n    getChartType,\n    getDisplayStatus,\n    getEndTime,\n    isEnded }                 from './Helpers/logic';\nimport BaseStore              from '../../base-store';\n\nexport default class ContractTradeStore extends BaseStore {\n    // --- Observable properties ---\n    @observable contract_id;\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n\n    @observable has_error     = false;\n    @observable error_message = '';\n\n    // ---- Normal properties ---\n    is_from_positions   = false;\n    is_ongoing_contract = false;\n\n    // Forget old proposal_open_contract stream on account switch from ErrorComponent\n    should_forget_first = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    drawChart() {\n        const {\n            date_expiry,\n            date_start,\n            tick_count,\n        } = this.contract_info;\n\n        const end_time = getEndTime(this.contract_info);\n\n        if (!end_time) this.is_ongoing_contract = true;\n\n        // finish contracts if end_time exists\n        if (end_time) {\n            const is_one_tick_contract = (tick_count < 2);\n            if (!this.is_ongoing_contract && !is_one_tick_contract) {\n                // set to static chart to true for non one tick contract\n                // to avoid chart from reloading\n                this.smart_chart.setStaticChart(true);\n            } else {\n                this.smart_chart.setStaticChart(false);\n            }\n            this.smart_chart.setContractStart(date_start);\n            this.smart_chart.setContractEnd(end_time);\n\n            // Clear chart loading status once ChartListener returns ready for completed contract\n            if (!this.is_ongoing_contract) {\n                this.smart_chart.setIsChartLoading(false);\n            }\n\n        // setters for ongoing contracts, will only init once onMount after left_epoch is set\n        } else if (this.is_from_positions) {\n            this.smart_chart.setContractStart(date_start);\n        }\n\n        this.smart_chart.updateMargin((end_time || date_expiry) - date_start);\n\n        createChartBarrier(this.smart_chart, this.contract_info, this.root_store.ui.is_dark_mode_on);\n        createChartMarkers(this.smart_chart, this.contract_info);\n\n        if (this.smart_chart.is_chart_ready) {\n            this.smart_chart.setIsChartLoading(false);\n        }\n    }\n\n    handleSubscribeProposalOpenContract = (contract_id, cb) => {\n        const proposal_open_contract_request = [contract_id, cb, false];\n\n        if (this.should_forget_first) {\n            WS.forgetAll('proposal_open_contract').then(() => {\n                this.should_forget_first = false;\n                WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n            });\n        } else {\n            WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n        }\n    }\n\n    @action.bound\n    drawContractStartTime(date_start, longcode, contract_id) {\n        this.contract_info.longcode = longcode;\n        createChartMarkers(this.root_store.modules.smart_chart, { date_start });\n        this.onMountBuy(contract_id);\n    }\n\n    @action.bound\n    onMountBuy(contract_id) {\n        if (contract_id === this.contract_id) return;\n        this.contract_id = contract_id;\n        // clear proposal and purchase info once contract is mounted\n        this.root_store.modules.trade.proposal_info = {};\n        this.root_store.modules.trade.purchase_info = {};\n        BinarySocket.wait('authorize').then(() => {\n            this.handleSubscribeProposalOpenContract(this.contract_id, this.updateProposal);\n        });\n    }\n\n    @action.bound\n    onMount(contract_id, is_from_positions) {\n        if (contract_id === this.contract_id) return;\n        this.smart_chart       = this.root_store.modules.smart_chart;\n        const has_existing_id  = this.smart_chart.is_contract_mode && !!(this.contract_id);\n        if (has_existing_id) this.resetValues(this.smart_chart);\n        this.has_error         = false;\n        this.error_message     = '';\n        this.contract_id       = contract_id;\n        this.is_from_positions = is_from_positions;\n\n        // clear proposal and purchase info once contract is mounted\n        this.root_store.modules.trade.proposal_info = {};\n        this.root_store.modules.trade.purchase_info = {};\n\n        if (contract_id) {\n            if (this.is_from_positions) {\n                this.smart_chart.setIsChartLoading(true);\n                this.smart_chart.switchToContractMode(true, has_existing_id);\n            }\n            BinarySocket.wait('authorize').then(() => {\n                this.handleSubscribeProposalOpenContract(this.contract_id, this.updateProposal);\n            });\n        }\n    }\n\n    @action.bound\n    resetValues(SmartChartStore) {\n        this.forgetProposalOpenContract(this.contract_id, this.updateProposal);\n        this.contract_id         = null;\n        this.contract_info       = {};\n        this.digits_info         = {};\n        this.error_message       = '';\n        this.has_error           = false;\n        this.is_from_positions   = false;\n        this.is_ongoing_contract = false;\n        SmartChartStore.cleanupContractChartView();\n    }\n\n    @action.bound\n    onCloseContract() {\n        if (!this.smart_chart) this.smart_chart = this.root_store.modules.smart_chart;\n        this.resetValues(this.smart_chart);\n        this.smart_chart.applySavedTradeChartLayout();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.onCloseContract();\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error           = true;\n            this.error_message       = localize('Sorry, you can\\'t view this contract because it doesn\\'t belong to this account.');\n            this.should_forget_first = true;\n            this.contract_info       = {};\n            this.contract_id         = null;\n            this.smart_chart.setContractMode(false);\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (+response.proposal_open_contract.contract_id !== this.contract_id) return;\n\n        this.contract_info = response.proposal_open_contract;\n\n        // Set chart granularity and chart_type\n        this.handleChartType(this.contract_info.date_start, getEndTime(this.contract_info) || null);\n\n        // Set chart view to date_start\n        if (this.is_from_positions) {\n            if (this.smart_chart.granularity !== 0) {\n                this.smart_chart.setChartView(this.contract_info.date_start);\n            }\n        }\n\n        // Set contract symbol if trade_symbol and contract_symbol don't match\n        if (this.root_store.modules.trade.symbol !== this.contract_info.underlying) {\n            this.root_store.modules.trade.symbol = this.contract_info.underlying;\n        }\n\n        this.drawChart(this.contract_info);\n\n        this.handleDigits(this.contract_info);\n    }\n\n    @action.bound\n    handleDigits(contract_info) {\n        if (this.is_digit_contract) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, contract_info));\n        }\n    }\n\n    handleChartType(start, expiry) {\n        if (!this.smart_chart) {\n            this.smart_chart = this.root_store.modules.smart_chart;\n        }\n\n        const chart_type  = getChartType(start, expiry);\n        const granularity = getChartGranularity(start, expiry);\n\n        this.smart_chart.updateChartType(chart_type);\n        this.smart_chart.updateGranularity(granularity);\n    }\n\n    forgetProposalOpenContract = (contract_id, cb) => {\n        WS.forget('proposal_open_contract', cb, { contract_id });\n    }\n\n    @action.bound\n    removeErrorMessage() {\n        delete this.error_message;\n    }\n\n    @action.bound\n    clearError() {\n        this.error_message = null;\n        this.has_error = false;\n    }\n\n    @action.bound\n    setIsDigitContract(contract_type) {\n        this.contract_info.contract_type = contract_type;\n    }\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_digit_contract() {\n        return isDigitContract(this.contract_info.contract_type);\n    }\n}\n","import { flow }            from 'mobx';\nimport BinarySocket        from '_common/base/socket_base';\nimport { localize }        from 'App/i18n';\nimport { LocalStore }      from '_common/storage';\nimport { redirectToLogin } from '_common/base/login';\nimport { WS }              from 'Services';\n\nexport const showUnavailableLocationError = flow(function* (showError) {\n    const website_status = yield BinarySocket.wait('website_status');\n    const residence_list = yield WS.residenceList();\n\n    const clients_country_code = website_status.website_status.clients_country;\n    const clients_country_text =\n        (residence_list.residence_list.find(obj_country =>\n            obj_country.value === clients_country_code) || {}).text;\n\n    showError(\n        localize('If you have an account, log in to continue.'),\n        (clients_country_text ? localize('Sorry, this app is unavailable in {{clients_country}}.', { clients_country: clients_country_text }) : localize('Sorry, this app is unavailable in your current location.')),\n        localize('Log in'),\n        redirectToLogin,\n        false,\n    );\n});\n\nexport const isMarketClosed = (active_symbols = [], symbol) => {\n    if (!active_symbols.length) return false;\n    return (active_symbols.filter(x => x.symbol === symbol)[0]) ?\n        !active_symbols.filter(symbol_info => symbol_info.symbol === symbol)[0].exchange_is_open\n        :\n        false;\n};\n\nexport const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return getFavoriteOpenSymbol(active_symbols) || getFirstOpenSymbol(active_symbols);\n};\n\nconst getFavoriteOpenSymbol = (active_symbols) => {\n    const chart_favorites = LocalStore.get('cq-favorites');\n    if (!chart_favorites) return undefined;\n    const client_favorite_markets = JSON.parse(chart_favorites)['chartTitle&Comparison'];\n\n    const client_favorite_list = client_favorite_markets\n        .map(client_fav_symbol => active_symbols\n            .find(symbol_info => symbol_info.symbol === client_fav_symbol));\n    if (client_favorite_list) {\n        const client_first_open_symbol = client_favorite_list\n            .filter(symbol => symbol).find(isSymbolOpen);\n        if (client_first_open_symbol) return client_first_open_symbol.symbol;\n    }\n    return undefined;\n};\n\nconst getFirstOpenSymbol = (active_symbols) => {\n    const first_open_symbol = active_symbols\n        .filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))\n        .find(isSymbolOpen);\n    if (first_open_symbol) return first_open_symbol.symbol;\n    return active_symbols.find(symbol_info => symbol_info.submarket === 'major_pairs').symbol;\n};\n\nconst isSymbolOpen = (symbol) => (\n    symbol.exchange_is_open === 1\n);\n\nexport const getSymbolDisplayName = (active_symbols = [], symbol) => (\n    (active_symbols.find(symbol_info => symbol_info.symbol.toUpperCase() === symbol.toUpperCase()) || { display_name: '' })\n        .display_name\n);\n","import { getUnsupportedContracts } from 'Constants';\nimport { getSymbolDisplayName }    from '../../Trading/Helpers/active-symbols';\nimport { getMarketInformation }    from '../../../../Modules/Reports/Helpers/market-underlying';\n\nexport const formatPortfolioPosition = (portfolio_pos, active_symbols = []) => {\n    const purchase     = parseFloat(portfolio_pos.buy_price);\n    const payout       = parseFloat(portfolio_pos.payout);\n    const display_name = getSymbolDisplayName(\n        active_symbols,\n        getMarketInformation(portfolio_pos.shortcode).underlying\n    );\n\n    return {\n        contract_info : portfolio_pos,\n        details       : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        display_name,\n        id            : portfolio_pos.contract_id,\n        indicative    : 0,\n        payout,\n        purchase,\n        reference     : +portfolio_pos.transaction_id,\n        type          : portfolio_pos.contract_type,\n        is_unsupported: !!getUnsupportedContracts()[portfolio_pos.contract_type],\n    };\n};\n","import {\n    action,\n    computed,\n    observable,\n    reaction }                     from 'mobx';\nimport { createTransformer }       from 'mobx-utils';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format-response';\nimport { contractSold }            from './Helpers/portfolio-notifcations';\nimport {\n    getCurrentTick,\n    getDurationPeriod,\n    getDurationTime,\n    getDurationUnitText }          from './Helpers/details';\nimport {\n    getDisplayStatus,\n    getEndTime,\n    isEnded,\n    isUserSold,\n    isValidToSell }                from '../Contract/Helpers/logic';\nimport BaseStore                   from '../../base-store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable positions  = [];\n    @observable is_loading = false;\n    @observable error      = '';\n    getPositionById        = createTransformer((id) => this.positions.find((position) => +position.id === +id));\n\n    @action.bound\n    initializePortfolio = async () => {\n        this.is_loading = true;\n        await this.waitFor('authorize');\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.positions  = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.positions = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos, this.root_store.modules.trade.active_symbols))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    async transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            const res = await WS.portfolio();\n            const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n            if (!new_pos) return;\n            this.pushNewPosition(new_pos);\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            const i = this.getPositionIndexById(contract_id);\n\n            // Currently, if the contract has ended before the response is sent\n            // the Portfolio API returns an empty `contracts` array.\n            // This causes the contract to not be pushed to the `positions` property here.\n            // The statement below prevents accessing undefined values caused by the above explanation.\n            if (i === -1) return;\n\n            this.positions[i].is_loading = true;\n            WS.subscribeProposalOpenContract(contract_id, this.populateResultDetails, false);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.positions.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n        const profit_loss     = +proposal.profit;\n\n        // fix for missing barrier and entry_spot in proposal_open_contract API response, only re-assign if valid\n        if (proposal.barrier) portfolio_position.barrier = +proposal.barrier;\n        if (proposal.entry_spot) portfolio_position.entry_spot = +proposal.entry_spot;\n\n        // store contract proposal details that require modifiers\n        portfolio_position.indicative       = new_indicative;\n        portfolio_position.profit_loss      = profit_loss;\n        portfolio_position.is_valid_to_sell = isValidToSell(proposal);\n        // store contract proposal details that do not require modifiers\n        portfolio_position.contract_info    = proposal;\n\n        // for tick contracts\n        if (proposal.tick_count) {\n            const current_tick = (portfolio_position.current_tick > getCurrentTick(proposal)) ?\n                portfolio_position.current_tick : getCurrentTick(proposal);\n            portfolio_position.current_tick = current_tick;\n        }\n\n        if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'profit';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'loss';\n        } else {\n            portfolio_position.status = null;\n        }\n    }\n\n    @action.bound\n    onClickSell(contract_id) {\n        const i = this.getPositionIndexById(contract_id);\n        const { bid_price } = this.positions[i].contract_info;\n        this.positions[i].is_sell_requested = false;\n        if (contract_id && bid_price) {\n            WS.sell(contract_id, bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            // If unable to sell due to error, give error via pop up if not in contract mode\n            const i = this.getPositionIndexById(response.echo_req.sell);\n            this.positions[i].is_sell_requested = false;\n            this.root_store.common.services_error = {\n                type: response.msg_type,\n                ...response.error,\n            };\n            this.root_store.ui.toggleServicesErrorModal(true);\n        } else if (!response.error && response.sell) {\n            const i = this.getPositionIndexById(response.sell.contract_id);\n            this.positions[i].is_sell_requested = false;\n            // update contract store sell info after sell\n            this.root_store.modules.contract_trade.sell_info = {\n                sell_price    : response.sell.sold_for,\n                transaction_id: response.sell.transaction_id,\n            };\n            this.root_store.ui.addNotification(contractSold(this.root_store.client.currency, response.sell.sold_for));\n        }\n    }\n\n    @action.bound\n    populateResultDetails = (response) => {\n        const contract_response = response.proposal_open_contract;\n        const i = this.getPositionIndexById(contract_response.contract_id);\n\n        this.positions[i].contract_info    = contract_response;\n        this.positions[i].duration         = getDurationTime(contract_response);\n        this.positions[i].duration_unit    = getDurationUnitText(getDurationPeriod(contract_response));\n        this.positions[i].exit_spot        = contract_response.exit_tick || contract_response.current_spot; // workaround if no exit_tick in proposal_open_contract, use latest spot\n        this.positions[i].is_valid_to_sell = isValidToSell(contract_response);\n        this.positions[i].result           = getDisplayStatus(contract_response);\n        this.positions[i].profit_loss      = +contract_response.profit;\n        this.positions[i].sell_time        = getEndTime(contract_response) || contract_response.current_spot_time; // same as exit_spot, use latest spot time if no exit_tick_time\n        this.positions[i].sell_price       = contract_response.sell_price;\n        this.positions[i].status           = 'complete';\n\n        // fix for missing barrier and entry_spot\n        if (!this.positions[i].contract_info.barrier || !this.positions[i].contract_info.entry_spot) {\n            this.positions[i].contract_info.barrier    = this.positions[i].barrier;\n            this.positions[i].contract_info.entry_spot = this.positions[i].entry_spot;\n        }\n\n        // remove exit_spot for manually sold contracts\n        if (isUserSold(contract_response)) this.positions[i].exit_spot = '-';\n\n        this.positions[i].is_loading = false;\n\n        if (isEnded(contract_response)) {\n            // also forget for buy\n            [this.populateResultDetails, this.proposalOpenContractHandler].forEach(cb => {\n                WS.forget('proposal_open_contract', cb, { contract_id: contract_response.contract_id });\n            });\n        }\n    };\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.positions.unshift(formatPortfolioPosition(new_pos, this.root_store.modules.trade.active_symbols));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const { is_contract_mode } = this.root_store.modules.smart_chart;\n        const contract_idx         = this.getPositionIndexById(contract_id);\n\n        this.positions.splice(contract_idx, 1);\n\n        // check if contract is in view in contract_mode before removing contract details from chart\n        if (is_contract_mode && (+this.root_store.modules.contract_trade.contract_id === +contract_id)) {\n            this.root_store.modules.contract_trade.onCloseContract();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise(async (resolve) => {\n            await this.clearTable();\n            await WS.forgetAll('proposal_open_contract', 'transaction');\n            return resolve(this.initializePortfolio());\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null));\n        if (this.positions.length === 0) {\n            // TODO: Optimise the way is_logged_in changes are detected for \"logging in\" and \"already logged on\" states\n            if (this.root_store.client.is_logged_in) {\n                this.initializePortfolio();\n            } else {\n                reaction(() => this.root_store.client.is_logged_in, () => {\n                    if (this.root_store.client.is_logged_in) {\n                        this.initializePortfolio();\n                    }\n                });\n            }\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    getPositionIndexById(contract_id) {\n        return this.positions.findIndex(pos => +pos.id === +contract_id);\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.positions.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions_totals() {\n        let indicative = 0;\n        let purchase   = 0;\n\n        this.active_positions.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.positions.filter((portfolio_pos) => !portfolio_pos.result);\n    }\n\n    @computed\n    get all_positions() {\n        return this.positions;\n    }\n\n    @computed\n    get is_active_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.all_positions.length === 0;\n    }\n}\n","import {\n    epochToMoment,\n    toMoment,\n} from 'Utils/Date';\n\nconst getDateTo = (partial_fetch_time, date_to) => {\n    const today = toMoment().startOf('day').unix();\n    if (date_to && today > date_to) {\n        return date_to;\n    } else if (partial_fetch_time) {\n        return epochToMoment(today).add(1, 'd').subtract(1, 's').unix();\n    }\n    return epochToMoment(today).add(1, 'd').subtract(1, 's').unix();\n};\n\nconst getDateFrom = (should_load_partially, partial_fetch_time, date_from, date_to) => {\n    const today = toMoment().startOf('day').unix();\n    if (today > date_to) {\n        return date_from;\n    }\n    return should_load_partially && partial_fetch_time ? partial_fetch_time : date_from;\n};\n\nconst shouldSendDateFrom = (date_from, should_load_partially, partial_fetch_time, date_to) => {\n    const today = toMoment().startOf('day').unix();\n    if (today > date_to) {\n        return (!!date_from || should_load_partially);\n    }\n    return should_load_partially ? (partial_fetch_time || date_from) : !!date_from || false;\n};\n\nconst getDateBoundaries = (date_from, date_to, partial_fetch_time, should_load_partially = false) => (\n    {\n        // eslint-disable-next-line max-len\n        ...(shouldSendDateFrom(date_from, should_load_partially, partial_fetch_time, date_to)) && { date_from: getDateFrom(should_load_partially, partial_fetch_time, date_from, date_to) },\n        ...(date_to || should_load_partially) && { date_to: getDateTo(partial_fetch_time, date_to) },\n    }\n);\n\nexport default getDateBoundaries;\n","import { formatMoney }          from '_common/base/currency_base';\nimport { toMoment }             from 'Utils/Date';\nimport { getMarketInformation } from '../../../../Modules/Reports/Helpers/market-underlying';\nimport { getSymbolDisplayName } from '../../Trading/Helpers/active-symbols';\n\nexport const formatProfitTableTransactions = (transaction, currency, active_symbols = []) => {\n    const format_string           = 'DD MMM YYYY HH:mm:ss';\n    const purchase_time           = `${toMoment(+transaction.purchase_time).format(format_string)}`;\n    const sell_time               = `${toMoment(+transaction.sell_time).format(format_string)}`;\n    const payout                  = parseFloat(transaction.payout);\n    const sell_price              = parseFloat(transaction.sell_price);\n    const buy_price               = parseFloat(transaction.buy_price);\n    const profit_loss             = formatMoney(currency, Number(sell_price - buy_price), true);\n    const should_exclude_currency = true;\n    const display_name            = getSymbolDisplayName(\n        active_symbols,\n        getMarketInformation(transaction.shortcode).underlying\n    );\n\n    return {\n        ...transaction,\n        ...{\n            payout    : isNaN(payout) ? '-' : formatMoney(currency, payout, should_exclude_currency),\n            sell_price: isNaN(sell_price) ? '-' : formatMoney(currency, sell_price, should_exclude_currency),\n            buy_price : isNaN(buy_price) ? '-' : formatMoney(currency, buy_price, should_exclude_currency),\n            profit_loss,\n            sell_time,\n            purchase_time,\n            display_name,\n        },\n    };\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    computed,\n    observable,\n}                                        from 'mobx';\nimport { WS }                            from 'Services';\nimport { toMoment }                      from 'Utils/Date';\nimport getDateBoundaries                 from './Helpers/format-request';\nimport { formatProfitTableTransactions } from './Helpers/format-response';\nimport BaseStore                         from '../../base-store';\n\nconst batch_size = 50;\nconst delay_on_scroll_time = 150;\n\nexport default class ProfitTableStore extends BaseStore {\n    @observable data           = [];\n    @observable date_from      =  null;\n    @observable date_to        = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n    @observable error          = '';\n    @observable has_loaded_all = false;\n    @observable is_loading     = false;\n\n    // `client_loginid` is only used to detect if this is in sync with the client-store, don't rely on\n    // this for calculations. Use the client.currency instead.\n    @observable client_loginid = '';\n\n    @computed\n    get total_profit () {\n        return this.data.reduce((previous, current) => {\n            const buy_price  = Number(parseFloat(current.buy_price));\n            const sell_price = Number(parseFloat(current.sell_price));\n            const pl         = sell_price - buy_price;\n            return previous + pl;\n        }, 0);\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    shouldFetchNextBatch(should_load_partially) {\n        if (!should_load_partially && (this.has_loaded_all || this.is_loading)) return false;\n        const today = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        if (this.date_to < today) return (!should_load_partially && this.partial_fetch_time);\n        return true;\n    }\n\n    @action.bound\n    async fetchNextBatch(should_load_partially = false) {\n        if (!this.shouldFetchNextBatch(should_load_partially)) return;\n        this.is_loading = true;\n\n        const response = await WS.profitTable(\n            batch_size,\n            !should_load_partially ? this.data.length : undefined,\n            getDateBoundaries(this.date_from, this.date_to, this.partial_fetch_time, should_load_partially)\n        );\n\n        this.profitTableResponseHandler(response, should_load_partially);\n    }\n\n    @action.bound\n    profitTableResponseHandler(response, should_load_partially = false) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.profit_table.transactions\n            .map(transaction => formatProfitTableTransactions(\n                transaction,\n                this.root_store.client.currency,\n                this.root_store.modules.trade.active_symbols,\n            ));\n\n        if (should_load_partially) {\n            this.data = [...formatted_transactions, ...this.data];\n        } else {\n            this.data = [...this.data, ...formatted_transactions];\n        }\n        this.has_loaded_all      = !should_load_partially && formatted_transactions.length < batch_size;\n        this.is_loading          = false;\n        if (formatted_transactions.length > 0) {\n            this.partial_fetch_time = toMoment().unix();\n        }\n    }\n\n    fetchOnScroll = debounce((left) => {\n        if (left < 2000) {\n            this.fetchNextBatch();\n        }\n    }, delay_on_scroll_time);\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n        this.fetchOnScroll(left_to_scroll);\n    }\n\n    @action.bound\n    async onMount() {\n        this.assertHasValidCache(\n            this.client_loginid,\n            this.clearDateFilter,\n            this.clearTable,\n            WS.forgetAll.bind(null, 'proposal')\n        );\n        this.client_loginid = this.root_store.client.loginid;\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.waitFor('authorize');\n        this.fetchNextBatch(true);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n    }\n\n    @computed\n    get totals() {\n        let profit_loss = 0;\n\n        this.data.forEach((transaction) => {\n            if (transaction.profit_loss.indexOf('-') !== -1) {\n                profit_loss -= parseFloat(transaction.profit_loss.split('-')[1]);\n            } else {\n                profit_loss += parseFloat(transaction.profit_loss);\n            }\n        });\n        return {\n            profit_loss: profit_loss.toString(),\n        };\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = null;\n        this.date_to   = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        this.partial_fetch_time = 0;\n    }\n\n    @action.bound\n    handleDateChange(date_values) {\n        Object.keys(date_values).forEach(key => {\n            this[`date_${key}`] = date_values[key];\n        });\n        this.clearTable();\n        this.fetchNextBatch();\n    }\n}\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list\n    .filter(barrier => barrier !== undefined && barrier !== null)\n    .map(barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`);\n\nexport const barriersObjectToArray = (barriers, reference_array) => {\n    Object.keys(barriers).forEach(barrier => {\n        const js_object = toJS(barriers[barrier]);\n        if (!isEmptyObject(js_object)) {\n            reference_array.push(js_object);\n        }\n    });\n\n    return reference_array;\n};\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.SOLID;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low, isFromChart = false) {\n        if (!isFromChart) {\n            this.relative       = /^[+-]/.test(high);\n        }\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low, true);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @action.bound\n    updateBarrierColor(is_dark_mode) {\n        this.color = is_dark_mode ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY;\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport BinarySocket           from '_common/base/socket_base';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart-barrier-store';\nimport { ChartMarkerStore }   from './chart-marker-store';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base-store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable chart_type;\n    @observable granularity;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n    barriers_empty_array = [];\n    markers_empty_array = [];\n\n    @observable is_contract_mode = false;\n    @observable is_static_chart  = false;\n    @observable is_title_enabled = true;\n\n    @observable start_epoch;\n    @observable end_epoch;\n    @observable margin;\n\n    @observable scroll_to_left_epoch = null;\n\n    @observable chart_id                      = 'trade';\n    @observable is_chart_loading              = false;\n    @observable is_chart_ready                = false;\n    @observable should_import_layout          = false;\n    @observable should_export_layout          = false;\n    @observable should_clear_chart            = false;\n    @observable trade_chart_layout            = null;\n    @observable should_refresh_active_symbols = false;\n\n    trade_chart_symbol               = null;\n    trade_chart_granularity          = null;\n    trade_chart_type                 = null;\n\n    @action.bound\n    switchToContractMode(\n        is_from_positions = false,\n        is_from_other_position = false,\n        chart_type = 'mountain',\n        granularity = 0,\n    ) {\n\n        if (!is_from_other_position) this.saveAndClearTradeChartLayout(null);\n        this.setContractMode(true);\n        if (!is_from_positions) {\n            this.updateGranularity(granularity);\n            this.updateChartType(chart_type);\n        }\n    }\n\n    @action.bound\n    getChartStatus(status) {\n        this.is_chart_ready = status;\n    }\n\n    @action.bound\n    updateChartType(type) {\n        this.chart_type = type;\n        if (!this.is_contract_mode) this.trade_chart_type = type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (!this.is_contract_mode) this.trade_chart_granularity = granularity;\n    }\n\n    @action.bound\n    updateMargin(duration) {\n        this.margin = Math.floor(!this.granularity ?\n            (Math.max(300, (30 * duration) / (60 * 60) || 0))\n            :\n            3 * this.granularity);\n    }\n\n    @action.bound\n    updateEpochScrollToValue(epoch) {\n        this.scroll_to_left_epoch = epoch;\n    }\n\n    @action.bound\n    cleanupContractChartView() {\n        this.margin = null;\n        this.removeBarriers();\n        this.removeMarkers();\n        this.resetScrollToLeft();\n        this.setContractMode(false);\n        this.setContractStart(null);\n        this.setContractEnd(null);\n        this.setStaticChart(false);\n        this.root_store.ui.resetPurchaseStates();\n    }\n\n    @action.bound\n    resetScrollToLeft() {\n        this.scroll_to_left_epoch = null;\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onMount = () => {\n        // remove any barriers and markers before chart is ready\n        if (this.trade_chart_layout && !isEmptyObject(this.trade_chart_layout)) {\n            this.applySavedTradeChartLayout();\n        }\n    };\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.trade_chart_layout = null;\n        this.should_import_layout = false;\n        this.setIsChartLoading(false);\n        this.cleanupContractChartView();\n    };\n\n    // --------- Set Contract Scroll to Left ---------\n    @action.bound\n    setChartView(scroll_to_left_epoch) {\n        this.updateEpochScrollToValue(scroll_to_left_epoch);\n    }\n\n    // --------- All Contracts ---------\n    @action.bound\n    setContractStart(start) {\n        this.start_epoch = start;\n    }\n\n    @action.bound\n    setContractEnd(end) {\n        this.end_epoch = end;\n    }\n\n    @action.bound\n    setIsChartLoading(bool) {\n        this.is_chart_loading = bool;\n    }\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, barrier_config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, barrier_config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    updateBarrierColor(is_dark_mode) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierColor(is_dark_mode);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @action.bound\n    saveAndClearTradeChartLayout(chart_id) {\n        this.should_export_layout    = true;\n        this.should_import_layout    = false;\n        this.trade_chart_symbol      = this.root_store.modules.trade.symbol;\n        this.trade_chart_granularity = this.root_store.modules.smart_chart.granularity || 0;\n        this.trade_chart_type        = this.root_store.modules.smart_chart.chart_type || 'mountain';\n        this.chart_id                = chart_id;\n    }\n\n    @action.bound\n    applySavedTradeChartLayout() {\n        if (!this.trade_chart_layout) return;\n\n        this.setIsChartLoading(true);\n        this.should_export_layout = false;\n        this.should_import_layout = true;\n        this.should_clear_chart   = false;\n        this.chart_id             = 'trade';\n\n        this.trade_chart_layout.isDone = action(() => {\n            this.trade_chart_layout   = null;\n            this.should_import_layout = false;\n\n            // Reset back to symbol before loading contract if trade_symbol and contract_symbol don't match\n            if (this.trade_chart_symbol !== this.root_store.modules.trade.symbol) {\n                this.root_store.modules.trade.symbol = this.trade_chart_symbol;\n            }\n            WS.forgetAll('proposal').then(this.root_store.modules.trade.requestProposal());\n\n            // Clear chart loading status once ChartListener returns ready\n            if (this.is_chart_ready) {\n                this.setIsChartLoading(false);\n            }\n        });\n    }\n\n    @action.bound\n    exportLayout(layout) {\n        this.trade_chart_layout = layout;\n        this.should_clear_chart = true;\n    }\n\n    @action.bound\n    setStaticChart(bool) {\n        this.is_static_chart = bool;\n    }\n\n    @computed\n    get barriers_array() {\n        let has_differing = false;\n        const barriers_array = barriersObjectToArray(this.barriers, []);\n\n        if (this.barriers_empty_array.length !== barriers_array.length) {\n            has_differing = true;\n        } else {\n            this.barriers_empty_array.forEach(barrier => {\n                barriers_array.forEach(next_barrier => {\n                    Object.keys(barrier).forEach(key => {\n                        if (barrier[key] !== next_barrier[key]) {\n                            has_differing = true;\n                        }\n                    });\n                });\n            });\n        }\n\n        if (has_differing) {\n            this.barriers_empty_array = [];\n        } else {\n            this.barriers_empty_array.length = 0;\n        }\n\n        return barriersObjectToArray(this.barriers, this.barriers_empty_array);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        let has_differing   = false;\n        const markers_array = barriersObjectToArray(this.markers, []);\n\n        if (this.markers_empty_array.length !== markers_array.length) {\n            has_differing = true;\n        } else {\n            this.markers_empty_array.forEach(marker => {\n                markers_array.forEach(next_marker => {\n                    Object.keys(marker).forEach(key => {\n                        if (marker[key] !== next_marker[key]) {\n                            has_differing = true;\n                        }\n                    });\n                });\n            });\n        }\n\n        if (has_differing) {\n            this.markers_empty_array = [];\n        } else {\n            this.markers_empty_array.length = 0;\n        }\n\n        return barriersObjectToArray(this.markers, this.markers_empty_array);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() {\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation            : false, // ui.is_chart_asset_info_visible,\n            countdown                   : ui.is_chart_countdown_visible,\n            isHighestLowestMarkerEnabled: false, // !this.is_contract_mode, // TODO: Pending UI\n            lang                        : common.current_language,\n            position                    : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme                       : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsForgetStream = (stream_id) => (\n        WS.forgetStream(stream_id)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        if (request_object.active_symbols) {\n            if (this.should_refresh_active_symbols) {\n                return WS.sendRequest(request_object, { forced: true });\n            }\n            return BinarySocket.wait('active_symbols');\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import debounce                       from 'lodash.debounce';\nimport {\n    action,\n    computed,\n    observable,\n}                                     from 'mobx';\nimport { WS }                         from 'Services';\nimport { toMoment }                   from 'Utils/Date';\nimport { formatStatementTransaction } from './Helpers/format-response';\nimport getDateBoundaries              from '../Profit/Helpers/format-request';\nimport BaseStore                      from '../../base-store';\n\nconst batch_size = 100; // request response limit\nconst delay_on_scroll_time = 150; // fetch debounce delay on scroll\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = null;\n    @observable date_to        = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n    @observable error          = '';\n\n    // `client_loginid` is only used to detect if this is in sync with the client-store, don't rely on\n    // this for calculations. Use the client.currency instead.\n    @observable client_loginid = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data               = [];\n        this.has_loaded_all     = false;\n        this.is_loading         = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = null;\n        this.date_to   = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        this.partial_fetch_time = 0;\n    }\n\n    shouldFetchNextBatch(should_load_partially) {\n        if (!should_load_partially && (this.has_loaded_all || this.is_loading)) return false;\n        const today = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        if (this.date_to < today) return (!should_load_partially && this.partial_fetch_time);\n        return true;\n    }\n\n    @action.bound\n    async fetchNextBatch(should_load_partially = false) {\n        if (!this.shouldFetchNextBatch(should_load_partially)) return;\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            !should_load_partially ? this.data.length : undefined,\n            getDateBoundaries(this.date_from, this.date_to, this.partial_fetch_time, should_load_partially),\n        );\n        this.statementHandler(response, should_load_partially);\n    }\n\n    @action.bound\n    statementHandler(response, should_load_partially) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n                this.root_store.modules.trade.active_symbols,\n            ));\n\n        if (should_load_partially) {\n            this.data = [...formatted_transactions, ...this.data];\n        } else {\n            this.data = [...this.data, ...formatted_transactions];\n        }\n        this.has_loaded_all = !should_load_partially && formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n        if (formatted_transactions.length > 0) {\n            this.partial_fetch_time = toMoment().unix();\n        }\n    }\n\n    @action.bound\n    handleDateChange(date_values) {\n        Object.keys(date_values).forEach(key => {\n            if (date_values[key]) {\n                this[`date_${key}`] = date_values[key];\n            }\n        });\n        this.clearTable();\n        this.fetchNextBatch();\n    }\n\n    fetchOnScroll = debounce((left) => {\n        if (left < 2000) {\n            this.fetchNextBatch();\n        }\n    }, delay_on_scroll_time);\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll  = scrollHeight - (scrollTop + clientHeight);\n\n        this.fetchOnScroll(left_to_scroll);\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.assertHasValidCache(\n            this.client_loginid,\n            this.clearDateFilter,\n            this.clearTable,\n            WS.forgetAll.bind(null, 'proposal')\n        );\n        this.client_loginid = this.root_store.client.loginid;\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.waitFor('authorize');\n        this.fetchNextBatch(true);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n    }\n}\n","import { formatMoney }          from '_common/base/currency_base';\nimport { toTitleCase }          from '_common/string_util';\nimport { localize }             from 'App/i18n';\nimport { getMarketInformation } from 'Modules/Reports/Helpers/market-underlying';\nimport { toMoment }             from 'Utils/Date';\nimport { getSymbolDisplayName } from '../../Trading/Helpers/active-symbols';\n\nexport const formatStatementTransaction = (transaction, currency, active_symbols = []) => {\n    const format_string           = 'DD MMM YYYY HH:mm:ss';\n    const transaction_time        = toMoment(transaction.transaction_time).format(format_string);\n    const payout                  = parseFloat(transaction.payout);\n    const amount                  = parseFloat(transaction.amount);\n    const balance                 = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n    const shortcode               = ['buy', 'sell'].includes(transaction.action_type) ? transaction.shortcode : null;\n    const display_name            = shortcode ? getSymbolDisplayName(\n        active_symbols,\n        getMarketInformation(shortcode).underlying\n    ) : '';\n\n    return {\n        action     : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date       : transaction_time,\n        display_name,\n        refid      : transaction.transaction_id,\n        payout     : isNaN(payout) ? '-' : formatMoney(currency, payout, should_exclude_currency),\n        amount     : isNaN(amount) ? '-' : formatMoney(currency, amount, should_exclude_currency),\n        balance    : isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc       : transaction.longcode.replace(/\\n/g, '<br />'),\n        id         : transaction.contract_id,\n        app_id     : transaction.app_id,\n        shortcode,\n        action_type: transaction.action_type,\n    };\n};\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) =>\n    WS.subscribeProposalOpenContractOnBuy({ buy: proposal_id, price });\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","import { localize }           from 'App/i18n';\nimport { isSessionAvailable } from 'Stores/Modules/Trading/Helpers/start-date';\nimport {\n    isHourValid,\n    isMinuteValid,\n    isTimeValid,\n    toMoment }                from 'Utils/Date';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.barrier_count }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.barrier_count }],\n            ['custom' , { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    expiry_date: {\n        trigger: 'expiry_time',\n    },\n    start_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Start time cannot be in the past.') }],\n        ],\n    },\n    expiry_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Expiry time cannot be in the past.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract-type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeStartDate = async (store) => {\n    const {\n        contract_type,\n        duration_unit,\n        expiry_time,\n        start_date,\n        symbol } = store;\n    const server_time = store.root_store.common.server_time;\n    let {\n        start_time,\n        expiry_date,\n        expiry_type } = store;\n\n    start_time = start_time || server_time.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list     = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type           = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, expiry_date, expiry_type, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n    \n    const trading_times          = await ContractType.getTradingTimes(expiry_date, symbol);\n    const obj_market_open_times  = { market_open_times: trading_times.open };\n    const obj_market_close_times = { market_close_times: trading_times.close };\n\n    const market_close_times     = obj_market_close_times.market_close_times;\n    const obj_expiry_time        = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n        ...obj_expiry_type,\n        ...obj_market_open_times,\n        ...obj_market_close_times,\n    };\n};\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract-type';\nimport * as ContractType  from '../Actions/contract-type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start-date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n    const functions = getMethodsList(store, new_state);\n\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++){\n        extendOrReplace(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    StartDate.onChangeStartDate,\n    Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'market_close_times', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isVisible }                       from '_common/common_functions';\nimport {\n    getPropertyValue,\n    isDeepEqual }                          from '_common/utility';\nimport {\n    convertToUnix,\n    toMoment }                             from 'Utils/Date';\n\nconst map_error_field = {\n    barrier    : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n};\n\nexport const getProposalErrorField = (response) => {\n    const error_field = getPropertyValue(response, ['error', 'details', 'field']);\n    if (!error_field) {\n        return null;\n    }\n    const error_id = map_error_field[error_field] || error_field;\n    const el_error = document.getElementsByName(error_id)[0];\n    return (el_error && isVisible(el_error)) ? error_id : null;\n};\n\nexport const getProposalInfo = (store, response, obj_prev_contract_basis) => {\n    const proposal   = response.proposal || {};\n    const profit     = (proposal.payout - proposal.ask_price) || 0;\n    const returns    = profit * 100 / (proposal.ask_price || 1);\n    const stake      = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis = (basis_list.find(o => o.value !== store.basis));\n    const is_stake       = contract_basis.text === 'Stake';\n    const price          = is_stake ? stake : proposal[contract_basis.value];\n    let has_increased    = price > obj_prev_contract_basis.value;\n\n    if (!obj_prev_contract_basis.value || price === obj_prev_contract_basis.value) {\n        has_increased = null;\n    }\n\n    const obj_contract_basis = {\n        text : contract_basis.text || '',\n        value: price || '',\n    };\n\n    return {\n        id               : proposal.id || '',\n        has_error        : !!response.error,\n        has_error_details: !!getProposalErrorField(response),\n        has_increased,\n        message          : proposal.longcode || response.error.message,\n        obj_contract_basis,\n        payout           : proposal.payout,\n        profit           : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns          : `${returns.toFixed(2)}%`,\n        stake,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n","import debounce                       from 'lodash.debounce';\nimport {\n    action,\n    computed,\n    observable,\n    reaction,\n    runInAction }                     from 'mobx';\nimport BinarySocket                   from '_common/base/socket_base';\nimport { localize }                   from 'App/i18n';\nimport {\n    cloneObject,\n    isEmptyObject,\n    getPropertyValue }                from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                from '_common/base/currency_base';\nimport { WS }                         from 'Services';\nimport { isDigitTradeType }           from 'Modules/Trading/Helpers/digits';\nimport { processPurchase }            from './Actions/purchase';\nimport * as Symbol                    from './Actions/symbol';\nimport getValidationRules             from './Constants/validation-rules';\nimport {\n    pickDefaultSymbol,\n    showUnavailableLocationError,\n    isMarketClosed,\n}                                     from './Helpers/active-symbols';\nimport { setChartBarrier }            from './Helpers/chart';\nimport ContractType                   from './Helpers/contract-type';\nimport {\n    convertDurationLimit,\n    resetEndTimeOnVolatilityIndices } from './Helpers/duration';\nimport { processTradeParams }         from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalErrorField,\n    getProposalInfo }                 from './Helpers/proposal';\nimport { BARRIER_COLORS }             from '../SmartChart/Constants/barriers';\nimport BaseStore                      from '../../base-store';\n\nconst store_name = 'trade_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n    @observable is_equal                   = 0;\n\n    // Underlying\n    @observable symbol;\n    @observable is_market_closed = false;\n    @observable previous_symbol = '';\n    @observable active_symbols = [];\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount     = 10;\n    @observable basis      = '';\n    @observable basis_list = [];\n    @observable currency   = '';\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = null;\n    @observable sessions         = [];\n\n    @observable market_open_times = [];\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    @observable market_close_times = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info = {};\n    @observable purchase_info = {};\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n\n    initial_barriers;\n    is_initial_barrier_applied = false;\n\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('authorize', 'website_status');\n        action(async() => {\n            this.active_symbols = await WS.activeSymbols().active_symbols;\n        });\n    };\n\n    constructor({ root_store }) {\n        const local_storage_properties = [\n            'amount',\n            'barrier_1',\n            'barrier_2',\n            'basis',\n            'contract_start_type',\n            'contract_type',\n            'duration',\n            'duration_unit',\n            'expiry_date',\n            'expiry_type',\n            'is_equal',\n            'last_digit',\n            'start_date',\n            'start_time',\n            'symbol',\n        ];\n        super({\n            root_store,\n            local_storage_properties,\n            store_name,\n            validation_rules: getValidationRules(),\n        });\n\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n        reaction(\n            () => this.is_equal,\n            () => {\n                this.onAllowEqualsChange();\n            },\n        );\n        reaction(\n            () => this.symbol,\n            () => {\n                const date = resetEndTimeOnVolatilityIndices(this.symbol, this.expiry_type);\n                if (date) {\n                    this.expiry_date = date;\n                }\n            }\n        );\n        reaction(\n            () => this.duration_unit,\n            () => {\n                this.contract_expiry_type = this.duration_unit === 't' ? 'tick' : 'intraday';\n            }\n        );\n    }\n\n    @computed\n    get is_symbol_in_active_symbols() {\n        return this.active_symbols\n            .some(symbol_info => symbol_info.symbol === this.symbol && symbol_info.exchange_is_open === 1);\n    }\n\n    @action.bound\n    refresh = () => {\n        this.proposal_info     = {};\n        this.purchase_info     = {};\n        this.proposal_requests = {};\n        WS.forgetAll('proposal');\n    };\n\n    @action.bound\n    clearContract = () => {\n        if (this.root_store.modules.smart_chart.is_contract_mode) {\n            this.root_store.modules.contract_trade.onCloseContract();\n        }\n    };\n\n    @action.bound\n    setDefaultSymbol() {\n        if (!this.is_symbol_in_active_symbols) {\n            this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(this.active_symbols),\n            });\n        }\n    }\n\n    @action.bound\n    async setActiveSymbols() {\n        const { active_symbols, error } = this.smart_chart.should_refresh_active_symbols ?\n            // if SmartCharts has requested active_symbols, we wait for the response\n            await BinarySocket.wait('active_symbols')\n            : // else requests new active_symbols\n            await WS.activeSymbols({ forced: true });\n\n        if (error) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n            this.root_store.ui.setAppLoading(false);\n            return;\n        } else if (!active_symbols || !active_symbols.length) {\n            showUnavailableLocationError(this.root_store.common.showError);\n            this.root_store.ui.setAppLoading(false);\n            return;\n        }\n\n        this.processNewValuesAsync({ active_symbols });\n    }\n\n    @action.bound\n    async setContractTypes() {\n        if (this.symbol && this.is_symbol_in_active_symbols) {\n            await Symbol.onChangeSymbolAsync(this.symbol);\n            runInAction(() => {\n                this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                });\n            });\n        }\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        this.smart_chart      = this.root_store.modules.smart_chart;\n        this.currency         = this.root_store.client.currency;\n        this.initial_barriers = { barrier_1: this.barrier_1, barrier_2: this.barrier_2 };\n\n        await BinarySocket.wait('authorize');\n        await this.setActiveSymbols();\n        runInAction(async() => {\n            this.setDefaultSymbol();\n            await this.setContractTypes();\n            runInAction(() => {\n                this.processNewValuesAsync({\n                    is_market_closed: isMarketClosed(this.active_symbols, this.symbol),\n                });\n            });\n        });\n    }\n\n    @action.bound\n    onChangeMultiple(values) {\n        Object.keys(values).forEach((name) => {\n            if (!(name in this)) {\n                throw new Error(`Invalid Argument: ${name}`);\n            }\n        });\n\n        this.processNewValuesAsync({ ...values }, true);\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, value } = e.target;\n\n        // save trade_chart_symbol upon user change\n        if (name === 'symbol' && value) {\n            this.root_store.modules.smart_chart.trade_chart_symbol = value;\n        }\n\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (name === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.validateAllProperties();\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    setPreviousSymbol(symbol) {\n        if (this.previous_symbol !== symbol) this.previous_symbol = symbol;\n    }\n\n    @action.bound\n    async resetPreviousSymbol() {\n        this.setMarketStatus(isMarketClosed(this.active_symbols, this.previous_symbol));\n        await Symbol.onChangeSymbolAsync(this.previous_symbol);\n        runInAction(() => {\n            this.previous_symbol = ''; // reset the symbol to default\n        });\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        if (this.is_purchase_enabled) {\n            this.smart_chart.updateBarrierShade(is_over, contract_type);\n        }\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (!this.is_purchase_enabled) return;\n        if (proposal_id) {\n            this.is_purchase_enabled = false;\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    this.smart_chart.cleanupContractChartView();\n                    this.smart_chart.applySavedTradeChartLayout();\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    this.smart_chart.switchToContractMode();\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    const {\n                        contract_id,\n                        longcode,\n                        start_time,\n                    } = response.buy;\n                    // toggle smartcharts to contract mode\n                    if (contract_id) {\n                        // NOTE: changing chart granularity and chart_type has to be done in a different render cycle\n                        // so we have to set chart granularity to zero, and change the chart_type to 'mountain' first,\n                        // and then set the chart view to the start_time\n                        this.smart_chart.setChartView(start_time);\n                        // draw the start time line and show longcode then mount contract\n                        this.root_store.modules.contract_trade.drawContractStartTime(start_time, longcode, contract_id);\n                        this.root_store.ui.openPositionsDrawer();\n                    }\n                    this.root_store.gtm.pushPurchaseData(contract_data);\n                } else if (response.error) {\n                    // using javascript to disable purchase-buttons manually to compensate for mobx lag\n                    this.disablePurchaseButtons();\n                    this.root_store.common.services_error = {\n                        type: response.msg_type,\n                        ...response.error,\n                    };\n                    this.root_store.ui.toggleServicesErrorModal(true);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n                this.is_purchase_enabled = true;\n            }));\n        }\n    }\n\n    disablePurchaseButtons = () => {\n        const el_purchase_value    = document.getElementsByClassName('trade-container__price-info');\n        const el_purchase_buttons  = document.getElementsByClassName('btn-purchase');\n        [].forEach.bind(el_purchase_buttons, (el) => {\n            el.classList.add('btn-purchase--disabled');\n        })();\n        [].forEach.bind(el_purchase_value, (el) => {\n            el.classList.add('trade-container__price-info--fade');\n        })();\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency', 'smart_chart'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n        return new_state;\n    }\n\n    async processNewValuesAsync(\n        obj_new_values = {},\n        is_changed_by_user = false,\n        obj_old_values = {},\n        should_forget_first = true,\n    ) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (should_forget_first) WS.forgetAll('proposal');\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values))\n        ) {\n            const prev_currency = obj_old_values &&\n            !isEmptyObject(obj_old_values) &&\n            obj_old_values.currency ? obj_old_values.currency : this.currency;\n            if (isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(prev_currency)) {\n                obj_new_values.amount = is_changed_by_user && obj_new_values.amount ?\n                    obj_new_values.amount : getMinPayout(obj_new_values.currency);\n            }\n            this.currency = obj_new_values.currency;\n        }\n\n        let has_only_forward_starting_contracts;\n\n        if (Object.keys(obj_new_values).includes('symbol')) {\n            this.setPreviousSymbol(this.symbol);\n            await Symbol.onChangeSymbolAsync(obj_new_values.symbol);\n            this.setMarketStatus(isMarketClosed(this.active_symbols, obj_new_values.symbol));\n            has_only_forward_starting_contracts =\n                ContractType.getContractCategories().has_only_forward_starting_contracts;\n        }\n        // TODO: remove all traces of setHasOnlyForwardingContracts and has_only_forward_starting_contracts in app\n        //  once future contracts are implemented\n        this.root_store.ui.setHasOnlyForwardingContracts(has_only_forward_starting_contracts);\n        if (has_only_forward_starting_contracts) return;\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            // To prevent infinite loop when changing from advanced end_time to digit type contract\n            if (obj_new_values.contract_type && this.root_store.ui.is_advanced_duration) {\n                if (isDigitTradeType(obj_new_values.contract_type)) {\n                    this.barrier_1     = '';\n                    this.barrier_2     = '';\n                    this.expiry_type = 'duration';\n                    this.root_store.ui.is_advanced_duration = false;\n                }\n            }\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(!this.is_initial_barrier_applied ? this.initial_barriers : {}),\n            });\n            this.is_initial_barrier_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            if (!this.smart_chart.is_contract_mode) {\n                this.debouncedProposal();\n            }\n        }\n    }\n\n    @action.bound\n    clearPurchaseInfo() {\n        this.purchase_info = {};\n        this.proposal_requests = {};\n        this.proposal_info = {};\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n            this.root_store.modules.contract_trade.setIsDigitContract(Object.keys(this.proposal_requests)[0]);\n\n            Object.keys(this.proposal_requests).forEach((type) => {\n                WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n            });\n        }\n        this.root_store.ui.resetPurchaseStates();\n    }\n\n    @action.bound\n    setMarketStatus(status) {\n        this.is_market_closed = status;\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        // We do not want new proposal requests when in contract mode\n        if (this.root_store.modules.smart_chart.is_contract_mode) return;\n        const contract_type           = response.echo_req.contract_type;\n        const prev_proposal_info      = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            const color = this.root_store.ui.is_dark_mode_on ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY;\n            const barrier_config = { color };\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange, barrier_config);\n        }\n\n        if (response.error) {\n            const error_id = getProposalErrorField(response);\n            if (error_id) {\n                this.setValidationErrorMessages(error_id, [response.error.message]);\n            }\n        } else {\n            this.validateAllProperties();\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    onAllowEqualsChange() {\n        this.processNewValuesAsync({ contract_type: parseInt(this.is_equal) ? 'rise_fall_equal' : 'rise_fall' }, true);\n    }\n\n    @action.bound\n    updateSymbol(underlying) {\n        if (!underlying) return;\n        this.onChange({\n            target: {\n                name : 'symbol',\n                value: underlying,\n            },\n        });\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.processNewValuesAsync(\n                { currency: this.root_store.client.currency },\n                true,\n                { currency: this.currency },\n                false,\n            );\n            await this.clearContract();\n            await this.resetErrorServices();\n            await this.refresh();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    resetErrorServices() {\n        this.root_store.ui.toggleServicesErrorModal(false);\n    }\n\n    @action.bound\n    async onMount() {\n        this.onLoadingMount();\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    onLoadingMount() {\n        const first_timeout = setTimeout(() => {\n            const loading_message = localize('Your network connection might be slow.');\n            const secondary_message = localize('Please wait for the page to finish loading.');\n            this.root_store.ui.setSlowLoading(true, [loading_message, secondary_message]);\n        }, 8000);\n\n        const second_timeout = setTimeout(() => {\n            const loading_message = localize('This page is taking too long to load.');\n            const secondary_message = localize('Please wait for the page to finish loading or check your network connection.');\n            this.root_store.ui.setSlowLoading(true, [loading_message, secondary_message]);\n        }, 15000);\n\n        const loading_interval = setInterval(() => {\n            if (this.smart_chart) {\n                if (this.smart_chart.is_chart_ready && this.is_trade_component_mounted) {\n                    this.root_store.ui.setAppLoading(false);\n                    clearInterval(loading_interval);\n                    clearTimeout(first_timeout);\n                    clearTimeout(second_timeout);\n                }\n            }\n        }, 400);\n    }\n\n    @action.bound\n    restoreTradeChart() {\n        const smart_chart_store = this.root_store.modules.smart_chart;\n        if (smart_chart_store.trade_chart_symbol &&\n            (smart_chart_store.trade_chart_symbol !== this.symbol)) {\n            this.symbol = smart_chart_store.trade_chart_symbol;\n        }\n        if (smart_chart_store.trade_chart_granularity &&\n            (smart_chart_store.trade_chart_granularity !== smart_chart_store.granularity)) {\n            smart_chart_store.granularity = smart_chart_store.trade_chart_granularity;\n        } else {\n            smart_chart_store.granularity = 0;\n        }\n        if (smart_chart_store.trade_chart_type !== smart_chart_store.chart_type) {\n            smart_chart_store.chart_type = smart_chart_store.trade_chart_type;\n        } else {\n            smart_chart_store.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.proposal_info = {};\n        this.purchase_info = {};\n        WS.forgetAll('proposal');\n        this.resetErrorServices();\n        this.restoreTradeChart();\n        this.is_trade_component_mounted = false;\n        // clear url query string\n        window.history.pushState(null, null, window.location.pathname);\n    }\n}\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange, barrier_config) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n        barrier_config,\n    );\n};\n","import CashierStore        from './Cashier/cashier-store';\nimport ContractReplayStore from './Contract/contract-replay-store';\nimport ContractTradeStore  from './Contract/contract-trade-store';\nimport PortfolioStore      from './Portfolio/portfolio-store';\nimport ProfitTableStore    from './Profit/profit-store';\nimport SmartChartStore     from './SmartChart/smart-chart-store';\nimport StatementStore      from './Statement/statement-store';\nimport TradeStore          from './Trading/trade-store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.cashier         = new CashierStore({ root_store });\n        this.contract_replay = new ContractReplayStore({ root_store });\n        this.contract_trade  = new ContractTradeStore({ root_store });\n        this.portfolio       = new PortfolioStore({ root_store });\n        this.profit_table    = new ProfitTableStore({ root_store });\n        this.smart_chart     = new SmartChartStore({ root_store });\n        this.statement       = new StatementStore({ root_store });\n        this.trade           = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    autorun,\n    computed,\n    observable }             from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH }       from 'Constants/ui';\nimport { unique }            from '_common/utility';\nimport BaseStore             from './base-store';\nimport { sortNotifications } from '../App/Components/Elements/NotificationMessage';\n\nconst store_name = 'ui_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_positions_drawer_on     = false;\n    @observable is_reports_visible         = false;\n\n    @observable is_cashier_modal_on     = false;\n    @observable is_dark_mode_on         = false;\n    @observable is_settings_modal_on    = false;\n    @observable is_accounts_switcher_on = false;\n\n    @observable is_loading              = true;\n    @observable is_slow_loading         = false;\n    @observable slow_loading_status     = [];\n\n    @observable has_only_forward_starting_contracts = false;\n\n    // Purchase Controls\n    // @observable is_purchase_confirm_on    = false;\n    @observable is_services_error_visible             = false;\n    @observable is_unsupported_contract_modal_visible = false;\n    @observable is_account_signup_modal_visible       = false;\n    // @observable is_purchase_lock_on       = false;\n\n    // SmartCharts Controls\n    // TODO: enable asset information\n    // @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable pwa_prompt_event = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable notification_messages = [];\n    @observable push_notifications = [];\n\n    @observable is_advanced_duration   = false;\n    @observable advanced_duration_unit = 't';\n    @observable advanced_expiry_type   = 'duration';\n    @observable simple_duration_unit   = 't';\n    @observable duration_t             = 5;\n    @observable duration_s             = 15;\n    @observable duration_m             = 3;\n    @observable duration_h             = 1;\n    @observable duration_d             = 1;\n\n    // purchase button states\n    @observable purchase_states = [ false, false ];\n\n    // app states for modal\n    @observable is_app_disabled   = false;\n    @observable is_route_modal_on = false;\n\n    // position states\n    @observable show_positions_toggle = true;\n\n    @observable active_cashier_tab = 'deposit';\n\n    getDurationFromUnit = (unit) => this[`duration_${unit}`];\n\n    constructor() {\n        const local_storage_properties = [\n            'advanced_duration_unit',\n            'is_advanced_duration',\n            'advanced_expiry_type',\n            'simple_duration_unit',\n            'duration_t',\n            'duration_s',\n            'duration_m',\n            'duration_h',\n            'duration_d',\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_positions_drawer_on',\n            'is_reports_visible',\n            // 'is_purchase_confirm_on',\n            // 'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties, store_name });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => {\n            if (this.is_dark_mode_on) {\n                document.body.classList.remove('theme--light');\n                document.body.classList.add('theme--dark');\n            } else {\n                document.body.classList.remove('theme--dark');\n                document.body.classList.add('theme--light');\n            }\n        });\n    }\n\n    @action.bound\n    onChangeUiStore({ name, value }) {\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n        this[name] = value;\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_positions_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    setRouteModal() {\n        this.is_route_modal_on = true;\n    }\n\n    @action.bound\n    disableRouteModal() {\n        this.is_route_modal_on = false;\n    }\n\n    @action.bound\n    disableApp() {\n        this.is_app_disabled = true;\n    }\n\n    @action.bound\n    enableApp() {\n        this.is_app_disabled = false;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    setAppLoading(is_visible) {\n        this.is_loading = is_visible;\n    }\n\n    @action.bound\n    setPurchaseState(index) {\n        this.purchase_states[index] = true;\n\n        // TODO: Find better solution in the future for hack below\n        // Force the animation to start quicker by manually assigning class to compensate for mobx getter lag\n        // Because mobx has a delay before it can receive the updated prop used to assign the animation class\n        const el_purchase_buttons = document.getElementsByClassName('btn-purchase');\n        if (el_purchase_buttons[index]) {\n            el_purchase_buttons[index].classList.add('btn-purchase--swoosh');\n        }\n        // UI/UX wants button to remain green until transition is finished and only then disable buttons\n        setTimeout(() => {\n            [].forEach.bind(el_purchase_buttons, (el) => {\n                el.classList.add('btn-purchase--disabled');\n            })();\n        }, 250);\n    }\n\n    @action.bound\n    resetPurchaseStates() {\n        this.purchase_states = [ false, false ];\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    // TODO: enable asset information\n    // @action.bound\n    // toggleChartAssetInfo() {\n    //     this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    // }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    // @action.bound\n    // togglePurchaseLock() {\n    //     this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    // }\n\n    // @action.bound\n    // togglePurchaseConfirmation() {\n    //     this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    // }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n        return this.is_dark_mode_on;\n    }\n\n    @action.bound\n    showPositionsFooterToggle() {\n        this.show_positions_toggle = true;\n    }\n\n    @action.bound\n    hidePositionsFooterToggle() {\n        this.show_positions_toggle = false;\n    }\n\n    @action.bound\n    toggleCashierModal(active_tab) {\n        if (/^(deposit|withdraw)$/.test(active_tab)) {\n            this.setCashierActiveTab(active_tab);\n        }\n        this.is_cashier_modal_on = !this.is_cashier_modal_on;\n    }\n\n    @action.bound\n    setCashierActiveTab(tab = 'deposit') {\n        if (this.active_cashier_tab !== tab) this.active_cashier_tab = tab;\n    }\n\n    @action.bound\n    toggleSettingsModal() {\n        this.is_settings_modal_on = !this.is_settings_modal_on;\n    }\n\n    @action.bound\n    openPositionsDrawer() { // show and hide Positions Drawer\n        this.is_positions_drawer_on = true;\n    }\n\n    @action.bound\n    togglePositionsDrawer() { // toggle Positions Drawer\n        this.is_positions_drawer_on = !this.is_positions_drawer_on;\n    }\n\n    @action.bound\n    toggleReports(is_visible) {\n        this.is_reports_visible = is_visible;\n    }\n\n    @action.bound\n    toggleServicesErrorModal(is_visible) {\n        this.is_services_error_visible = is_visible;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    removePWAPromptEvent() {\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addNotification(notification) {\n        this.notification_messages = [...this.notification_messages, notification].sort(sortNotifications);\n    }\n\n    @action.bound\n    removeNotification(notification) {\n        const index = this.notification_messages.indexOf(notification);\n        if (index > -1) {\n            this.notification_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllNotifications() {\n        this.notification_messages = [];\n    }\n\n    @action.bound\n    setHasOnlyForwardingContracts(has_only_forward_starting_contracts) {\n        this.has_only_forward_starting_contracts = has_only_forward_starting_contracts;\n    }\n\n    @action.bound\n    setSlowLoading(status, message) {\n        this.is_slow_loading     = status;\n        this.slow_loading_status = message;\n    }\n\n    @action.bound\n    addNotificationBar(message) {\n        this.push_notifications.push(message);\n        this.push_notifications = unique(this.push_notifications, 'msg_type');\n    }\n\n    @action.bound\n    toggleUnsupportedContractModal(state_change = !this.is_unsupported_contract_modal_visible) {\n        this.is_unsupported_contract_modal_visible = state_change;\n    }\n\n    @action.bound\n    toggleAccountSignupModal(state_change = !this.is_unsupported_contract_modal_visible) {\n        this.is_account_signup_modal_visible = state_change;\n    }\n}\n","import ClientStore  from './client-store';\nimport CommonStore  from './common-store';\nimport GTMStore     from './gtm-store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui-store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n        this.gtm     = new GTMStore(this);\n    }\n}\n","import { configure }        from 'mobx';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network-monitor';\nimport OutdatedBrowser      from 'Services/outdated-browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\n\nconfigure({ enforceActions: 'observed' });\n\nconst initStore = () => {\n    Client.init();\n\n    const root_store = new RootStore();\n\n    setStorageEvents(root_store);\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    return root_store;\n};\n\nexport default initStore;\n","export const setStorageEvents = (root_store) => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden) {\n                    window.location.reload();\n                }\n                break;\n            case 'verification_code':\n                if (document.hidden && root_store.ui.is_cashier_modal_on && root_store.ui.active_cashier_tab === 'withdraw') {\n                    root_store.modules.cashier.clearVerification();\n                    root_store.ui.toggleCashierModal();\n                }\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport ReactDOM                    from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error-boundary.jsx';\nimport AppContents                 from './Containers/Layout/app-contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport Lazy                        from './Containers/Lazy';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport './i18n';\n// eslint-disable-next-line import/extensions\nimport initStore                   from './app.js';\n// eslint-disable-next-line import/no-unresolved\nimport 'Sass/app.scss';\n// Check if device is touch capable\nconst isTouchDevice = 'ontouchstart' in document.documentElement;\n\nconst App = ({ root_store }) => {\n    const l = window.location;\n    const base = l.pathname.split('/')[1];\n    return (\n        <Router basename={/^\\/br_/.test(l.pathname) ? `/${base}` : null}>\n            <MobxProvider store={root_store}>\n                {\n                    root_store.ui.is_mobile || (root_store.ui.is_tablet && isTouchDevice) ?\n                        <Lazy\n                            ctor={() => import(/* webpackChunkName: \"work-in-progress\" */'./Containers/Wip')}\n                            should_load={root_store.ui.is_mobile || (root_store.ui.is_tablet && isTouchDevice)}\n                            has_progress={true}\n                        /> :\n                        <React.Fragment>\n                            <Header />\n                            <ErrorBoundary>\n                                <AppContents>\n                                    <Routes />\n                                    <Lazy\n                                        ctor={() => import(/* webpackChunkName: \"push-notification\" */'./Containers/push-notification.jsx')}\n                                        should_load={!root_store.ui.is_loading}\n                                        has_progress={false}\n                                    />\n                                </AppContents>\n                            </ErrorBoundary>\n                            <Footer />\n                            <Lazy\n                                ctor={() => import(/* webpackChunkName: \"modals\", webpackPrefetch: true */'./Containers/Modals')}\n                                should_load={true}\n                                has_progress={false}\n                            />\n                        </React.Fragment>\n                }\n            </MobxProvider>\n        </Router>\n    );\n};\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n\nconst root_store = initStore();\n\nconst wrapper = document.getElementById('deriv_app');\n// eslint-disable-next-line no-unused-expressions\nwrapper ? ReactDOM.render(<App root_store={root_store} />, wrapper) : false;\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport ReactDOM             from 'react-dom';\nimport posed, { PoseGroup } from 'react-pose';\nimport Icon                 from 'Assets/icon.jsx';\n\nconst FadeIn = posed.span({\n    enter: {\n        opacity   : 1,\n        transition: {\n            duration: 150,\n        },\n    },\n    exit: {\n        opacity   : 0,\n        transition: {\n            duration: 150,\n        },\n    },\n});\n\nclass PopoverBubble extends React.PureComponent {\n    calculatePosition = () => {\n        const { alignment, target_rectangle, margin = 0 } = this.props;\n\n        switch (alignment) {\n            case 'top': return {\n                left     : (target_rectangle.width / 2) + target_rectangle.left,\n                bottom   : (window.innerHeight - target_rectangle.top) + margin,\n                transform: 'translateX(-50%)',\n            };\n            case 'bottom': return {\n                left     : (target_rectangle.width / 2) + target_rectangle.left,\n                top      : target_rectangle.bottom + margin,\n                transform: 'translateX(-50%)',\n            };\n            case 'left': return {\n                right    : (window.innerWidth - target_rectangle.left) + margin,\n                top      : (target_rectangle.height / 2) + target_rectangle.top,\n                transform: 'translateY(-50%)',\n            };\n            case 'right': return {\n                left     : target_rectangle.right + margin,\n                top      : (target_rectangle.height / 2) + target_rectangle.top,\n                transform: 'translateY(-50%)',\n            };\n            default: return {\n                left: target_rectangle.left,\n                top : target_rectangle.top,\n            };\n        }\n    };\n\n    render() {\n        const {\n            alignment,\n            className,\n            has_error,\n            icon,\n            is_open,\n            message,\n            target_rectangle,\n        } = this.props;\n\n        if (!target_rectangle) return null;\n\n        const popover_bubble = (\n            <PoseGroup>\n                { is_open &&\n                <FadeIn key='fade_in' initialPose='exit' style={{ position: 'fixed', zIndex: 999 }}>\n                    <span\n                        style={ target_rectangle ? this.calculatePosition() : {}}\n                        data-popover-pos={alignment}\n                        className={classNames(\n                            className,\n                            'popover__bubble',\n                            { 'popover__bubble--error': has_error },\n                        )}\n                    >\n                        { icon === 'info' &&\n                            <i className='popover__bubble__icon'>\n                                <Icon icon='IconInfoBlue' />\n                            </i>\n                        }\n\n                        <span className='popover__bubble__text'>\n                            { message }\n                        </span>\n                        <span className='popover__bubble__arrow' />\n                    </span>\n                </FadeIn>\n                }\n            </PoseGroup>\n        );\n\n        return ReactDOM.createPortal(\n            popover_bubble,\n            document.getElementById('deriv_app')\n        );\n    }\n}\n\nPopoverBubble.propTypes = {\n    alignment       : PropTypes.string,\n    children        : PropTypes.node,\n    className       : PropTypes.string,\n    has_error       : PropTypes.bool,\n    icon            : PropTypes.string,\n    is_open         : PropTypes.bool,\n    margin          : PropTypes.number,\n    message         : PropTypes.string.isRequired,\n    target_rectangle: PropTypes.object,\n};\n\nexport default PopoverBubble;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport Icon          from 'Assets/icon.jsx';\nimport PopoverBubble from './popover-bubble.jsx';\n\nclass Popover extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_open         : false,\n            target_rectangle: null,\n        };\n        this.target_reference = React.createRef();\n    }\n\n    componentDidMount() {\n        this.setState({\n            is_open         : this.props.has_error,\n            target_rectangle: this.target_reference.current.getBoundingClientRect(),\n        });\n    }\n\n    toggleOpen = () => {\n        this.setState({\n            is_open         : Boolean(this.props.message),\n            target_rectangle: this.target_reference.current.getBoundingClientRect(),\n        });\n    }\n\n    toggleClose = () => this.setState({ is_open: false });\n\n    render() {\n        const {\n            alignment,\n            children,\n            classNameBubble,\n            classNameTarget,\n            classNameTargetIcon,\n            disable_target_icon,\n            has_error,\n            icon,\n            margin,\n            message,\n        } = this.props;\n\n        const icon_class_name = classNames(classNameTargetIcon, icon);\n        return (\n            <div\n                className='popover'\n                onMouseEnter={this.toggleOpen}\n                onMouseLeave={this.toggleClose}\n            >\n                <div className={classNames(classNameTarget, 'popover__target')} ref={this.target_reference}>\n                    { !disable_target_icon &&\n                        <i className={message ? 'popover__target__icon' : 'popover__target__icon--disabled'}>\n                            {(icon === 'info')     && <Icon icon='IconInfoOutline' className={icon_class_name} /> }\n                            {(icon === 'question') && <Icon icon='IconQuestion'    className={icon_class_name} />}\n                            {(icon === 'dot')      && <Icon icon='IconRedDot'      className={icon_class_name} />}\n                        </i>\n                    }\n\n                    { children }\n                </div>\n\n                <PopoverBubble\n                    alignment={alignment}\n                    className={classNameBubble}\n                    has_error={has_error}\n                    icon={icon}\n                    is_open={this.state.is_open}\n                    target_rectangle={this.state.target_rectangle}\n                    margin={margin}\n                    message={message}\n                />\n            </div>\n        );\n    }\n}\n\nPopover.propTypes = {\n    alignment          : PropTypes.string,\n    children           : PropTypes.node,\n    classNameBubble    : PropTypes.string,\n    classNameTarget    : PropTypes.string,\n    classNameTargetIcon: PropTypes.string,\n    disable_target_icon: PropTypes.bool,\n    has_error          : PropTypes.bool,\n    icon               : PropTypes.string,\n    margin             : PropTypes.number,\n    message            : PropTypes.string,\n};\n\nexport default Popover;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    is_center,\n    onMouseEnter,\n    onMouseLeave,\n}) => {\n    const fieldset_header_class = classNames('trade-container__fieldset-header', is_center ? 'center-text' : '');\n    const fieldset_info_class   = classNames('trade-container__fieldset-info', !is_center && 'trade-container__fieldset-info--left');\n\n    return (\n        <fieldset className={className} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className={fieldset_header_class}>\n                    <span className={fieldset_info_class}>{header}</span>\n                </div>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n};\n\nexport default Fieldset;\n","import ServerTime   from '_common/base/server_time';\nimport { toMoment } from 'Utils/Date';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: toMoment(option.open), close: toMoment(option.close) };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : toMoment(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = toMoment(ServerTime.get()),\n    start_moment           = toMoment(ServerTime.get()),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, ServerTime.get(), should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')))\n);\n","const Client              = require('./client_base');\nconst getElementById      = require('../common_functions').getElementById;\nconst getLanguage         = require('../language').get;\nconst isMobile            = require('../os_detect').isMobile;\nconst isStorageSupported  = require('../storage').isStorageSupported;\nconst LocalStore          = require('../storage').LocalStore;\nconst urlForCurrentDomain = require('../url').urlForCurrentDomain;\nconst domain_app_ids      = require('../../config').domain_app_ids;\nconst getAppId            = require('../../config').getAppId;\n\nconst Login = (() => {\n    const redirectToLogin = () => {\n        if (!Client.isLoggedIn() && !isLoginPages() && isStorageSupported(sessionStorage)) {\n            sessionStorage.setItem('redirect_url', window.location.href);\n            window.location.href = loginUrl();\n        }\n    };\n\n    const loginUrl = () => {\n        const server_url         = localStorage.getItem('config.server_url');\n        const language           = getLanguage();\n        const signup_device      = LocalStore.get('signup_device') || (isMobile() ? 'mobile' : 'desktop');\n        const date_first_contact = LocalStore.get('date_first_contact');\n        const marketing_queries  = `&signup_device=${signup_device}${date_first_contact ? `&date_first_contact=${date_first_contact}` : ''}`;\n        const default_binary_url = `https://oauth.binary.com/oauth2/authorize?app_id=${getAppId()}&l=${language}${marketing_queries}`;\n\n        if (server_url && /qa/.test(server_url)) {\n            return `https://${server_url}/oauth2/authorize?app_id=${getAppId()}&l=${language}${marketing_queries}`;\n        }\n        if (getAppId === domain_app_ids['deriv.app']) {\n            return default_binary_url;\n        }\n\n        return urlForCurrentDomain(default_binary_url);\n    };\n\n    // TODO: update this to handle logging into /app/ url\n    const isLoginPages = () => /logged_inws|redirect/i.test(window.location.pathname);\n\n    const socialLoginUrl = brand => (`${loginUrl()}&social_signup=${brand}`);\n\n    const initOneAll = () => {\n        ['google', 'facebook'].forEach(provider => {\n            const el_button = getElementById(`#button_${provider}`);\n            el_button.removeEventListener('click');\n            el_button.addEventListener('click', (e) => {\n                e.preventDefault();\n                window.location.href = socialLoginUrl(provider);\n            });\n        });\n    };\n\n    return {\n        redirectToLogin,\n        isLoginPages,\n        initOneAll,\n    };\n})();\n\nmodule.exports = Login;\n","import { getLastTickFromTickStream } from './logic';\n\nexport const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const { tick_stream } = contract_info;\n    const { tick_display_value, epoch } = getLastTickFromTickStream(tick_stream);\n\n    if (!tick_display_value || !epoch) return {}; // filter out empty responses\n\n    const current = (epoch in digits_info) ? {} : // filter out duplicated responses\n        createDigitInfo(tick_display_value, epoch);\n\n    return {\n        ...current,\n    };\n};\n\nconst createDigitInfo = (spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            spot,\n        },\n    };\n};\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nclass Icon extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        /* When adding a new icon, arrange it by following the ascending file system arrangement */\n        this.icons = {\n            // Common\n            IconArrowBold         : React.lazy(() => import('./Common/icon-arrow-bold.jsx')),\n            IconArrow             : React.lazy(() => import('./Common/icon-arrow.jsx')),\n            IconBack              : React.lazy(() => import('./Common/icon-back.jsx')),\n            IconCalendarToday     : React.lazy(() => import('./Common/icon-calendar-today.jsx')),\n            IconCalendar          : React.lazy(() => import('./Common/icon-calendar.jsx')),\n            IconChevronDoubleLeft : React.lazy(() => import('./Common/icon-chevron-double-left.jsx')),\n            IconChevronDoubleRight: React.lazy(() => import('./Common/icon-chevron-double-right.jsx')),\n            IconChevronLeft       : React.lazy(() => import('./Common/icon-chevron-left.jsx')),\n            IconChevronRight      : React.lazy(() => import('./Common/icon-chevron-right.jsx')),\n            IconClear             : React.lazy(() => import('./Common/icon-clear.jsx')),\n            IconClock             : React.lazy(() => import('./Common/icon-clock.jsx')),\n            IconClose             : React.lazy(() => import('./Common/icon-close.jsx')),\n            IconCountryFlag       : React.lazy(() => import('./Common/icon-country-flag.jsx')),\n            IconDanger            : React.lazy(() => import('./Common/icon-danger.jsx')),\n            IconDeposit           : React.lazy(() => import('./Common/icon-deposit.jsx')), // TODO: update big when design is ready\n            IconDepositSmall      : React.lazy(() => import('./Common/icon-deposit-small.jsx')),\n            IconExclamation       : React.lazy(() => import('./Common/icon-exclamation.jsx')),\n            IconFlag              : React.lazy(() => import('./Common/icon-flag.jsx')),\n            IconInfoBlue          : React.lazy(() => import('./Common/icon-info-blue.jsx')),\n            IconInfoOutline       : React.lazy(() => import('./Common/icon-info-outline.jsx')),\n            IconInformation       : React.lazy(() => import('./Common/icon-information.jsx')),\n            IconMinimize          : React.lazy(() => import('./Common/icon-minimize.jsx')),\n            IconMinus             : React.lazy(() => import('./Common/icon-minus.jsx')),\n            IconPlus              : React.lazy(() => import('./Common/icon-plus.jsx')),\n            IconQuestion          : React.lazy(() => import('./Common/icon-question.jsx')),\n            IconRedDot            : React.lazy(() => import('./Common/icon-red-dot.jsx')),\n            IconSuccess           : React.lazy(() => import('./Common/icon-success.jsx')),\n            IconWarning           : React.lazy(() => import('./Common/icon-warning.jsx')),\n            IconWip               : React.lazy(() => import('./Common/icon-wip.jsx')),\n            IconWithdrawal        : React.lazy(() => import('./Common/icon-withdrawal.jsx')), // TODO: update big when design is ready\n            IconWithdrawalSmall   : React.lazy(() => import('./Common/icon-withdrawal-small.jsx')),\n\n            // Contract\n            ContractIconClose: React.lazy(() => import('./Contract/icon-close.jsx')),\n            IconEndTime      : React.lazy(() => import('./Contract/icon-end-time.jsx')),\n            ContractIconFlag : React.lazy(() => import('./Contract/icon-flag.jsx')),\n            IconStartTime    : React.lazy(() => import('./Contract/icon-start-time.jsx')),\n            IconTick         : React.lazy(() => import('./Contract/icon-tick.jsx')),\n\n            // Cashier\n            IconAuthenticateWithdrawals: React.lazy(() => import('./Cashier/icon-authenticate-withdrawals.jsx')),\n            IconEmailSent              : React.lazy(() => import('./Cashier/icon-email-sent.jsx')),\n\n            // Modal\n            ModalIconClose: React.lazy(() => import('./Modal/icon-close.jsx')),\n\n            // Footer\n            IconMaximize : React.lazy(() => import('./Footer/icon-maximize.jsx')),\n            IconPositions: React.lazy(() => import('./Footer/icon-positions.jsx')),\n            IconSettings : React.lazy(() => import('./Footer/icon-settings.jsx')),\n\n            // Header\n            IconAccountsCurrency: React.lazy(() => import('./Header/AccountsCurrency/icon_accounts_currency.jsx')),\n            IconLogout          : React.lazy(() => import('./Header/Drawer/icon-logout.jsx')),\n            IconBell            : React.lazy(() => import('./Header/NavBar/icon-bell.jsx')),\n            IconCashier         : React.lazy(() => import('./Header/NavBar/icon-cashier.jsx')),\n            IconDeriv           : React.lazy(() => import('./Header/NavBar/icon-deriv.jsx')),\n            IconHamburger       : React.lazy(() => import('./Header/NavBar/icon-hamburger.jsx')),\n            IconPortfolio       : React.lazy(() => import('./Header/NavBar/icon-portfolio.jsx')),\n            IconReports         : React.lazy(() => import('./Header/NavBar/icon-reports.jsx')),\n            IconTrade           : React.lazy(() => import('./Header/NavBar/icon-trade.jsx')),\n\n            // Reports\n            IconDemo                : React.lazy(() => import('./Reports/icon-demo.jsx')),\n            IconOpenPositions       : React.lazy(() => import('./Reports/icon-open-positions.jsx')),\n            IconProfitTable         : React.lazy(() => import('./Reports/icon-profit-table.jsx')),\n            IconStatement           : React.lazy(() => import('./Reports/icon-statement.jsx')),\n            IconCalendarForwardToday: React.lazy(() => import('./Reports/ic-calendar-forwardtoday.jsx')),\n\n            // Settings\n            IconCharts  : React.lazy(() => import('./Settings/icon-charts.jsx')),\n            IconLanguage: React.lazy(() => import('./Settings/icon-language.jsx')),\n            IconPurchase: React.lazy(() => import('./Settings/icon-purchase.jsx')),\n            IconTheme   : React.lazy(() => import('./Settings/icon-theme.jsx')),\n\n            // Statement\n            IconBuy   : React.lazy(() => import('./Statement/icon-buy.jsx')),\n            IconPayout: React.lazy(() => import('./Statement/icon-payout.jsx')),\n            IconSell  : React.lazy(() => import('./Statement/icon-sell.jsx')),\n            IconWallet: React.lazy(() => import('./Statement/icon-wallet.jsx')),\n\n            // Trading\n            IconBarrierDown   : React.lazy(() => import('./Trading/Barriers/icon-barrier-down.jsx')),\n            IconBarrierUp     : React.lazy(() => import('./Trading/Barriers/icon-barrier-up.jsx')),\n            IconTradeCategory : React.lazy(() => import('./Trading/Categories/icon-trade-categories.jsx')),\n            TradeCategoriesGIF: React.lazy(() => import('./Trading/Categories/trade-categories-gif.jsx')),\n            TradeCategories   : React.lazy(() => import('./Trading/Categories/trade-categories.jsx')),\n            IconTradeType     : React.lazy(() => import('./Trading/Types/icon-trade-types.jsx')),\n            IconLock          : React.lazy(() => import('./Trading/icon-lock.jsx')),\n            IconPriceMove     : React.lazy(() => import('./Trading/icon-price-move.jsx')),\n        };\n    }\n\n    render() {\n        const options = {\n            category     : this.props.category,\n            className    : this.props.className,\n            classNamePath: this.props.classNamePath,\n            classNameRect: this.props.classNameRect,\n            is_dark_theme: this.props.is_dark_theme,\n            is_disabled  : this.props.is_disabled,\n            onClick      : this.props.onClick,\n            onMouseEnter : this.props.onMouseEnter,\n            onMouseLeave : this.props.onMouseLeave,\n            type         : this.props.type,\n        };\n\n        const IconLazy = this.icons[this.props.icon];\n        if (!IconLazy) return <div />;\n\n        return (\n            <React.Suspense fallback={<div />}>\n                <IconLazy {...options} />\n            </React.Suspense>\n        );\n    }\n}\n\nIcon.propTypes = {\n    category     : PropTypes.string,\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n    classNameRect: PropTypes.string,\n    icon         : PropTypes.string,\n    is_dark_theme: PropTypes.bool,\n    is_disabled  : PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClick      : PropTypes.func,\n    type         : PropTypes.string,\n};\n\nexport default Icon;\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains as supported \"production domains\"\n    'deriv.app': 16929,\n};\n\nconst getCurrentProductionDomain = () => (\n    !/^staging\\./.test(window.location.hostname) &&\n    Object.keys(domain_app_ids).find(domain => (new RegExp(`.${domain}$`, 'i').test(window.location.hostname)))\n);\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id);\n        app_id = user_app_id;\n    } else if (/staging\\.deriv\\.app/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 16303; // it's being used in endpoint chrome extension - please do not remove\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 17044;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        const current_domain = getCurrentProductionDomain();\n        app_id = domain_app_ids[current_domain] || 16929;\n    }\n    return app_id;\n};\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    domain_app_ids,\n    getCurrentProductionDomain,\n    isProduction,\n    getAppId,\n    getSocketURL,\n};\n","import { localize } from 'App/i18n';\n\nexport const getMarketNamesMap = () => ({\n    FRXAUDCAD : localize('AUD/CAD'),\n    FRXAUDCHF : localize('AUD/CHF'),\n    FRXAUDJPY : localize('AUD/JPY'),\n    FRXAUDNZD : localize('AUD/NZD'),\n    FRXAUDPLN : localize('AUD/PLN'),\n    FRXAUDUSD : localize('AUD/USD'),\n    FRXBROUSD : localize('Oil/USD'),\n    FRXEURAUD : localize('EUR/AUD'),\n    FRXEURCAD : localize('EUR/CAD'),\n    FRXEURCHF : localize('EUR/CHF'),\n    FRXEURGBP : localize('EUR/GBP'),\n    FRXEURJPY : localize('EUR/JPY'),\n    FRXEURNZD : localize('EUR/NZD'),\n    FRXEURUSD : localize('EUR/USD'),\n    FRXGBPAUD : localize('GBP/AUD'),\n    FRXGBPCAD : localize('GBP/CAD'),\n    FRXGBPCHF : localize('GBP/CHF'),\n    FRXGBPJPY : localize('GBP/JPY'),\n    FRXGBPNOK : localize('GBP/NOK'),\n    FRXGBPUSD : localize('GBP/USD'),\n    FRXNZDJPY : localize('NZD/JPY'),\n    FRXNZDUSD : localize('NZD/USD'),\n    FRXUSDCAD : localize('USD/CAD'),\n    FRXUSDCHF : localize('USD/CHF'),\n    FRXUSDJPY : localize('USD/JPY'),\n    FRXUSDNOK : localize('USD/NOK'),\n    FRXUSDPLN : localize('USD/PLN'),\n    FRXUSDSEK : localize('USD/SEK'),\n    FRXXAGUSD : localize('Silver/USD'),\n    FRXXAUUSD : localize('Gold/USD'),\n    FRXXPDUSD : localize('Palladium/USD'),\n    FRXXPTUSD : localize('Platinum/USD'),\n    OTC_AEX   : localize('Dutch Index'),\n    OTC_AS51  : localize('Australian Index'),\n    OTC_DJI   : localize('Wall Street Index'),\n    OTC_FCHI  : localize('French Index'),\n    OTC_FTSE  : localize('UK Index'),\n    OTC_GDAXI : localize('German Index'),\n    OTC_HSI   : localize('Hong Kong Index'),\n    OTC_IBEX35: localize('Spanish Index'),\n    OTC_N225  : localize('Japanese Index'),\n    OTC_NDX   : localize('US Tech Index'),\n    OTC_SPC   : localize('US Index'),\n    OTC_SSMI  : localize('Swiss Index'),\n    OTC_SX5E  : localize('Euro 50 Index'),\n    R_10      : localize('Volatility 10 Index'),\n    R_25      : localize('Volatility 25 Index'),\n    R_50      : localize('Volatility 50 Index'),\n    R_75      : localize('Volatility 75 Index'),\n    R_100     : localize('Volatility 100 Index'),\n    RDBEAR    : localize('Bear Market Index'),\n    RDBULL    : localize('Bull Market Index'),\n    WLDAUD    : localize('AUD Index'),\n    WLDEUR    : localize('EUR Index'),\n    WLDGBP    : localize('GBP Index'),\n    WLDUSD    : localize('USD Index'),\n});\n\nexport const getUnsupportedContracts = () => ({\n    EXPIRYMISS: {\n        name    : localize('Ends Outside'),\n        position: 'top',\n    },\n    EXPIRYRANGE: {\n        name    : localize('Ends Between'),\n        position: 'bottom',\n    },\n    RANGE: {\n        name    : localize('Stays Between'),\n        position: 'top',\n    },\n    UPORDOWN: {\n        name    : localize('Goes Outside'),\n        position: 'bottom',\n    },\n    RESETCALL: {\n        name    : localize('Reset Call'),\n        position: 'top',\n    },\n    RESETPUT: {\n        name    : localize('Reset Put'),\n        position: 'bottom',\n    },\n    TICKHIGH: {\n        name    : localize('High Tick'),\n        position: 'top',\n    },\n    TICKLOW: {\n        name    : localize('Low Tick'),\n        position: 'bottom',\n    },\n    ASIANU: {\n        name    : localize('Asian Up'),\n        position: 'top',\n    },\n    ASIAND: {\n        name    : localize('Asian Down'),\n        position: 'bottom',\n    },\n    LBFLOATCALL: {\n        name    : localize('Close-Low'),\n        position: 'top',\n    },\n    LBFLOATPUT: {\n        name    : localize('High-Close'),\n        position: 'top',\n    },\n    LBHIGHLOW: {\n        name    : localize('High-Low'),\n        position: 'top',\n    },\n    CALLSPREAD: {\n        name    : localize('Call Spread'),\n        position: 'top',\n    },\n    PUTSPREAD: {\n        name    : localize('Put Spread'),\n        position: 'bottom',\n    },\n    RUNHIGH: {\n        name    : localize('Only Ups'),\n        position: 'top',\n    },\n    RUNLOW: {\n        name    : localize('Only Downs'),\n        position: 'bottom',\n    },\n});\n\nexport const getSupportedContracts = is_high_low => ({\n    CALL: {\n        name    : is_high_low ?  localize('Higher') : localize('Rise'),\n        position: 'top',\n    },\n    PUT: {\n        name    : is_high_low ? localize('Lower') : localize('Fall'),\n        position: 'bottom',\n    },\n    CALLE: {\n        name    : localize('Rise'),\n        position: 'top',\n    },\n    PUTE: {\n        name    : localize('Fall'),\n        position: 'bottom',\n    },\n    DIGITMATCH: {\n        name    : localize('Matches'),\n        position: 'top',\n    },\n    DIGITDIFF: {\n        name    : localize('Differs'),\n        position: 'bottom',\n    },\n    DIGITEVEN: {\n        name    : localize('Even'),\n        position: 'top',\n    },\n    DIGITODD: {\n        name    : localize('Odd'),\n        position: 'bottom',\n    },\n    DIGITOVER: {\n        name    : localize('Over'),\n        position: 'top',\n    },\n    DIGITUNDER: {\n        name    : localize('Under'),\n        position: 'bottom',\n    },\n    ONETOUCH: {\n        name    : localize('Touch'),\n        position: 'top',\n    },\n    NOTOUCH: {\n        name    : localize('No Touch'),\n        position: 'bottom',\n    },\n});\n\nexport const getContractConfig = is_high_low => ({\n    ...getSupportedContracts(is_high_low),\n    ...getUnsupportedContracts(),\n});\n\nexport const getContractTypeDisplay  = (\n    type,\n    is_high_low = false) => (\n    getContractConfig(is_high_low)[type] ? getContractConfig(is_high_low)[type.toUpperCase()].name : ''\n);\n\nexport const getContractTypePosition = (\n    type,\n    is_high_low = false) => (\n    getContractConfig(is_high_low)[type] ? getContractConfig(is_high_low)[type.toUpperCase()].position : 'top'\n);\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    className,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {has_sign && sign}\n            <span className={classNames(className, 'symbols', `symbols--${currency.toLowerCase()}`)} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className   : PropTypes.string,\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","import { localize } from 'App/i18n';\n\nexport const month_headers = {\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n};\n\nexport const week_headers = {\n    Monday   : localize('Monday'),\n    Tuesday  : localize('Tuesday'),\n    Wednesday: localize('Wednesday'),\n    Thursday : localize('Thursday'),\n    Friday   : localize('Friday'),\n    Saturday : localize('Saturday'),\n    Sunday   : localize('Sunday'),\n};\n\nexport const week_headers_abbr = {\n    Monday   : localize('M'),\n    Tuesday  : localize('T'),\n    Wednesday: localize('W'),\n    Thursday : localize('T'),\n    Friday   : localize('F'),\n    Saturday : localize('S'),\n    Sunday   : localize('S'),\n};\n\nexport const getDaysOfTheWeek = (day) => {\n    const days_of_the_week = {\n        'Mondays'   : 1,\n        'Tuesdays'  : 2,\n        'Wednesdays': 3,\n        'Thursdays' : 4,\n        'Fridays'   : 5,\n        'Saturdays' : 6,\n        'Sundays'   : 0,\n    };\n\n    return days_of_the_week[day];\n};\n","const extend = require('extend');\nrequire('./lib/polyfills/element.matches');\n\nconst template = (string, content) => {\n    let to_replace = content;\n    if (content && !Array.isArray(content)) {\n        to_replace = [content];\n    }\n    return string.replace(/\\[_(\\d+)]/g, (s, index) => to_replace[(+index) - 1]);\n};\n\nconst isEmptyObject = (obj) => {\n    let is_empty = true;\n    if (obj && obj instanceof Object) {\n        Object.keys(obj).forEach((key) => {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) is_empty = false;\n        });\n    }\n    return is_empty;\n};\n\nconst cloneObject = obj => (!isEmptyObject(obj) ? extend(true, Array.isArray(obj) ? [] : {}, obj) : obj);\n\nconst isDeepEqual = (a, b) => {\n    if (typeof a !== typeof b) {\n        return false;\n    } else if (Array.isArray(a)) {\n        return isEqualArray(a, b);\n    } else if (a && b && typeof a === 'object') {\n        return isEqualObject(a, b);\n    }\n    // else\n    return a === b;\n};\n\nconst isEqualArray = (arr1, arr2) => (\n    arr1 === arr2 ||\n    (\n        arr1.length === arr2.length &&\n        arr1.every((value, idx) => isDeepEqual(value, arr2[idx]))\n    )\n);\n\nconst isEqualObject = (obj1, obj2) => (\n    obj1 === obj2 ||\n    (\n        Object.keys(obj1).length === Object.keys(obj2).length &&\n        Object.keys(obj1).every(key => isDeepEqual(obj1[key], obj2[key]))\n    )\n);\n\n// Filters out duplicates in an array of objects by key\nconst unique = (array, key) => array.filter((e, idx) =>\n    array.findIndex((a, i) => a[key] ? a[key] === e[key] : i === idx) === idx);\n\nconst getPropertyValue = (obj, k) => {\n    let keys = k;\n    if (!Array.isArray(keys)) keys = [keys];\n    if (!isEmptyObject(obj) && keys[0] in obj && keys && keys.length > 1) {\n        return getPropertyValue(obj[keys[0]], keys.slice(1));\n    }\n    // else return clone of object to avoid overwriting data\n    return obj ? cloneObject(obj[keys[0]]) : undefined;\n};\n\n/**\n * Creates a DOM element and adds any attributes to it.\n *\n * @param {String} tag_name: the tag to create, e.g. 'div', 'a', etc\n * @param {Object} attributes: all the attributes to assign, e.g. { id: '...', class: '...', html: '...', ... }\n * @return the created DOM element\n */\nconst createElement = (tag_name, attributes = {}) => {\n    const el = document.createElement(tag_name);\n    Object.keys(attributes).forEach((attr) => {\n        const value = attributes[attr];\n        if (attr === 'text') {\n            el.textContent = value;\n        } else if (attr === 'html') {\n            el.html(value);\n        } else {\n            el.setAttribute(attr, value);\n        }\n    });\n    return el;\n};\n\nlet static_hash;\nconst getStaticHash = () => {\n    static_hash = static_hash || (document.querySelector('script[src*=\"main\"]').getAttribute('src') || '').split('.')[1];\n    return static_hash;\n};\n\nclass PromiseClass {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.reject  = reject;\n            this.resolve = resolve;\n        });\n    }\n}\n\nmodule.exports = {\n    template,\n    isEmptyObject,\n    cloneObject,\n    isDeepEqual,\n    unique,\n    getPropertyValue,\n    createElement,\n    getStaticHash,\n    PromiseClass,\n};\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className, classNameBlock }) => {\n    const block_class   = classNames(classNameBlock, 'block-ui');\n    const loading_class = classNames('block-ui__loading', className);\n    return (\n        <div className={block_class}>\n            <div className={loading_class}>\n                <div className='block-ui__loading-spinner'>\n                    <svg className='block-ui__loading-spinner-circular' viewBox='25 25 50 50'>\n                        <circle className='block-ui__loading-spinner-path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className     : PropTypes.string,\n    classNameBlock: PropTypes.string,\n};\n\nexport default UILoader;\n","import { toMoment } from 'Utils/Date';\n\nexport const getDecade = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(9, 'years').year()}`;\n\nexport const getCentury = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(99, 'years').year()}`;\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket-general';\nexport WS                  from './ws-methods';\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        let match_path;\n        try {\n            match_path = matchPath(path, route_info);\n        } catch (e) {\n            if (/undefined/.test(e.message)) {\n                return undefined;\n            }\n        }\n\n        if (match_path) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n"],"sourceRoot":""}