{"version":3,"sources":["webpack:///./App/Components/Elements/Modals/UnsupportedContractModal/unsupported-contract-modal.jsx","webpack:///./App/Components/Elements/Modals/MarketUnavailableModal/market-unavailable.jsx","webpack:///./App/Components/Elements/Modals/DenialOfServiceModal/denial-of-service.jsx","webpack:///./App/Components/Elements/Modals/ServicesErrorModal/constants.js","webpack:///./App/Components/Elements/Modals/ServicesErrorModal/services-error-modal.jsx","webpack:///./App/Containers/Modals/modals.jsx"],"names":["UnsupportedContractModal","enableApp","is_loading","is_visible","onConfirm","onClose","localize","disableApp","website_name","bool","PropTypes","func","connect","ui","onCancel","MarketUnavailableModal","DenialOfServiceModal","title","buy","sell","services_error","code","message","ServicesErrorModal","AccountSignupModal","React","lazy","ResetPasswordModal","client","modules","common","is_denial_of_service_modal_visible","is_client_allowed_to_visit","is_market_unavailable_visible","has_only_forward_starting_contracts","is_services_error_visible","is_unsupported_contract_modal_visible","proposal_info","trade","purchase_info","resetPreviousSymbol","clearPurchaseInfo","resetPurchase","requestProposal","switchAccount","setHasOnlyForwardingContracts","toggleServicesErrorModal","toggleUnsupportedContractModal","virtual_account_loginid","denialOfServiceOnConfirm","unsupportedContractOnClose","Fragment","window","open","urlFor","undefined","type"],"mappings":"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","file":"js/modals.014865d1f6559c4641e9.js","sourcesContent":["import { Dialog }       from 'deriv-components';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from 'App/i18n';\nimport Localize         from 'App/Components/Elements/localize.jsx';\nimport { connect }      from 'Stores/connect';\nimport { website_name } from '../../../../Constants/app-config';\n\nclass UnsupportedContractModal extends React.Component {\n    render() {\n        const { disableApp, enableApp, is_loading, is_visible, onConfirm, onClose } = this.props;\n        return (\n            <Dialog\n                title={localize('Whoops!')}\n                confirm_button_text={localize('Continue to Binary.com')}\n                cancel_button_text={localize('Back to trade page')}\n                onConfirm={onConfirm}\n                onCancel={onClose}\n                disableApp={disableApp}\n                enableApp={enableApp}\n                is_loading={is_loading}\n                is_closed_on_cancel\n                is_visible={is_visible}\n            >\n                <Localize\n                    i18n_default_text='This trade type is currently not supported on {{website_name}}. Please go to Binary.com for details.'\n                    values={{ website_name }}\n                />\n            </Dialog>\n        );\n    }\n}\n\nUnsupportedContractModal.propTypes = {\n    disableApp: PropTypes.func,\n    enableApp : PropTypes.func,\n    is_loading: PropTypes.bool,\n    is_visible: PropTypes.bool,\n    onClose   : PropTypes.func,\n    onConfirm : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        disableApp: ui.disableApp,\n        enableApp : ui.enableApp,\n        is_loading: ui.is_loading,\n    }),\n)(UnsupportedContractModal);\n","import { Dialog }       from 'deriv-components';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from 'App/i18n';\nimport Localize         from 'App/Components/Elements/localize.jsx';\nimport { connect }      from 'Stores/connect';\nimport { website_name } from 'App/Constants/app-config';\n\nconst MarketUnavailableModal = ({\n    disableApp,\n    enableApp,\n    is_loading,\n    is_visible,\n    onCancel,\n    onConfirm,\n}) => (\n    <Dialog\n        cancel_button_text={localize('Go to SmartTrader')}\n        confirm_button_text={localize('No, stay on {{website_name}}', { website_name })}\n        is_visible={is_visible}\n        onCancel={onCancel}\n        onConfirm={onConfirm}\n        disableApp={disableApp}\n        enableApp={enableApp}\n        is_loading={is_loading}\n        title={localize('Market is unavailable')}\n    >\n        <Localize i18n_default_text='Sorry, but this market is not supported yet on {{website_name}}. Do you want to trade this market on SmartTrader?' values={{ website_name }} />\n    </Dialog>\n);\n\nMarketUnavailableModal.propTypes = {\n    disableApp: PropTypes.func,\n    enableApp : PropTypes.func,\n    is_loading: PropTypes.bool,\n    is_visible: PropTypes.bool,\n    onCancel  : PropTypes.func,\n    onConfirm : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        disableApp: ui.disableApp,\n        enableApp : ui.enableApp,\n        is_loading: ui.is_loading,\n    }),\n)(MarketUnavailableModal);\n","import { Dialog }       from 'deriv-components';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from 'App/i18n';\nimport Localize         from 'App/Components/Elements/localize.jsx';\nimport { connect }      from 'Stores/connect';\nimport { website_name } from 'App/Constants/app-config';\n\nconst DenialOfServiceModal = ({\n    disableApp,\n    enableApp,\n    is_loading,\n    is_visible,\n    onCancel,\n    onConfirm,\n}) => (\n    <Dialog\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with Demo Account')}\n        cancel_button_text={localize('Back to main website')}\n        onConfirm={onConfirm}\n        onCancel={onCancel}\n        disableApp={disableApp}\n        enableApp={enableApp}\n        is_loading={is_loading}\n        is_closed_on_cancel={false}\n        is_visible={is_visible}\n    >\n        <Localize i18n_default_text='You cannot use your real money account with {{website_name}} at this time.' values={{ website_name }} />\n    </Dialog>\n);\n\nDenialOfServiceModal.propTypes = {\n    disableApp: PropTypes.func,\n    enableApp : PropTypes.func,\n    is_loading: PropTypes.bool,\n    is_visible: PropTypes.bool,\n    onCancel  : PropTypes.func,\n    onConfirm : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        disableApp: ui.disableApp,\n        enableApp : ui.enableApp,\n        is_loading: ui.is_loading,\n    }),\n)(DenialOfServiceModal);\n","import { localize }  from 'App/i18n';\n\nexport const title = {\n    buy : localize('Purchase Error'),\n    sell: localize('Sell Error'),\n};\n","import { Dialog }    from 'deriv-components';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from 'App/i18n';\nimport { connect }   from 'Stores/connect';\nimport { title }     from './constants';\n\nconst ServicesErrorModal = ({\n    disableApp,\n    enableApp,\n    is_loading,\n    is_visible,\n    onConfirm,\n    services_error,\n}) => {\n    const { code, message } = services_error;\n\n    if (!code || !message) return null;\n\n    return (\n        <Dialog\n            title={title[services_error.type]}\n            confirm_button_text={localize('OK')}\n            onConfirm={onConfirm}\n            // TODO: handle onCancel\n            // cancel_button_text={cancel_button_text}\n            // onCancel={onCancel}\n            disableApp={disableApp}\n            enableApp={enableApp}\n            is_loading={is_loading}\n            is_visible={is_visible}\n        >\n            {message}\n        </Dialog>\n    );\n};\n\nServicesErrorModal.propTypes = {\n    disableApp    : PropTypes.func,\n    enableApp     : PropTypes.func,\n    is_loading    : PropTypes.bool,\n    is_visible    : PropTypes.bool,\n    onConfirm     : PropTypes.func,\n    services_error: PropTypes.object,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        disableApp: ui.disableApp,\n        enableApp : ui.enableApp,\n        is_loading: ui.is_loading,\n    }),\n)(ServicesErrorModal);\n","import React                    from 'react';\nimport { connect }              from 'Stores/connect';\nimport { urlFor }               from '_common/url';\nimport UnsupportedContractModal from 'App/Components/Elements/Modals/UnsupportedContractModal';\nimport MarketUnavailableModal   from 'App/Components/Elements/Modals/MarketUnavailableModal';\nimport DenialOfServiceModal     from 'App/Components/Elements/Modals/DenialOfServiceModal';\nimport ServicesErrorModal       from 'App/Components/Elements/Modals/ServicesErrorModal';\nimport MT5ServerErrorDialog     from 'Modules/MT5/Containers/mt5-server-error-dialog.jsx';\nimport 'Sass/app/modules/modals.scss';\n\nconst AccountSignupModal       = React.lazy(() => import(/* webpackChunkName: \"AccountSignupModal\" */'../AccountSignupModal'));\nconst ResetPasswordModal       = React.lazy(() => import(/* webpackChunkName: \"ResetPasswordModal\" */'../ResetPasswordModal'));\n\nconst Modals = ({\n    clearPurchaseInfo,\n    is_denial_of_service_modal_visible,\n    is_unsupported_contract_modal_visible,\n    is_market_unavailable_visible,\n    is_services_error_visible,\n    toggleUnsupportedContractModal,\n    setHasOnlyForwardingContracts,\n    resetPreviousSymbol,\n    toggleServicesErrorModal,\n    resetPurchase,\n    services_error,\n    switchAccount,\n    virtual_account_loginid,\n}) => {\n    const denialOfServiceOnCancel = () => {\n        window.open(urlFor('trading', undefined, undefined, true));\n    };\n\n    const denialOfServiceOnConfirm = async () => {\n        await switchAccount(virtual_account_loginid);\n    };\n\n    const marketUnavailableOnConfirm = () => {\n        setHasOnlyForwardingContracts(false);\n        resetPreviousSymbol();\n    };\n\n    const marketUnavailableOnCancel = () => window.open(urlFor('trading', undefined, undefined, true)) &&\n        setHasOnlyForwardingContracts(false);\n\n    const servicesErrorModalOnConfirm = () => {\n        toggleServicesErrorModal(false);\n        if (services_error.type === 'buy') {\n            clearPurchaseInfo();\n            resetPurchase();\n        }\n    };\n\n    const unsupportedContractOnConfirm = () => {\n        window.open(urlFor('user/portfoliows', undefined, undefined, true), '_blank');\n        unsupportedContractOnClose();\n    };\n\n    const unsupportedContractOnClose = () => {\n        toggleUnsupportedContractModal(false);\n    };\n\n    return (\n        <React.Fragment>\n            <UnsupportedContractModal\n                onConfirm={unsupportedContractOnConfirm}\n                onClose={unsupportedContractOnClose}\n                is_visible={is_unsupported_contract_modal_visible}\n            />\n\n            <DenialOfServiceModal\n                onConfirm={denialOfServiceOnConfirm}\n                onCancel={denialOfServiceOnCancel}\n                is_visible={is_denial_of_service_modal_visible}\n            />\n\n            <MarketUnavailableModal\n                onConfirm={marketUnavailableOnConfirm}\n                onCancel={marketUnavailableOnCancel}\n                is_visible={is_market_unavailable_visible}\n            />\n            <ServicesErrorModal\n                onConfirm={servicesErrorModalOnConfirm}\n                services_error={services_error}\n                is_visible={is_services_error_visible}\n            />\n            <AccountSignupModal />\n            <MT5ServerErrorDialog />\n            <ResetPasswordModal />\n        </React.Fragment>\n    );\n};\n\nexport default connect(({ ui, client, modules, common }) => ({\n    is_denial_of_service_modal_visible   : !client.is_client_allowed_to_visit,\n    is_market_unavailable_visible        : ui.has_only_forward_starting_contracts,\n    is_services_error_visible            : ui.is_services_error_visible,\n    is_unsupported_contract_modal_visible: ui.is_unsupported_contract_modal_visible,\n    proposal_info                        : modules.trade.proposal_info,\n    purchase_info                        : modules.trade.purchase_info,\n    resetPreviousSymbol                  : modules.trade.resetPreviousSymbol,\n    clearPurchaseInfo                    : modules.trade.clearPurchaseInfo,\n    resetPurchase                        : modules.trade.requestProposal,\n    services_error                       : common.services_error,\n    switchAccount                        : client.switchAccount,\n    setHasOnlyForwardingContracts        : ui.setHasOnlyForwardingContracts,\n    toggleServicesErrorModal             : ui.toggleServicesErrorModal,\n    toggleUnsupportedContractModal       : ui.toggleUnsupportedContractModal,\n    virtual_account_loginid              : client.virtual_account_loginid,\n}))(Modals);\n"],"sourceRoot":""}