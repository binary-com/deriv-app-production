{"version":3,"sources":["webpack:///./Assets/Reports/icon-calendar.jsx","webpack:///./App/Components/Form/CompositeCalendar/list-item.jsx","webpack:///./App/Components/Form/CompositeCalendar/side-list.jsx","webpack:///./App/Components/Form/CompositeCalendar/composite-calendar.jsx","webpack:///./Modules/Reports/Containers/statement.jsx"],"names":["IconCalendar","_ref","className","props","_objectWithoutProperties","react_default","a","createElement","_extends","classNames","width","height","viewBox","fill","fillRule","d","propTypes","PropTypes","string","classNamePath","onClick","func","ListItem","is_active","children","composite-calendar__prepopulated-list--is-active","oneOfType","node","array","bool","SideList","items","from","to","map","item","duration","rest_of_props","side_list_objectWithoutProperties","flag","toMoment","endOf","unix","Math","ceil","isActive","list_item","side_list_extends","key","CompositeCalendar","_this","_classCallCheck","this","_getPrototypeOf","call","state","show_to","show_from","list","localize","selectDateRange","setWrapperRef","bind","_assertThisInitialized","handleClickOutside","React","PureComponent","hideCalendar","applyBatch","startOf","subtract","add","setState","e","_defineProperty","concat","wrapperRef","event","contains","target","stopPropagation","preventDefault","document","addEventListener","removeEventListener","date","updateState","epochToMoment","value","apply","values","onChange","_this$state","_this$props","Fragment","id","input_field","is_read_only","placeholder","icon","showCalendar","from_date_label","to_date_label","ref","side_list","Lazy","ctor","__webpack_require__","then","should_load","has_progress","setToDate","isPeriodDisabled","isPeriodDisabledTo","setFromDate","isPeriodDisabledFrom","daysFromTodayTo","format","number","Statement","getRowAction","row_obj","action","includes","action_type","getSupportedContracts","Shortcode","extractInfoFromShortcode","shortcode","category","toUpperCase","getContractPath","component","react__WEBPACK_IMPORTED_MODULE_2___default","App_Components_Elements_localize_jsx__WEBPACK_IMPORTED_MODULE_7__","i18n_default_text","website_name","components","rel","href","urlFor","undefined","message","desc","Component","onMount","onUnmount","_this2","component_icon","currency","data","date_from","date_to","is_empty","is_loading","error","handleScroll","handleDateChange","has_selected_date","columns","getStatementTableColumnsTemplate","filter_component","App_Components_Form_CompositeCalendar_composite_calendar_jsx__WEBPACK_IMPORTED_MODULE_8__","_Components_reports_meta_jsx__WEBPACK_IMPORTED_MODULE_15__","i18n_heading","i18n_message","length","_Components_placeholder_component_jsx__WEBPACK_IMPORTED_MODULE_14__","empty_message_component","EmptyTradeHistoryMessage","localized_message","localized_period_message","App_Components_Elements_DataTable__WEBPACK_IMPORTED_MODULE_6__","data_source","onScroll","row","MobxPropTypes","arrayOrObservableArray","history","object","connect","modules","client","statement","withRouter"],"mappings":"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","file":"js/statement.1b65f1fd9093f90cdbec.js","sourcesContent":["import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCalendar = ({ className, ...props }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' {...props}>\n        <g fill='#7F8397' fillRule='nonzero'>\n            <path className='color1-fill' d='M4 3H2v11h12V3h-2v.5a.5.5 0 1 1-1 0V3H5v.5a.5.5 0 0 1-1 0V3zm1-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 5h12v1H2V5z' />\n            <path className='color1-fill' d='M10.134 9H4.5a.5.5 0 0 1 0-1h5.634a1 1 0 1 1 0 1zM4 11h7.5a.5.5 0 1 1 0 1H4v-1z' />\n        </g>\n    </svg>\n);\n\nIconCalendar.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n    onClick      : PropTypes.func,\n};\n\nexport default IconCalendar;\n","import PropTypes  from 'prop-types';\nimport classNames from 'classnames';\nimport React      from 'react';\n\nconst ListItem = ({ onClick, is_active, children }) => (\n    <li\n        className={classNames({\n            'composite-calendar__prepopulated-list--is-active': is_active,\n        })}\n        onClick={onClick}\n    >\n        {children}\n    </li>\n);\n\nListItem.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.node,\n        PropTypes.array,\n    ]),\n    is_active: PropTypes.bool,\n    onClick  : PropTypes.func,\n};\n\nexport default ListItem;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { toMoment }      from 'Utils/Date';\nimport ListItem          from './list-item.jsx';\n\nconst isActive = (from, to, flag) => {\n    if (flag === 0) {\n        return toMoment().endOf('day').unix() === to && from === null;\n    }\n    return Math.ceil(to / 86400) - Math.ceil(from / 86400) === flag;\n\n};\n\nconst SideList = ({ items, from, to }) => (\n    <ul className='composite-calendar__prepopulated-list'>\n        {\n            items.map(item => {\n                const { duration, ...rest_of_props } = item;\n                const is_active = isActive(from, to, duration);\n                return (\n                    <ListItem key={duration} is_active={is_active} {...rest_of_props } />\n                );\n            })\n        }\n    </ul>\n);\n\nSideList.propTypes = {\n    items: PropTypes.array,\n};\n\nexport default SideList;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport InputField   from 'App/Components/Form/InputField/input-field.jsx';\nimport Lazy         from 'App/Containers/Lazy';\nimport IconCalendar from 'Assets/Reports/icon-calendar.jsx';\nimport {\n    daysFromTodayTo,\n    epochToMoment,\n    toMoment }      from 'Utils/Date';\nimport SideList     from './side-list.jsx';\n\nclass CompositeCalendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show_to  : false,\n            show_from: false,\n            list     : [\n                { children: localize('All time'),     onClick: () => this.selectDateRange(0),  duration: 0 },\n                { children: localize('Last 7 days'),  onClick: () => this.selectDateRange(7),  duration: 7 },\n                { children: localize('Last 30 days'), onClick: () => this.selectDateRange(30), duration: 30 },\n                { children: localize('Last 60 days'), onClick: () => this.selectDateRange(60), duration: 60 },\n                { children: localize('Last quarter'), onClick: () => this.selectDateRange(90), duration: 90 },\n            ],\n        };\n\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n\n    selectDateRange (from) {\n        this.hideCalendar();\n        this.applyBatch({\n            from: from ? toMoment().startOf('day').subtract(from, 'day').add(1, 's').unix() : null,\n            to  : toMoment().endOf('day').unix(),\n        });\n    }\n\n    get to_date_label() {\n        const date = epochToMoment(this.props.to);\n        return daysFromTodayTo(date) === 0 ? localize('Today') : date.format('MMM, DD YYYY');\n    }\n\n    get from_date_label() {\n        const date = epochToMoment(this.props.from);\n        return this.props.from ? date.format('MMM, DD YYYY') : '';\n    }\n\n    hideCalendar () {\n        this.setState({\n            show_from: false,\n            show_to  : false,\n        });\n    }\n\n    showCalendar(e) {\n        this.setState({\n            [`show_${e}`]: true,\n        });\n    }\n\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n    }\n\n    handleClickOutside (event) {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            event.stopPropagation();\n            event.preventDefault();\n            this.hideCalendar();\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setToDate (date) {\n        this.updateState('to', epochToMoment(date).endOf('day').unix());\n    }\n\n    setFromDate(date) {\n        this.updateState('from', date);\n    }\n\n    updateState(key, value) {\n        this.apply(key, value);\n    }\n\n    applyBatch (values) {\n        this.props.onChange(values);\n    }\n\n    apply(key, value) {\n        this.applyBatch({\n            [key]: value,\n        });\n    }\n\n    isPeriodDisabledTo (date) {\n        return date + 1 <= this.props.from || date > toMoment().endOf('day').unix();\n    }\n\n    isPeriodDisabledFrom (date) {\n        return date - 1 >= this.props.to;\n    }\n\n    render() {\n        const {\n            show_from,\n            show_to,\n            list,\n        } = this.state;\n\n        const {\n            to,\n            from,\n        } = this.props;\n        return (\n            // eslint-disable-next-line react/no-children-prop\n            <React.Fragment>\n                <div id='dt_composite_calendar_inputs' className='composite-calendar__input-fields'>\n                    <InputField id='dt_calendar_input_from' is_read_only={true} placeholder={localize('Date from')} icon={IconCalendar} onClick={this.showCalendar.bind(this, 'from')} value={this.from_date_label} />\n                    <InputField id='dt_calendar_input_to' is_read_only={true} placeholder={localize('Date to')} icon={IconCalendar} onClick={this.showCalendar.bind(this, 'to')} value={this.to_date_label} />\n                </div>\n                {show_to &&\n                <div className='composite-calendar' ref={this.setWrapperRef}>\n                    <SideList from={from} to={to} items={list} />\n                    <Lazy\n                        ctor={() => import(/* webpackChunkName: \"two-month-picker\" */ './two-month-picker.jsx')}\n                        should_load={true}\n                        has_progress={false}\n                        value={to}\n                        onChange={this.setToDate.bind(this)}\n                        isPeriodDisabled={this.isPeriodDisabledTo.bind(this)}\n                    />\n                </div>}\n                {show_from &&\n                <div className='composite-calendar' ref={this.setWrapperRef}>\n                    <SideList from={from} to={to} items={list} />\n                    <Lazy\n                        ctor={() => import(/* webpackChunkName: \"two-month-picker\" */ './two-month-picker.jsx')}\n                        should_load={true}\n                        has_progress={false}\n                        value={from}\n                        onChange={this.setFromDate.bind(this)}\n                        isPeriodDisabled={this.isPeriodDisabledFrom.bind(this)}\n                    />\n                </div>}\n            </React.Fragment>\n        );\n    }\n}\n\nCompositeCalendar.propTypes = {\n    from    : PropTypes.number,\n    onChange: PropTypes.func,\n    to      : PropTypes.number,\n};\nexport default CompositeCalendar;\n\n","import { PropTypes as MobxPropTypes }       from 'mobx-react';\nimport PropTypes                            from 'prop-types';\nimport React                                from 'react';\nimport { withRouter }                       from 'react-router-dom';\nimport { localize }                         from 'App/i18n';\nimport { urlFor }                           from '_common/url';\nimport DataTable                            from 'App/Components/Elements/DataTable';\nimport Localize                             from 'App/Components/Elements/localize.jsx';\nimport CompositeCalendar                    from 'App/Components/Form/CompositeCalendar/composite-calendar.jsx';\nimport { getContractPath }                  from 'App/Components/Routes/helpers';\nimport { website_name }                     from 'App/Constants/app-config';\nimport { getSupportedContracts }            from 'Constants';\nimport { connect }                          from 'Stores/connect';\nimport { getStatementTableColumnsTemplate } from '../Constants/data-table-constants';\nimport PlaceholderComponent                 from '../Components/placeholder-component.jsx';\nimport { ReportsMeta }                      from '../Components/reports-meta.jsx';\nimport EmptyTradeHistoryMessage             from '../Components/empty-trade-history-message.jsx';\nimport Shortcode                            from '../Helpers/shortcode';\n\nclass Statement extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    getRowAction = (row_obj) => {\n        let action;\n\n        if (row_obj.id && ['buy', 'sell'].includes(row_obj.action_type)) {\n            action = getSupportedContracts()[\n                Shortcode.extractInfoFromShortcode(row_obj.shortcode).category.toUpperCase()\n            ]\n                ? getContractPath(row_obj.id)\n                : {\n                    component: (\n                        <Localize\n                            i18n_default_text='This trade type is currently not supported on {{website_name}}. Please go to <0>Binary.com</0> for details.'\n                            values={{\n                                website_name,\n                            }}\n                            components={[\n                                <a key={0} className='link link--orange' rel='noopener noreferrer' target='_blank' href={urlFor('user/statementws', undefined, undefined, true)} />,\n                            ]}\n                        />\n                    ),\n                };\n        } else if (['deposit', 'withdrawal'].includes(row_obj.action_type)) {\n            action = {\n                message: row_obj.desc,\n            };\n        }\n\n        return action;\n    };\n\n    render() {\n        const {\n            component_icon,\n            currency,\n            data,\n            date_from,\n            date_to,\n            is_empty,\n            is_loading,\n            error,\n            handleScroll,\n            handleDateChange,\n            has_selected_date,\n        } = this.props;\n\n        if (error) return <p>{error}</p>;\n\n        const columns = getStatementTableColumnsTemplate(currency);\n        const filter_component = (\n            <React.Fragment>\n                <CompositeCalendar\n                    onChange={handleDateChange}\n                    from={date_from}\n                    to={date_to}\n                />\n            </React.Fragment>\n        );\n        return (\n            <React.Fragment>\n                <ReportsMeta\n                    i18n_heading={localize('Statement')}\n                    i18n_message={localize('View all transactions on your account, including trades, deposits, and withdrawals.')}\n                    filter_component={filter_component}\n                />\n                { (is_loading && data.length === 0) || is_empty ?\n                    <PlaceholderComponent\n                        is_loading={is_loading}\n                        has_selected_date={has_selected_date}\n                        is_empty={is_empty}\n                        empty_message_component={EmptyTradeHistoryMessage}\n                        component_icon={component_icon}\n                        localized_message={localize('You have no transactions yet.')}\n                        localized_period_message={localize('You have no transactions for this period.')}\n                    />\n                    :\n                    <DataTable\n                        className='statement'\n                        data_source={data}\n                        columns={columns}\n                        onScroll={handleScroll}\n                        getRowAction={(row) => this.getRowAction(row)}\n                        is_empty={is_empty}\n                    >\n                        <PlaceholderComponent\n                            is_loading={is_loading}\n                        />\n                    </DataTable>\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nStatement.propTypes = {\n    component_icon   : PropTypes.string,\n    data             : MobxPropTypes.arrayOrObservableArray,\n    date_from        : PropTypes.number,\n    date_to          : PropTypes.number,\n    error            : PropTypes.string,\n    handleScroll     : PropTypes.func,\n    has_selected_date: PropTypes.bool,\n    history          : PropTypes.object,\n    is_empty         : PropTypes.bool,\n    is_loading       : PropTypes.bool,\n    onMount          : PropTypes.func,\n    onUnmount        : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client }) => ({\n        currency         : client.currency,\n        date_from        : modules.statement.date_from,\n        date_to          : modules.statement.date_to,\n        data             : modules.statement.data,\n        error            : modules.statement.error,\n        handleScroll     : modules.statement.handleScroll,\n        handleDateChange : modules.statement.handleDateChange,\n        has_selected_date: modules.statement.has_selected_date,\n        is_empty         : modules.statement.is_empty,\n        is_loading       : modules.statement.is_loading,\n        onMount          : modules.statement.onMount,\n        onUnmount        : modules.statement.onUnmount,\n    })\n)(withRouter(Statement));\n"],"sourceRoot":""}