{"version":3,"sources":["webpack:///./App/Containers/notification-messages.jsx"],"names":["NotificationMessages","notification_messages","removeNotificationMessage","className","component","slice","max_display_notifications","map","notification","idx","appear","key","in","header","timeout","classNames","enter","enterDone","exit","unmountOnExit","data","propTypes","PropTypes","arrayOf","shape","closeOnClick","func","delay","number","string","is_auto_close","bool","message","oneOfType","node","size","oneOf","type","connect","ui"],"mappings":"iHAAA,mEAUMA,GAVN,QAU6B,SAAC,GAAD,IACzBC,EADyB,EACzBA,sBACAC,EAFyB,EAEzBA,0BAFyB,OAIzB,yBAAKC,UAAU,yBACX,kBAAC,kBAAD,CAAiBC,UAAU,OAEnBH,EACKI,MAAM,EAAGC,KACTC,KAAI,SAACC,EAAcC,GAAf,OACD,kBAAC,gBAAD,CACIC,QAAM,EACNC,IAAKF,EACLG,KAAMJ,EAAaK,OACnBC,QAAS,IACTC,WAAY,CACRL,OAAW,sBACXM,MAAW,sBACXC,UAAW,2BACXC,KAAW,sBAEfC,eAAa,GAEb,kBAAC,IAAD,CACIC,KAAMZ,EACNN,0BAA2BA,YAS3DF,EAAqBqB,UAAY,CAC7BpB,sBAAuBqB,IAAUC,QAC7BD,IAAUE,MAAM,CACZC,aAAeH,IAAUI,KACzBC,MAAeL,IAAUM,OACzBf,OAAeS,IAAUO,OACzBC,cAAeR,IAAUS,KACzBC,QAAeV,IAAUW,UAAU,CAACX,IAAUY,KAAMZ,IAAUO,SAC9DM,KAAeb,IAAUc,MAAM,CAAC,UAChCC,KAAef,IAAUc,MAAM,CAAC,UAAW,OAAQ,UAAW,SAAU,qBAGhFlC,0BAA2BoB,IAAUI,MAG1BY,uBACX,gBAAGC,EAAH,EAAGA,GAAH,MAAa,CACTtC,sBAA2BsC,EAAGtC,sBAC9BC,0BAA2BqC,EAAGrC,6BAHvBoC,CAKbtC,I","file":"js/notification-messages.1e251c0be77adf5ee0bc.js","sourcesContent":["import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport {\n    TransitionGroup,\n    CSSTransition }             from 'react-transition-group';\nimport { connect }              from 'Stores/connect';\nimport Notification, {\n    max_display_notifications } from '../Components/Elements/NotificationMessage';\nimport                               'Sass/app/_common/components/notification-message.scss';\n\nconst NotificationMessages = ({\n    notification_messages,\n    removeNotificationMessage,\n}) => (\n    <div className='notification-messages'>\n        <TransitionGroup component='div'>\n            {\n                notification_messages\n                    .slice(0, max_display_notifications)\n                    .map((notification, idx) => (\n                        <CSSTransition\n                            appear\n                            key={idx}\n                            in={!!notification.header}\n                            timeout={150}\n                            classNames={{\n                                appear   : 'notification--enter',\n                                enter    : 'notification--enter',\n                                enterDone: 'notification--enter-done',\n                                exit     : 'notification--exit',\n                            }}\n                            unmountOnExit\n                        >\n                            <Notification\n                                data={notification}\n                                removeNotificationMessage={removeNotificationMessage}\n                            />\n                        </CSSTransition>\n                    ))\n            }\n        </TransitionGroup>\n    </div>\n);\n\nNotificationMessages.propTypes = {\n    notification_messages: PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick : PropTypes.func,\n            delay        : PropTypes.number,\n            header       : PropTypes.string,\n            is_auto_close: PropTypes.bool,\n            message      : PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n            size         : PropTypes.oneOf(['small']),\n            type         : PropTypes.oneOf(['warning', 'info', 'success', 'danger', 'contract_sold']),\n        }),\n    ),\n    removeNotificationMessage: PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        notification_messages    : ui.notification_messages,\n        removeNotificationMessage: ui.removeNotificationMessage,\n    })\n)(NotificationMessages);\n"],"sourceRoot":""}