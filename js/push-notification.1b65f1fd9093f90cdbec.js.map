{"version":3,"sources":["webpack:///./App/Components/Elements/Notifications/notification-bar.jsx","webpack:///./App/Containers/push-notification.jsx"],"names":["NotificationBar","state","onClose","_this","setState","show","clearTimeout","timer","React","Component","_this2","this","setTimeout","props","autoShow","_this3","_this$props","className","content","duration","has_content_close","type","react_default","a","createElement","react_transition_group","in","timeout","classNames","enterDone","unmountOnExit","notification-bar--info","Children","map","child","cloneElement","bind","onClick","icon","propTypes","PropTypes","string","oneOfType","object","bool","PushNotification","_ref","push_notifications","notification","idx","notification_bar","key","array","connect","_ref2","ui"],"mappings":"y+BAMMA,2QACFC,MAAQ,KAcRC,QAAU,WACNC,EAAKC,SAAS,CAAEC,MAAM,GAAS,WAC3BC,aAAaH,EAAKI,kQAjBAC,IAAMC,6DAGZ,IAAAC,EAAAC,KACXA,KAAKV,MAAMI,OACZM,KAAKJ,MAAQK,WAAW,WACpBF,EAAKN,SAAS,CAAEC,MAAM,KACvBM,KAAKE,MAAMC,UAAY,qDAK9BR,aAAaK,KAAKJ,wCASb,IAAAQ,EAAAJ,KAAAK,EAODL,KAAKE,MALLI,EAFCD,EAEDC,UACAC,EAHCF,EAGDE,QACAC,EAJCH,EAIDG,SACAC,EALCJ,EAKDI,kBACAC,EANCL,EAMDK,KAGJ,OACIC,EAAAC,EAAAC,cAACC,EAAA,cAAD,CACIC,GAAIf,KAAKV,MAAMI,KACfsB,QAASR,GAAY,IACrBS,WAAY,CACRC,UAAW,+BAEfC,eAAa,GAEbR,EAAAC,EAAAC,cAAA,OACIP,UAAWW,IAAW,mBAAoB,CACtCG,yBAAmC,SAATV,EAC1BJ,eAGJK,EAAAC,EAAAC,cAAA,OAAKP,UAAU,6BAEPG,EACIZ,IAAMwB,SAASC,IAAIf,EAAS,SAAAgB,GAAK,OAC7B1B,IAAM2B,aAAaD,EAAO,CAAEhC,QAASa,EAAKb,QAAQkC,KAAKrB,OAEzDG,IAGXE,GACCE,EAAAC,EAAAC,cAAA,OACIa,QAAS1B,KAAKT,QAAQkC,KAAKzB,MAC3BM,UAAU,4BAEVK,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMA,KAAK,YAAYrB,UAAU,mEAS7DjB,EAAgBuC,UAAY,CACxBtB,UAAWuB,IAAUC,OACrBvB,QAAWsB,IAAUE,UAAU,CAC3BF,IAAUG,OACVH,IAAUC,SAEdrB,kBAAmBoB,IAAUI,KAC7BvB,KAAmBmB,IAAUC,QAGlBzC,QC/ET6C,EAAmB,SAAAC,GAAA,OAAAA,EACrBC,mBAEmBd,IAAI,SAACe,EAAcC,GAAQ,IAClCnC,EAAsCkC,EAAtClC,SAAUI,EAA4B8B,EAA5B9B,QAASC,EAAmB6B,EAAnB7B,SAAUE,EAAS2B,EAAT3B,KACrC,OACIC,EAAAC,EAAAC,cAAC0B,EAAD,CACIC,IAAKF,EACLnC,SAAUA,EACVI,QAASA,EACTC,SAAUA,EACVE,KAAMA,GAAQ,OACdD,mBAAmB,OAMnCyB,EAAiBN,UAAY,CACzBQ,mBAAoBP,IAAUY,OAGnBC,sBACX,SAAAC,GAAA,MAAa,CACTP,mBADJO,EAAGC,GACwBR,qBAFhBM,CAIbR","file":"js/push-notification.1b65f1fd9093f90cdbec.js","sourcesContent":["import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport Icon              from 'Assets/icon.jsx';\n\nclass NotificationBar extends React.Component {\n    state = {};\n\n    componentDidMount() {\n        if (!this.state.show) {\n            this.timer = setTimeout(() => {\n                this.setState({ show: true });\n            }, this.props.autoShow || 500);\n        }\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.timer);\n    }\n\n    onClose = () => {\n        this.setState({ show: false }, () => {\n            clearTimeout(this.timer);\n        });\n    };\n\n    render() {\n        const {\n            className,\n            content,\n            duration,\n            has_content_close,\n            type, // TODO: add support for different type of notifications\n        } = this.props;\n\n        return (\n            <CSSTransition\n                in={this.state.show}\n                timeout={duration || 500}\n                classNames={{\n                    enterDone: 'notification-bar--is-active',\n                }}\n                unmountOnExit\n            >\n                <div\n                    className={classNames('notification-bar', {\n                        'notification-bar--info': type === 'info',\n                        className,\n                    })}\n                >\n                    <div className='notification-bar__message'>\n                        {\n                            has_content_close ?\n                                React.Children.map(content, child =>\n                                    React.cloneElement(child, { onClose: this.onClose.bind(this) })\n                                )\n                                : content\n                        }\n                    </div>\n                    { !has_content_close &&\n                        <div\n                            onClick={this.onClose.bind(this)}\n                            className='notification-bar__button'\n                        >\n                            <Icon icon='IconClose' className='notification-bar__icon' />\n                        </div>\n                    }\n                </div>\n            </CSSTransition>\n        );\n    }\n}\n\nNotificationBar.propTypes = {\n    className: PropTypes.string,\n    content  : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    has_content_close: PropTypes.bool,\n    type             : PropTypes.string,\n};\n\nexport default NotificationBar;\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport NotificationBar from '../Components/Elements/Notifications/notification-bar.jsx';\n\nconst PushNotification = ({\n    push_notifications,\n}) => (\n    push_notifications.map((notification, idx) => {\n        const { autoShow, content, duration, type } = notification;\n        return (\n            <NotificationBar\n                key={idx}\n                autoShow={autoShow}\n                content={content}\n                duration={duration}\n                type={type || 'info'}\n                has_content_close={true}\n            />\n        );\n    })\n);\n\nPushNotification.propTypes = {\n    push_notifications: PropTypes.array,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        push_notifications: ui.push_notifications,\n    })\n)(PushNotification);\n"],"sourceRoot":""}