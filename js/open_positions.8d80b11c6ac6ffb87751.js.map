{"version":3,"sources":["webpack:///./Modules/Reports/Containers/open-positions.jsx"],"names":["OpenPositions","getRowAction","row_obj","is_unsupported","component","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","App_Components_Elements_localize_jsx__WEBPACK_IMPORTED_MODULE_7__","i18n_default_text","values","website_name","components","key","className","rel","target","href","urlFor","undefined","getContractPath","id","React","Component","this","props","onMount","onUnmount","_this$props","active_positions","component_icon","is_loading","error","is_empty","currency","totals","Fragment","Modules_Reports_Components_reports_meta_jsx__WEBPACK_IMPORTED_MODULE_11__","i18n_heading","localize","i18n_message","length","Modules_Reports_Components_placeholder_component_jsx__WEBPACK_IMPORTED_MODULE_13__","empty_message_component","EmptyTradeHistoryMessage","localized_message","App_Components_Elements_DataTable__WEBPACK_IMPORTED_MODULE_6__","columns","getOpenPositionsColumnsTemplate","footer","data_source","propTypes","MobxPropTypes","arrayOrObservableArray","PropTypes","string","history","object","bool","is_mobile","is_tablet","func","connect","_ref","modules","client","portfolio","is_active_empty","active_positions_totals","withRouter"],"mappings":"4iCAgBMA,2QASFC,aAAe,SAACC,GAAD,OACXA,EAAQC,eACJ,CACIC,UACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,kBAAkB,8GAClBC,OAAQ,CACJC,kBAEJC,WAAY,CACRP,EAAAC,EAAAC,cAAA,KAAGM,IAAK,EAAGC,UAAU,oBAAoBC,IAAI,sBAAsBC,OAAO,SAASC,KAAMC,iBAAO,wBAAoBC,OAAWA,GAAW,SAKxJC,YAAgBlB,EAAQmB,6PAxBVC,IAAMC,6DAE1BC,KAAKC,MAAMC,yDAIXF,KAAKC,MAAME,6CAqBN,IAAAC,EASDJ,KAAKC,MAPLI,EAFCD,EAEDC,iBACAC,EAHCF,EAGDE,eACAC,EAJCH,EAIDG,WACAC,EALCJ,EAKDI,MACAC,EANCL,EAMDK,SACAC,EAPCN,EAODM,SACAC,EARCP,EAQDO,OAGJ,OAAIH,EACO3B,EAAAC,EAAAC,cAAA,SAAIyB,GAIX3B,EAAAC,EAAAC,cAACF,EAAAC,EAAM8B,SAAP,KACI/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CACIC,aAAcC,mBAAS,kBACvBC,aAAcD,mBAAS,qFAEzBR,GAA0C,IAA5BF,EAAiBY,QAAiBR,EAC9C5B,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACIX,WAAYA,IAAeF,EAC3BI,SAAUA,EACVU,wBAAyBC,IACzBd,eAAgBA,EAChBe,kBAAmBN,mBAAS,qCAGhCL,GAAYL,EAAiBY,OAAS,GACtCpC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CACIhC,UAAU,iBACViC,QAASC,YAAgCd,GACzCe,OAAQd,EACRe,YAAarB,EACb5B,aAAcuB,KAAKvB,cAEnBI,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACIX,WAAYA,2CAUxC/B,EAAcmD,UAAY,CACtBtB,iBAAkBuB,YAAcC,uBAChCvB,eAAkBwB,IAAUC,OAC5BrB,SAAkBoB,IAAUC,OAC5BvB,MAAkBsB,IAAUC,OAC5BC,QAAkBF,IAAUG,OAC5BxB,SAAkBqB,IAAUI,KAC5B3B,WAAkBuB,IAAUI,KAC5BC,UAAkBL,IAAUI,KAC5BE,UAAkBN,IAAUI,KAC5BhC,QAAkB4B,IAAUO,KAC5BlC,UAAkB2B,IAAUO,KAC5B1B,OAAkBmB,IAAUG,QAGjBK,sBACX,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAAH,MAA0B,CACtB9B,SADJ6B,EAAYE,OACiB/B,SACzBL,iBAAkBmC,EAAQE,UAAUrC,iBACpCG,MAAkBgC,EAAQE,UAAUlC,MACpCC,SAAkB+B,EAAQE,UAAUC,gBACpCpC,WAAkBiC,EAAQE,UAAUnC,WACpCL,QAAkBsC,EAAQE,UAAUxC,QACpCC,UAAkBqC,EAAQE,UAAUvC,UACpCQ,OAAkB6B,EAAQE,UAAUE,0BAT7BN,CAWbO,YAAWrE","file":"js/open_positions.8d80b11c6ac6ffb87751.js","sourcesContent":["import { PropTypes as MobxPropTypes }      from 'mobx-react';\nimport PropTypes                           from 'prop-types';\nimport React                               from 'react';\nimport { withRouter }                      from 'react-router-dom';\nimport { localize }                        from 'App/i18n';\nimport { urlFor }                          from '_common/url';\nimport DataTable                           from 'App/Components/Elements/DataTable';\nimport Localize                            from 'App/Components/Elements/localize.jsx';\nimport { website_name }                    from 'App/Constants/app-config';\nimport { getContractPath }                 from 'App/Components/Routes/helpers';\nimport EmptyTradeHistoryMessage            from 'Modules/Reports/Components/empty-trade-history-message.jsx';\nimport { ReportsMeta }                     from 'Modules/Reports/Components/reports-meta.jsx';\nimport { getOpenPositionsColumnsTemplate } from 'Modules/Reports/Constants/data-table-constants';\nimport PlaceholderComponent                from 'Modules/Reports/Components/placeholder-component.jsx';\nimport { connect }                         from 'Stores/connect';\n\nclass OpenPositions extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    getRowAction = (row_obj) => (\n        row_obj.is_unsupported ?\n            {\n                component: (\n                    <Localize\n                        i18n_default_text='This trade type is currently not supported on {{website_name}}. Please go to <0>Binary.com</0> for details.'\n                        values={{\n                            website_name,\n                        }}\n                        components={[\n                            <a key={0} className='link link--orange' rel='noopener noreferrer' target='_blank' href={urlFor('user/portfoliows', undefined, undefined, true)} />,\n                        ]}\n                    />\n                ),\n            }\n            : getContractPath(row_obj.id)\n    );\n\n    render() {\n        const {\n            active_positions,\n            component_icon,\n            is_loading,\n            error,\n            is_empty,\n            currency,\n            totals,\n        } = this.props;\n\n        if (error) {\n            return <p>{error}</p>;\n        }\n\n        return (\n            <React.Fragment>\n                <ReportsMeta\n                    i18n_heading={localize('Open positions')}\n                    i18n_message={localize('View all active trades on your account that can still incur a profit or a loss.')}\n                />\n                {(is_loading && active_positions.length === 0) || is_empty ?\n                    <PlaceholderComponent\n                        is_loading={is_loading || !active_positions}\n                        is_empty={is_empty}\n                        empty_message_component={EmptyTradeHistoryMessage}\n                        component_icon={component_icon}\n                        localized_message={localize('You have no open positions yet.')}\n                    />\n                    :\n                    currency && active_positions.length > 0 &&\n                    <DataTable\n                        className='open-positions'\n                        columns={getOpenPositionsColumnsTemplate(currency)}\n                        footer={totals}\n                        data_source={active_positions}\n                        getRowAction={this.getRowAction}\n                    >\n                        <PlaceholderComponent\n                            is_loading={is_loading}\n                        />\n                    </DataTable>\n                }\n            </React.Fragment>\n\n        );\n    }\n}\n\nOpenPositions.propTypes = {\n    active_positions: MobxPropTypes.arrayOrObservableArray,\n    component_icon  : PropTypes.string,\n    currency        : PropTypes.string,\n    error           : PropTypes.string,\n    history         : PropTypes.object,\n    is_empty        : PropTypes.bool,\n    is_loading      : PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_tablet       : PropTypes.bool,\n    onMount         : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    totals          : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, client }) => ({\n        currency        : client.currency,\n        active_positions: modules.portfolio.active_positions,\n        error           : modules.portfolio.error,\n        is_empty        : modules.portfolio.is_active_empty,\n        is_loading      : modules.portfolio.is_loading,\n        onMount         : modules.portfolio.onMount,\n        onUnmount       : modules.portfolio.onUnmount,\n        totals          : modules.portfolio.active_positions_totals,\n    })\n)(withRouter(OpenPositions));\n"],"sourceRoot":""}