{"version":3,"sources":["webpack:///./Assets/Reports/icon-calendar.jsx","webpack:///./App/Components/Form/CompositeCalendar/list-item.jsx","webpack:///./App/Components/Form/CompositeCalendar/side-list.jsx","webpack:///./App/Components/Form/CompositeCalendar/two-month-picker.jsx","webpack:///./App/Components/Form/CompositeCalendar/composite-calendar.jsx","webpack:///./Modules/Reports/Containers/statement.jsx"],"names":["IconCalendar","_ref","className","props","_objectWithoutProperties","react_default","a","createElement","_extends","classNames","width","height","viewBox","fill","fillRule","d","propTypes","PropTypes","string","classNamePath","onClick","func","ListItem","is_active","children","composite-calendar__prepopulated-list--is-active","oneOfType","node","array","bool","SideList","items","from","to","map","item","duration","rest_of_props","side_list_objectWithoutProperties","flag","toMoment","endOf","unix","Math","ceil","isActive","list_item","side_list_extends","key","TwoMonthPicker","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","left_pane_date","subMonths","value","right_pane_date","React","PureComponent","e","setState","addMonths","date","range","diffInMonths","epochToMoment","isPeriodDisabled","r_date","startOf","current_month","subtract","onChange","moment","utc","currentTarget","dataset","_this$state","Fragment","calendar_header","calendar_date","calendar_view","navigateTo","navigateFrom","bind","validateFromArrows","hide_disabled_periods","switchView","calendar_body","selected_date","date_format","shouldDisableDate","hide_others","updateSelected","updateSelectedDate","validateToArrows","calendar_footer","use_icon","has_today_btn","jumpToCurrentMonth","number","CompositeCalendar","composite_calendar_classCallCheck","composite_calendar_getPrototypeOf","show_to","show_from","list","localize","selectDateRange","setWrapperRef","composite_calendar_assertThisInitialized","handleClickOutside","hideCalendar","applyBatch","add","_defineProperty","concat","wrapperRef","event","contains","target","stopPropagation","preventDefault","document","addEventListener","removeEventListener","updateState","apply","values","_this$props","input_field","is_read_only","placeholder","icon","showCalendar","from_date_label","to_date_label","ref","side_list","two_month_picker","setToDate","isPeriodDisabledTo","setFromDate","isPeriodDisabledFrom","daysFromTodayTo","format","Statement","getRowAction","row_obj","action","id","includes","action_type","getSupportedContracts","Shortcode","extractInfoFromShortcode","shortcode","category","toUpperCase","getContractPath","component","react__WEBPACK_IMPORTED_MODULE_2___default","App_Components_Elements_localize_jsx__WEBPACK_IMPORTED_MODULE_7__","i18n_default_text","website_name","components","rel","href","urlFor","undefined","message","desc","Component","onMount","onUnmount","_this2","component_icon","currency","data","date_from","date_to","is_empty","is_loading","error","handleScroll","handleDateChange","has_selected_date","columns","getStatementTableColumnsTemplate","filter_component","App_Components_Form_CompositeCalendar_composite_calendar_jsx__WEBPACK_IMPORTED_MODULE_8__","_Components_reports_meta_jsx__WEBPACK_IMPORTED_MODULE_15__","i18n_heading","i18n_message","length","_Components_placeholder_component_jsx__WEBPACK_IMPORTED_MODULE_14__","empty_message_component","EmptyTradeHistoryMessage","localized_message","localized_period_message","App_Components_Elements_DataTable__WEBPACK_IMPORTED_MODULE_6__","data_source","onScroll","row","MobxPropTypes","arrayOrObservableArray","history","object","connect","modules","client","statement","withRouter"],"mappings":"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","file":"js/statement.705e2e5346c693632db5.js","sourcesContent":["import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCalendar = ({ className, ...props }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' {...props}>\n        <g fill='#7F8397' fillRule='nonzero'>\n            <path className='color1-fill' d='M4 3H2v11h12V3h-2v.5a.5.5 0 1 1-1 0V3H5v.5a.5.5 0 0 1-1 0V3zm1-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 5h12v1H2V5z' />\n            <path className='color1-fill' d='M10.134 9H4.5a.5.5 0 0 1 0-1h5.634a1 1 0 1 1 0 1zM4 11h7.5a.5.5 0 1 1 0 1H4v-1z' />\n        </g>\n    </svg>\n);\n\nIconCalendar.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n    onClick      : PropTypes.func,\n};\n\nexport default IconCalendar;\n","import PropTypes  from 'prop-types';\nimport classNames from 'classnames';\nimport React      from 'react';\n\nconst ListItem = ({ onClick, is_active, children }) => (\n    <li\n        className={classNames({\n            'composite-calendar__prepopulated-list--is-active': is_active,\n        })}\n        onClick={onClick}\n    >\n        {children}\n    </li>\n);\n\nListItem.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.node,\n        PropTypes.array,\n    ]),\n    is_active: PropTypes.bool,\n    onClick  : PropTypes.func,\n};\n\nexport default ListItem;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { toMoment }      from 'Utils/Date';\nimport ListItem          from './list-item.jsx';\n\nconst isActive = (from, to, flag) => {\n    if (flag === 0) {\n        return toMoment().endOf('day').unix() === to && from === null;\n    }\n    return Math.ceil(to / 86400) - Math.ceil(from / 86400) === flag;\n\n};\n\nconst SideList = ({ items, from, to }) => (\n    <ul className='composite-calendar__prepopulated-list'>\n        {\n            items.map(item => {\n                const { duration, ...rest_of_props } = item;\n                const is_active = isActive(from, to, duration);\n                return (\n                    <ListItem key={duration} is_active={is_active} {...rest_of_props } />\n                );\n            })\n        }\n    </ul>\n);\n\nSideList.propTypes = {\n    items: PropTypes.array,\n};\n\nexport default SideList;\n","import PropTypes                from 'prop-types';\nimport moment                   from 'moment';\nimport React                    from 'react';\nimport CalendarBody            from 'App/Components/Elements/Calendar/calendar-body.jsx';\nimport CalendarHeader           from 'App/Components/Elements/Calendar/calendar-header.jsx';\nimport CalendarFooter           from 'App/Components/Elements/Calendar/calendar-footer.jsx';\nimport {\n    addMonths,\n    diffInMonths,\n    epochToMoment,\n    subMonths,\n    toMoment,\n}                               from 'Utils/Date';\n\nclass TwoMonthPicker extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            left_pane_date : subMonths(props.value, 1).unix(),\n            right_pane_date: props.value,\n        };\n    }\n\n    navigateFrom (e) {\n        this.setState({\n            left_pane_date : e.unix(),\n            right_pane_date: addMonths(e, 1).unix(),\n        });\n    }\n\n    /**\n     * Only allow previous months to be available to navigate. Disable other periods\n     *\n     * @param date\n     * @param range\n     * @returns {boolean}\n     */\n    validateFromArrows(date, range) {\n        return (range === 'year' || diffInMonths(epochToMoment(this.state.left_pane_date), date) !== -1);\n    }\n\n    /**\n     * Validate values to be date_from < date_to\n     */\n    shouldDisableDate(date) {\n        return this.props.isPeriodDisabled(date.unix());\n    }\n\n    /**\n     * Only allow next month to be available to navigate (unless next month is in the future).\n     * Disable other periods\n     *\n     * @param date\n     * @param range\n     * @returns {boolean}\n     */\n    validateToArrows(date, range) {\n        if (range === 'year') return true; // disallow year arrows\n        const r_date = epochToMoment(this.state.right_pane_date).startOf('month');\n        if (diffInMonths(toMoment().startOf('month'), r_date) === 0) return true; // future months are disallowed\n        return diffInMonths(r_date, date) !== 1;\n    }\n\n    jumpToCurrentMonth () {\n        const current_month = toMoment().endOf('month').unix();\n        this.setState({\n            left_pane_date : epochToMoment(current_month).endOf('month').subtract(1, 'month').unix(),\n            right_pane_date: current_month,\n        });\n    }\n\n    navigateTo(e) {\n        this.setState({\n            left_pane_date : subMonths(e, 1).unix(),\n            right_pane_date: toMoment(e).unix(),\n        });\n    }\n\n    updateSelectedDate (e) {\n        this.props.onChange(moment.utc(e.currentTarget.dataset.date, 'YYYY-MM-DD').unix());\n    }\n\n    render() {\n        const {\n            right_pane_date,\n            left_pane_date,\n        } = this.state;\n\n        return (\n            <React.Fragment>\n                <div className='first-month'>\n                    <CalendarHeader\n                        calendar_date={left_pane_date}\n                        calendar_view='date'\n                        navigateTo={this.navigateFrom.bind(this)}\n                        isPeriodDisabled={this.validateFromArrows.bind(this)}\n                        hide_disabled_periods={true}\n                        switchView={() => ({})}\n                    />\n                    <CalendarBody\n                        calendar_view='date'\n                        calendar_date={left_pane_date}\n                        selected_date={this.props.value}\n                        date_format='YYYY-MM-DD'\n                        isPeriodDisabled={this.shouldDisableDate.bind(this)}\n                        hide_others={true}\n                        updateSelected={this.updateSelectedDate.bind(this)}\n                    />\n                </div>\n                <div className='second-month'>\n                    <CalendarHeader\n                        calendar_date={right_pane_date}\n                        calendar_view='date'\n                        isPeriodDisabled={this.validateToArrows.bind(this)}\n                        navigateTo={this.navigateTo.bind(this)}\n                        hide_disabled_periods={true}\n                        switchView={() => ({})}\n                    />\n                    <CalendarBody\n                        calendar_view='date'\n                        calendar_date={right_pane_date}\n                        selected_date={this.props.value}\n                        date_format='YYYY-MM-DD'\n                        isPeriodDisabled={this.shouldDisableDate.bind(this)}\n                        hide_others={true}\n                        updateSelected={this.updateSelectedDate.bind(this)}\n                    />\n                    <CalendarFooter use_icon='IconCalendarForwardToday' has_today_btn={true} onClick={this.jumpToCurrentMonth.bind(this)} />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nTwoMonthPicker.propTypes = {\n    isPeriodDisabled: PropTypes.func,\n    onChange        : PropTypes.func,\n    value           : PropTypes.number,\n};\nexport default TwoMonthPicker;\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { localize }         from 'App/i18n';\nimport InputField           from 'App/Components/Form/InputField/input-field.jsx';\nimport IconCalendar         from 'Assets/Reports/icon-calendar.jsx';\nimport {\n    daysFromTodayTo,\n    epochToMoment,\n    toMoment,\n}                           from 'Utils/Date';\nimport SideList             from './side-list.jsx';\nimport TwoMonthPicker       from './two-month-picker.jsx';\n\nclass CompositeCalendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show_to  : false,\n            show_from: false,\n            list     : [\n                { children: localize('All time'),     onClick: () => this.selectDateRange(0),  duration: 0 },\n                { children: localize('Last 7 days'),  onClick: () => this.selectDateRange(7),  duration: 7 },\n                { children: localize('Last 30 days'), onClick: () => this.selectDateRange(30), duration: 30 },\n                { children: localize('Last 60 days'), onClick: () => this.selectDateRange(60), duration: 60 },\n                { children: localize('Last quarter'), onClick: () => this.selectDateRange(90), duration: 90 },\n            ],\n        };\n\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n\n    selectDateRange (from) {\n        this.hideCalendar();\n        this.applyBatch({\n            from: from ? toMoment().startOf('day').subtract(from, 'day').add(1, 's').unix() : null,\n            to  : toMoment().endOf('day').unix(),\n        });\n    }\n\n    get to_date_label() {\n        const date = epochToMoment(this.props.to);\n        return daysFromTodayTo(date) === 0 ? localize('Today') : date.format('MMM, DD YYYY');\n    }\n\n    get from_date_label() {\n        const date = epochToMoment(this.props.from);\n        return this.props.from ? date.format('MMM, DD YYYY') : '';\n    }\n\n    hideCalendar () {\n        this.setState({\n            show_from: false,\n            show_to  : false,\n        });\n    }\n\n    showCalendar(e) {\n        this.setState({\n            [`show_${e}`]: true,\n        });\n    }\n\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n    }\n\n    handleClickOutside (event) {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            event.stopPropagation();\n            event.preventDefault();\n            this.hideCalendar();\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setToDate (date) {\n        this.updateState('to', epochToMoment(date).endOf('day').unix());\n    }\n\n    setFromDate(date) {\n        this.updateState('from', date);\n    }\n\n    updateState(key, value) {\n        this.apply(key, value);\n    }\n\n    applyBatch (values) {\n        this.props.onChange(values);\n    }\n\n    apply(key, value) {\n        this.applyBatch({\n            [key]: value,\n        });\n    }\n\n    isPeriodDisabledTo (date) {\n        return date + 1 <= this.props.from || date > toMoment().endOf('day').unix();\n    }\n\n    isPeriodDisabledFrom (date) {\n        return date - 1 >= this.props.to;\n    }\n\n    render() {\n        const {\n            show_from,\n            show_to,\n            list,\n        } = this.state;\n\n        const {\n            to,\n            from,\n        } = this.props;\n        return (\n            // eslint-disable-next-line react/no-children-prop\n            <React.Fragment>\n                <div className='composite-calendar__input-fields'>\n                    <InputField is_read_only={true} placeholder={localize('Date from')} icon={IconCalendar} onClick={this.showCalendar.bind(this, 'from')} value={this.from_date_label} />\n                    <InputField is_read_only={true} placeholder={localize('Date to')} icon={IconCalendar} onClick={this.showCalendar.bind(this, 'to')} value={this.to_date_label} />\n                </div>\n                {show_to &&\n                <div className='composite-calendar' ref={this.setWrapperRef}>\n                    <SideList from={from} to={to} items={list} />\n                    <TwoMonthPicker\n                        value={to}\n                        onChange={this.setToDate.bind(this)}\n                        isPeriodDisabled={this.isPeriodDisabledTo.bind(this)}\n                    />\n                </div>}\n                {show_from &&\n                <div className='composite-calendar' ref={this.setWrapperRef}>\n                    <SideList from={from} to={to} items={list} />\n                    <TwoMonthPicker\n                        value={from}\n                        onChange={this.setFromDate.bind(this)}\n                        isPeriodDisabled={this.isPeriodDisabledFrom.bind(this)}\n                    />\n                </div>}\n            </React.Fragment>\n        );\n    }\n}\n\nCompositeCalendar.propTypes = {\n    from    : PropTypes.number,\n    onChange: PropTypes.func,\n    to      : PropTypes.number,\n};\nexport default CompositeCalendar;\n\n","import { PropTypes as MobxPropTypes }       from 'mobx-react';\nimport PropTypes                            from 'prop-types';\nimport React                                from 'react';\nimport { withRouter }                       from 'react-router-dom';\nimport { localize }                         from 'App/i18n';\nimport { urlFor }                           from '_common/url';\nimport DataTable                            from 'App/Components/Elements/DataTable';\nimport Localize                             from 'App/Components/Elements/localize.jsx';\nimport CompositeCalendar                    from 'App/Components/Form/CompositeCalendar/composite-calendar.jsx';\nimport { getContractPath }                  from 'App/Components/Routes/helpers';\nimport { website_name }                     from 'App/Constants/app-config';\nimport { getSupportedContracts }            from 'Constants';\nimport { connect }                          from 'Stores/connect';\nimport { getStatementTableColumnsTemplate } from '../Constants/data-table-constants';\nimport PlaceholderComponent                 from '../Components/placeholder-component.jsx';\nimport { ReportsMeta }                      from '../Components/reports-meta.jsx';\nimport EmptyTradeHistoryMessage             from '../Components/empty-trade-history-message.jsx';\nimport Shortcode                            from '../Helpers/shortcode';\n\nclass Statement extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    getRowAction = (row_obj) => {\n        let action;\n\n        if (row_obj.id && ['buy', 'sell'].includes(row_obj.action_type)) {\n            action = getSupportedContracts()[\n                Shortcode.extractInfoFromShortcode(row_obj.shortcode).category.toUpperCase()\n            ]\n                ? getContractPath(row_obj.id)\n                : {\n                    component: (\n                        <Localize\n                            i18n_default_text='This trade type is currently not supported on {{website_name}}. Please go to <0>Binary.com</0> for details.'\n                            values={{\n                                website_name,\n                            }}\n                            components={[\n                                <a key={0} className='link link--orange' rel='noopener noreferrer' target='_blank' href={urlFor('user/statementws', undefined, undefined, true)} />,\n                            ]}\n                        />\n                    ),\n                };\n        } else if (['deposit', 'withdrawal'].includes(row_obj.action_type)) {\n            action = {\n                message: row_obj.desc,\n            };\n        }\n\n        return action;\n    };\n\n    render() {\n        const {\n            component_icon,\n            currency,\n            data,\n            date_from,\n            date_to,\n            is_empty,\n            is_loading,\n            error,\n            handleScroll,\n            handleDateChange,\n            has_selected_date,\n        } = this.props;\n\n        if (error) return <p>{error}</p>;\n\n        const columns = getStatementTableColumnsTemplate(currency);\n        const filter_component = (\n            <React.Fragment>\n                <CompositeCalendar\n                    onChange={handleDateChange}\n                    from={date_from}\n                    to={date_to}\n                />\n            </React.Fragment>\n        );\n        return (\n            <React.Fragment>\n                <ReportsMeta\n                    i18n_heading={localize('Statement')}\n                    i18n_message={localize('View all transactions on your account, including trades, deposits, and withdrawals.')}\n                    filter_component={filter_component}\n                />\n                { (is_loading && data.length === 0) || is_empty ?\n                    <PlaceholderComponent\n                        is_loading={is_loading}\n                        has_selected_date={has_selected_date}\n                        is_empty={is_empty}\n                        empty_message_component={EmptyTradeHistoryMessage}\n                        component_icon={component_icon}\n                        localized_message={localize('You have no transactions yet.')}\n                        localized_period_message={localize('You have no transactions for this period.')}\n                    />\n                    :\n                    <DataTable\n                        className='statement'\n                        data_source={data}\n                        columns={columns}\n                        onScroll={handleScroll}\n                        getRowAction={(row) => this.getRowAction(row)}\n                        is_empty={is_empty}\n                    >\n                        <PlaceholderComponent\n                            is_loading={is_loading}\n                        />\n                    </DataTable>\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nStatement.propTypes = {\n    component_icon   : PropTypes.string,\n    data             : MobxPropTypes.arrayOrObservableArray,\n    date_from        : PropTypes.number,\n    date_to          : PropTypes.number,\n    error            : PropTypes.string,\n    handleScroll     : PropTypes.func,\n    has_selected_date: PropTypes.bool,\n    history          : PropTypes.object,\n    is_empty         : PropTypes.bool,\n    is_loading       : PropTypes.bool,\n    onMount          : PropTypes.func,\n    onUnmount        : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client }) => ({\n        currency         : client.currency,\n        date_from        : modules.statement.date_from,\n        date_to          : modules.statement.date_to,\n        data             : modules.statement.data,\n        error            : modules.statement.error,\n        handleScroll     : modules.statement.handleScroll,\n        handleDateChange : modules.statement.handleDateChange,\n        has_selected_date: modules.statement.has_selected_date,\n        is_empty         : modules.statement.is_empty,\n        is_loading       : modules.statement.is_loading,\n        onMount          : modules.statement.onMount,\n        onUnmount        : modules.statement.onUnmount,\n    })\n)(withRouter(Statement));\n"],"sourceRoot":""}